"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[7434],{67434:(W,M,o)=>{o.r(M),o.d(M,{default:()=>v});var p=o(15861),u=o(17626),d=(o(8314),o(62208)),P=(o(63290),o(90912),o(85931),o(26584),o(76898)),f=o(84682),y=o(36859),U=o(39351),K=o(13112),n=o(55376);class i{constructor(t,r){this.offset=t,this.extent=r}}let l=class extends K.Z{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}update(_,t){var r=this;return(0,p.Z)(function*(){const s=t.schema.processors[0];"heatmap"===s.type&&(0,f.Hg)(r._schema,s)&&(_.mesh=!0,r._schema=s)})()}onTileUpdate(_){for(const t of _.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(_){return this._tileKeyToFeatureSets.delete(_.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:_.id,data:{clear:!0}})}onTileMessage(_,t,r){var s=this;return(0,p.Z)(function*(){s._tileKeyToFeatureSets.has(_.key.id)||s._tileKeyToFeatureSets.set(_.key.id,new Map);const e=s._tileKeyToFeatureSets.get(_.key.id);if(e&&(0,d.pC)(t.addOrUpdate)&&t.addOrUpdate.hasFeatures&&e.set(t.addOrUpdate.instance,t),t.end){const a=[],O=function m(_){const t=_.key,r=new Map,s=256,e=U.I_,a=_.tileInfoView.tileInfo.isWrappable;return r.set((0,n.M)(t,-1,-1,a).id,new i([-e,-e],[e-s,e-s,e,e])),r.set((0,n.M)(t,0,-1,a).id,new i([0,-e],[0,e-s,e,e])),r.set((0,n.M)(t,1,-1,a).id,new i([e,-e],[0,e-s,s,e])),r.set((0,n.M)(t,-1,0,a).id,new i([-e,0],[e-s,0,e,e])),r.set((0,n.M)(t,1,0,a).id,new i([e,0],[0,0,s,e])),r.set((0,n.M)(t,-1,1,a).id,new i([-e,e],[e-s,0,e,s])),r.set((0,n.M)(t,0,1,a).id,new i([0,e],[0,0,e,s])),r.set((0,n.M)(t,1,1,a).id,new i([e,e],[0,0,s,s])),r}(_);s._tileKeyToFeatureSets.forEach((T,E)=>{if(E===_.key.id)T.forEach(c=>(0,d.yw)(c.addOrUpdate,h=>a.push(h)));else if(O.has(E)){const c=O.get(E),[h,R]=c.offset;T.forEach(B=>(0,d.yw)(B.addOrUpdate,L=>{const j=L.transform(h,R,1,1);a.push(j)}))}});const D=(0,y.QM)(a,s._schema.mesh,512,512);return s.remoteClient.invoke("tileRenderer.onTileData",{tileKey:_.key.id,intensityInfo:D},{...r,transferList:[D.matrix]})}})()}onTileError(_,t,r){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:_.id,error:t},r)}};l=(0,u._)([(0,P.j)("esri.views.2d.layers.features.processors.HeatmapProcessor")],l);const v=l}}]);