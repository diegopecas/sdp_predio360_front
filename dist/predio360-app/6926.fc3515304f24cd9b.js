"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[6926],{25688:(Ut,_t,tt)=>{tt.d(_t,{Z:()=>mt});var X=tt(17626),yt=tt(26584),ct=tt(86810),ft=tt(58817),pt=tt(63290),J=tt(77712),dt=tt(66656),wt=tt(76898);class Mt{constructor(I=null,K=null,N=null){this.minValue=I,this.maxValue=K,this.noDataValue=N}}var ut,at=tt(67313);let rt=ut=class extends ct.wq{static createEmptyBand(P,I){return new(ut.getPixelArrayConstructor(P))(I)}static combineBandMasks(P){if(P.length<2)return P[0];const I=P[0].length,K=new Uint8Array(I).fill(255);for(let N=0;N<P.length;N++){const H=P[N];for(let O=0;O<I;O++)H[O]||(K[O]=0)}return K}static getPixelArrayConstructor(P){let I;switch(P){case"u1":case"u2":case"u4":case"u8":I=Uint8Array;break;case"u16":I=Uint16Array;break;case"u32":I=Uint32Array;break;case"s8":I=Int8Array;break;case"s16":I=Int16Array;break;case"s32":I=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":I=Float32Array;break;case"f64":I=Float64Array}return I}constructor(P){super(P),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(P){if(!P)return"f32";let I=P.toLowerCase();return["u1","u2","u4"].includes(I)?I="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(I)||(I="f32"),I}getPlaneCount(){return this.pixels?.length}addData(P){if(!P.pixels||P.pixels.length!==this.width*this.height)throw new yt.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(P.pixels),this.statistics.push(P.statistics??new Mt)}getAsRGBA(){const P=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(P);break;default:this._fillFrom8Bit(P)}return new Uint8ClampedArray(P)}getAsRGBAFloat(){const P=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(P),P}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(K=>this._calculateBandStatistics(K,this.mask));const P=this.mask;let I=0;if(null!=P)for(let K=0;K<P.length;K++)P[K]&&I++;else I=this.width*this.height;this.validPixelCount=I}clamp(P){if(!P||"f64"===P||"f32"===P||!this.pixels)return;const[I,K]=(0,at.rL)(P),N=this.pixels,H=this.width*this.height,O=N.length;let L,q,j;const Y=[];for(let lt=0;lt<O;lt++){j=ut.createEmptyBand(P,H),L=N[lt];for(let $=0;$<H;$++)q=L[$],j[$]=q>K?K:q<I?I:q;Y.push(j)}this.pixels=Y,this.pixelType=P}extractBands(P){const{pixels:I,statistics:K}=this;if(null==P||0===P.length||!I||0===I.length)return this;const N=I.length,H=P.some($=>$>=I.length),O=N===P.length&&!P.some(($,D)=>$!==D);if(H||O)return this;const L=this.bandMasks?.length===N?P.map($=>this.bandMasks[$]):void 0;let{mask:q,validPixelCount:j}=this;const{width:Y,height:lt}=this;return L?.length&&(q=ut.combineBandMasks(L),j=q.filter($=>!!$).length),new ut({pixelType:this.pixelType,width:Y,height:lt,mask:q,bandMasks:L,validPixelCount:j,maskIsAlpha:this.maskIsAlpha,pixels:P.map($=>I[$]),statistics:K&&P.map($=>K[$])})}clone(){const P=new ut({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let I;null!=this.mask&&(P.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0)),this.bandMasks&&(P.bandMasks=this.bandMasks.map(N=>new Uint8Array(N)));const K=ut.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){P.pixels=[];const N=!!this.pixels[0].slice;for(I=0;I<this.pixels.length;I++)P.pixels[I]=N?this.pixels[I].slice(0,this.pixels[I].length):new K(this.pixels[I])}if(this.statistics)for(P.statistics=[],I=0;I<this.statistics.length;I++)P.statistics[I]=(0,ft.d9)(this.statistics[I]);return P.premultiplyAlpha=this.premultiplyAlpha,P}_fillFrom8Bit(P){const{mask:I,maskIsAlpha:K,premultiplyAlpha:N,pixels:H}=this;if(!P||!H?.length)return void pt.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let O,L,q,j;O=L=q=H[0],H.length>=3?(L=H[1],q=H[2]):2===H.length&&(L=H[1]);const Y=new Uint32Array(P),lt=this.width*this.height;if(O.length===lt)if(null!=I&&I.length===lt)if(K)for(j=0;j<lt;j++){const $=I[j];if($){const D=$/255;Y[j]=N?$<<24|q[j]*D<<16|L[j]*D<<8|O[j]*D:$<<24|q[j]<<16|L[j]<<8|O[j]}}else for(j=0;j<lt;j++)I[j]&&(Y[j]=255<<24|q[j]<<16|L[j]<<8|O[j]);else for(j=0;j<lt;j++)Y[j]=255<<24|q[j]<<16|L[j]<<8|O[j];else pt.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(P){const{pixels:I,mask:K,statistics:N}=this;if(!P||!I?.length)return void pt.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const H=this.pixelType;let O=1,L=0,q=1;if(N&&N.length>0){for(const C of N)null!=C.minValue&&(L=Math.min(L,C.minValue)),null!=C.maxValue&&null!=C.minValue&&(q=Math.max(q,C.maxValue-C.minValue));O=255/q}else{let C=255;"s8"===H?(L=-128,C=127):"u16"===H?C=65535:"s16"===H?(L=-32768,C=32767):"u32"===H?C=4294967295:"s32"===H?(L=-2147483648,C=2147483647):"f32"===H?(L=-34e38,C=34e38):"f64"===H&&(L=-Number.MAX_VALUE,C=Number.MAX_VALUE),O=255/(C-L)}const j=new Uint32Array(P),Y=this.width*this.height;let lt,$,D,v,E;if(lt=$=D=I[0],lt.length!==Y)return pt.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(I.length>=2)if($=I[1],I.length>=3&&(D=I[2]),null!=K&&K.length===Y)for(v=0;v<Y;v++)K[v]&&(j[v]=255<<24|(D[v]-L)*O<<16|($[v]-L)*O<<8|(lt[v]-L)*O);else for(v=0;v<Y;v++)j[v]=255<<24|(D[v]-L)*O<<16|($[v]-L)*O<<8|(lt[v]-L)*O;else if(null!=K&&K.length===Y)for(v=0;v<Y;v++)E=(lt[v]-L)*O,K[v]&&(j[v]=255<<24|E<<16|E<<8|E);else for(v=0;v<Y;v++)E=(lt[v]-L)*O,j[v]=255<<24|E<<16|E<<8|E}_fillFrom32Bit(P){const{pixels:I,mask:K}=this;if(!P||!I?.length)return pt.Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let N,H,O,L;N=H=O=I[0],I.length>=3?(H=I[1],O=I[2]):2===I.length&&(H=I[1]);const q=this.width*this.height;if(N.length!==q)return pt.Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let j=0;if(null!=K&&K.length===q)for(L=0;L<q;L++)P[j++]=N[L],P[j++]=H[L],P[j++]=O[L],P[j++]=1&K[L];else for(L=0;L<q;L++)P[j++]=N[L],P[j++]=H[L],P[j++]=O[L],P[j++]=1}_calculateBandStatistics(P,I){let K=1/0,N=-1/0;const H=P.length;let O,L=0;if(null!=I)for(O=0;O<H;O++)I[O]&&(L=P[O],K=L<K?L:K,N=L>N?L:N);else for(O=0;O<H;O++)L=P[O],K=L<K?L:K,N=L>N?L:N;return new Mt(K,N)}};(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"width",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"height",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"pixelType",void 0),(0,X._)([(0,dt.p)("pixelType")],rt.prototype,"castPixelType",null),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"validPixelCount",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"mask",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"maskIsAlpha",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"pixels",void 0),(0,X._)([(0,J.Cb)()],rt.prototype,"premultiplyAlpha",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"statistics",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"depthCount",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"noDataValues",void 0),(0,X._)([(0,J.Cb)({json:{write:!0}})],rt.prototype,"bandMasks",void 0),rt=ut=(0,X._)([(0,wt.j)("esri.layers.support.PixelBlock")],rt);const mt=rt},79751:(Ut,_t,tt)=>{tt.d(_t,{$f:()=>pt,CD:()=>ft,DX:()=>ct,Gd:()=>wt,Kh:()=>j,Pz:()=>Mt,Qh:()=>w,SJ:()=>at,Uk:()=>T,Uu:()=>A,Vl:()=>M,XV:()=>ut,a2:()=>P,nA:()=>L,nk:()=>J,oB:()=>O,pW:()=>D,sS:()=>H,us:()=>lt,wV:()=>rt,zp:()=>mt});var ct,ft,e,X=tt(25688),yt=tt(67313);(e=ct||(ct={}))[e.matchAny=0]="matchAny",e[e.matchAll=1]="matchAll",function(e){e[e.bestMatch=0]="bestMatch",e[e.fail=1]="fail"}(ft||(ft={}));const pt=6;function J(e){return null!=e&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function wt(e){if(!e?.length||e.some(n=>!J(n)))return null;if(1===e.length)return e[0]?.clone()??null;const i=e,{width:t,height:l,pixelType:s}=i[0];if(i.some(n=>n.width!==t||n.height!==l))return null;const o=i.map(({mask:n})=>n).filter(n=>null!=n);let r=null;o.length&&(r=new Uint8Array(t*l),r.set(o[0]),o.length>1&&N(o.slice(1),r));const h=[];i.forEach(({pixels:n})=>h.push(...n));const c=i.map(({statistics:n})=>n).filter(n=>n?.length),a=[];return c.forEach(n=>a.push(...n)),new X.Z({pixelType:s,width:t,height:l,mask:r,pixels:h,statistics:a.length?a:null})}function Mt(e){if(!e)return;const i=e.colormap;if(!i||0===i.length)return;const t=i.sort((p,f)=>p[0]-f[0]);let l=0;t[0][0]<0&&(l=t[0][0]);const s=Math.max(256,t[t.length-1][0]-l+1),o=new Uint8Array(4*s),r=[];let h,c=0,a=0;const n=5===t[0].length;if(s>65536)return t.forEach(p=>{r[p[0]-l]=n?p.slice(1):p.slice(1).concat([255])}),{indexed2DColormap:r,offset:l,alphaSpecified:n};if(e.fillUnspecified)for(h=t[a],c=h[0]-l;c<s;c++)o[4*c]=h[1],o[4*c+1]=h[2],o[4*c+2]=h[3],o[4*c+3]=n?h[4]:255,c===h[0]-l&&(h=a===t.length-1?h:t[++a]);else for(c=0;c<t.length;c++)h=t[c],a=4*(h[0]-l),o[a]=h[1],o[a+1]=h[2],o[a+2]=h[3],o[a+3]=n?h[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:n}}function at(e,i){if(!J(e)||!i||!i.indexedColormap&&!i.indexed2DColormap)return e;const t=e.clone(),l=t.pixels;let s=t.mask;const o=t.width*t.height;if(1!==l.length)return e;const{indexedColormap:r,indexed2DColormap:h,offset:c,alphaSpecified:a}=i;let n=0;const p=l[0],f=new Uint8Array(p.length),u=new Uint8Array(p.length),m=new Uint8Array(p.length);let x,g=0;if(r){const _=r.length-1;if(null!=s)for(n=0;n<o;n++)s[n]&&(g=4*(p[n]-c),g<c||g>_?s[n]=0:(f[n]=r[g],u[n]=r[g+1],m[n]=r[g+2],s[n]=r[g+3]));else{for(s=new Uint8Array(o),n=0;n<o;n++)g=4*(p[n]-c),g<c||g>_?s[n]=0:(f[n]=r[g],u[n]=r[g+1],m[n]=r[g+2],s[n]=r[g+3]);t.mask=s}}else if(h)if(null!=s)for(n=0;n<o;n++)s[n]&&(x=h[p[n]],f[n]=x[0],u[n]=x[1],m[n]=x[2],s[n]=x[3]);else{for(s=new Uint8Array(o),n=0;n<o;n++)x=h[p[n]],f[n]=x[0],u[n]=x[1],m[n]=x[2],s[n]=x[3];t.mask=s}return t.pixels=[f,u,m],t.statistics=null,t.pixelType="u8",t.maskIsAlpha=a,t}function ut(e,i){if(!J(e))return null;const{pixels:t,mask:l}=e,s=t.length;let o=i.lut;const{offset:r}=i;o&&1===o[0].length&&(o=t.map(()=>o));const h=[],c=i.outputPixelType||"u8";for(let n=0;n<s;n++){const p=rt(t[n],l,o[n],r||0,c);h.push(p)}const a=new X.Z({width:e.width,height:e.height,pixels:h,mask:l,pixelType:c});return a.updateStatistics(),a}function rt(e,i,t,l,s){const o=e.length,r=X.Z.createEmptyBand(s,o);if(i)for(let h=0;h<o;h++)i[h]&&(r[h]=t[e[h]-l]);else for(let h=0;h<o;h++)r[h]=t[e[h]-l];return r}function mt(e,i){if(!J(e))return null;const t=e.clone(),{pixels:l}=t,s=t.width*t.height,o=i.length,r=Math.floor(o/2),h=i[Math.floor(r)],c=l[0];let a,n,p,f,u,m,x=!1;const g=new Uint8Array(s),_=new Uint8Array(s),S=new Uint8Array(s);let b=t.mask;const U=4===i[0].mappedColor.length;for(b||(b=new Uint8Array(s),b.fill(U?255:1),t.mask=b),u=0;u<s;u++)if(b[u]){for(a=c[u],x=!1,m=r,n=h,p=0,f=o-1;f-p>1;){if(a===n.value){x=!0;break}a>n.value?p=m:f=m,m=Math.floor((p+f)/2),n=i[Math.floor(m)]}x||(a===i[p].value?(n=i[p],x=!0):a===i[f].value?(n=i[f],x=!0):a<i[p].value?(x=!1,n=null):a>i[p].value&&(a<i[f].value?(n=i[p],x=!0):f===o-1?(x=!1,n=null):(n=i[f],x=!0))),x?(g[u]=n.mappedColor[0],_[u]=n.mappedColor[1],S[u]=n.mappedColor[2],b[u]=n.mappedColor[3]):g[u]=_[u]=S[u]=b[u]=0}return t.pixels=[g,_,S],t.mask=b,t.pixelType="u8",t.maskIsAlpha=U,t}function P(e,i){if(!J(e))return null;const{width:t,height:l}=e,{inputRanges:s,outputValues:o,outputPixelType:r,noDataRanges:h,allowUnmatched:c,isLastInputRangeInclusive:a}=i,n=e.pixels[0],p=X.Z.createEmptyBand(r,n.length),f=e.mask,u=new Uint8Array(t*l);f?u.set(f):u.fill(255);const m=e.pixelType.startsWith("f")?1e-6:0,x=s.map(U=>U-m);x[0]=s[0],x[x.length-1]=s[s.length-1]+(a?1e-6:0);const g=s.length/2,[_,S]=(0,yt.rL)(r);for(let U=0;U<l;U++)for(let B=0;B<t;B++){const R=U*t+B;if(u[R]){const V=n[R];let G=!1;for(let z=g-1;z>=0;z--)if(V===x[2*z]||V>x[2*z]&&V<x[2*z+1]){p[R]=o[z],G=!0;break}G||(c?p[R]=V>S?S:V<_?_:V:u[R]=0)}}const b=h?.length;if(b)for(let U=0;U<l;U++)for(let B=0;B<t;B++){const R=U*t+B;if(!f||f[R]){const V=n[R];for(let G=0;G<b;G+=2)if(V>=h[G]&&V<=h[G+1]){p[R]=0,u[R]=0;break}}}return new X.Z({width:t,height:l,pixelType:r,pixels:[p],mask:u})}function I(e,i,t,l){const s=null!=t&&t.length>=2?new Set(t):null,o=1===t?.length?t[0]:null,r=!!i?.length;for(let h=0;h<e.length;h++)if(l[h]){const c=e[h];if(r){let a=!1;for(let n=0;n<i.length;n+=2)if(c>=i[n]&&c<=i[n+1]){a=!0;break}a||(l[h]=0)}l[h]&&(c===o||s?.has(c))&&(l[h]=0)}}function K(e,i){const t=e[0].length;for(let l=0;l<t;l++)if(i[l]){let s=!1;for(let o=0;o<e.length;o++)if(e[o][l]){s=!0;break}s||(i[l]=0)}}function N(e,i){const t=e[0].length;for(let l=0;l<t;l++)if(i[l]){let s=!1;for(let o=0;o<e.length;o++)if(0===e[o][l]){s=!0;break}s&&(i[l]=0)}}function H(e,i){if(!J(e))return null;const{width:t,height:l,pixels:s}=e,o=t*l,r=new Uint8Array(o);e.mask?r.set(e.mask):r.fill(255);const h=s.length,{includedRanges:c,noDataValues:a,outputPixelType:n,matchAll:p,lookups:f}=i;if(f){const u=[];for(let m=0;m<h;m++){const x=f[m],g=rt(s[m],r,x.lut,x.offset||0,"u8");u.push(g)}1===u.length?r.set(u[0]):p?K(u,r):N(u,r)}else if(p){const u=[];for(let m=0;m<h;m++){const x=new Uint8Array(o);x.set(r),I(s[m],c?.slice(2*m,2*m+2),a?.[m],x),u.push(x)}1===u.length?r.set(u[0]):K(u,r)}else for(let u=0;u<h;u++)I(s[u],c?.slice(2*u,2*u+2),a?.[u],r);return new X.Z({width:t,height:l,pixelType:n,pixels:s,mask:r})}function O(e){const{srcPixelType:i,inputRanges:t,outputValues:l,allowUnmatched:s,noDataRanges:o,isLastInputRangeInclusive:r,outputPixelType:h}=e;if("u8"!==i&&"s8"!==i&&"u16"!==i&&"s16"!==i)return null;const c=i.includes("16")?65536:256,a=i.includes("s")?-c/2:0,n=X.Z.createEmptyBand(h,c),p=new Uint8Array(c);s&&p.fill(255);const[f,u]=(0,yt.rL)(h);if(t?.length&&l?.length){const x=t.map(g=>g-1e-6);x[0]=t[0],r&&(x[x.length-1]=t[t.length-1]);for(let g=0;g<x.length;g++){const _=l[g]>u?u:l[g]<f?f:l[g],S=Math.ceil(x[2*g]-a),b=Math.floor(x[2*g+1]-a);for(let U=S;U<=b;U++)n[U]=_,p[U]=255}}if(o?.length)for(let m=0;m<o.length;m++){const x=Math.ceil(o[2*m]-a),g=Math.floor(o[2*m+1]-a);for(let _=x;_<=g;_++)p[_]=0}return{lut:n,offset:a,mask:p}}function L(e,i,t){if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const l=e.includes("16")?65536:256,s=e.includes("s")?-l/2:0,o=new Uint8Array(l);if(i)for(let r=0;r<i.length;r++){const h=Math.ceil(i[2*r]-s),c=Math.floor(i[2*r+1]-s);for(let a=h;a<=c;a++)o[a]=255}else o.fill(255);if(t)for(let r=0;r<t.length;r++)o[t[r]-s]=0;return{lut:o,offset:s}}function j(e,i){if(!e||0===e.length)return null;const t=e.find(m=>m.pixelBlock);if(null==t?.pixelBlock)return null;const l=(t.extent.xmax-t.extent.xmin)/t.pixelBlock.width,s=(t.extent.ymax-t.extent.ymin)/t.pixelBlock.height,o=.01*Math.min(l,s),r=e.sort((m,x)=>Math.abs(m.extent.ymax-x.extent.ymax)>o?x.extent.ymax-m.extent.ymax:Math.abs(m.extent.xmin-x.extent.xmin)>o?m.extent.xmin-x.extent.xmin:0),h=Math.min.apply(null,r.map(m=>m.extent.xmin)),c=Math.min.apply(null,r.map(m=>m.extent.ymin)),a=Math.max.apply(null,r.map(m=>m.extent.xmax)),n=Math.max.apply(null,r.map(m=>m.extent.ymax)),p={x:Math.round((i.xmin-h)/l),y:Math.round((n-i.ymax)/s)},f={width:Math.round((a-h)/l),height:Math.round((n-c)/s)},u={width:Math.round((i.xmax-i.xmin)/l),height:Math.round((i.ymax-i.ymin)/s)};return Math.round(f.width/t.pixelBlock.width)*Math.round(f.height/t.pixelBlock.height)!==r.length||p.x<0||p.y<0||f.width<u.width||f.height<u.height?null:{extent:i,pixelBlock:lt(r.map(m=>m.pixelBlock),f,{clipOffset:p,clipSize:u})}}function Y(e,i,t,l,s,o){const{width:r,height:h}=t.block,{x:c,y:a}=t.offset,{width:n,height:p}=t.mosaic,f=function q(e,i,t,l,s,o,r,h){return{xmin:s<=t*e?0:s<t*e+e?s-t*e:e,ymin:o<=l*i?0:o<l*i+i?o-l*i:i,xmax:s+r<=t*e?0:s+r<t*e+e?s+r-t*e:e,ymax:o+h<=l*i?0:o+h<l*i+i?o+h-l*i:i}}(r,h,l,s,c,a,n,p);let u=0,m=0;if(o){const x=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,g=r*o.resolutionX,_=o.startX+l*g;_<x&&_+g>x?m=o.rightPadding:_>=x&&(u=o.leftMargin-o.rightPadding,m=0)}if(f.xmax-=m,"number"!=typeof i)for(let x=f.ymin;x<f.ymax;x++){const g=(s*h+x-a)*n+(l*r-c)+u,_=x*r;for(let S=f.xmin;S<f.xmax;S++)e[g+S]=i[_+S]}else for(let x=f.ymin;x<f.ymax;x++){const g=(s*h+x-a)*n+(l*r-c)+u;for(let _=f.xmin;_<f.xmax;_++)e[g+_]=i}}function lt(e,i,t={}){const{clipOffset:l,clipSize:s,alignmentInfo:o,blockWidths:r}=t;if(r)return function $(e,i,t){const l=e.find(g=>null!=g);if(null==l)return null;const s=e.some(g=>null==g||!!g.mask),{width:o,height:r}=i,h=s?new Uint8Array(o*r):null,{blockWidths:c}=t,a=[],n=l.getPlaneCount(),p=X.Z.getPixelArrayConstructor(l.pixelType);if(s)for(let g=0,_=0;g<e.length;_+=c[g],g++){const S=e[g];if(!J(S))continue;const b=S.mask;for(let U=0;U<r;U++)for(let B=0;B<c[g];B++)h[U*o+B+_]=null==b?255:b[U*S.width+B]}const f=e.some(g=>g?.bandMasks&&g.bandMasks.length>1),u=f?[]:void 0,m=o*r;for(let g=0;g<n;g++){const _=new p(m),S=f?new Uint8Array(m):void 0;for(let b=0,U=0;b<e.length;U+=c[b],b++){const B=e[b];if(!J(B))continue;const R=B.pixels[g];if(null!=R){for(let V=0;V<r;V++)for(let G=0;G<c[b];G++)_[V*o+G+U]=R[V*B.width+G];if(S){const V=B.bandMasks?.[g]??B.mask;for(let G=0;G<r;G++)for(let z=0;z<c[b];z++)S[G*o+z+U]=V?V[G*B.width+z]:255}}}a.push(_),u&&S&&u.push(S)}const x=new X.Z({width:o,height:r,mask:h,bandMasks:u,pixels:a,pixelType:l.pixelType});return x.updateStatistics(),x}(e,i,{blockWidths:r});const h=e.find(W=>J(W));if(null==h)return null;const c=s?s.width:i.width,a=s?s.height:i.height,n=h.width,p=h.height,f=i.width/n,u=i.height/p,m={offset:l||{x:0,y:0},mosaic:s||i,block:{width:n,height:p}},x=h.pixelType,g=X.Z.getPixelArrayConstructor(x),_=h.pixels.length,S=[];let b,U;for(let W=0;W<_;W++){U=new g(c*a);for(let Q=0;Q<u;Q++)for(let Z=0;Z<f;Z++){const et=e[Q*f+Z];J(et)&&(b=et.pixels[W],Y(U,b,m,Z,Q,o))}S.push(U)}const B=e.some(W=>null==W||null!=W.mask&&W.mask.length>0),R=e.some(W=>W?.bandMasks&&W.bandMasks.length>1),V=B?new Uint8Array(c*a):void 0,G=R?[]:void 0;if(V){for(let W=0;W<u;W++)for(let Q=0;Q<f;Q++){const Z=e[W*f+Q];Y(V,(null!=Z?Z.mask:null)??(Z?255:0),m,Q,W,o)}if(G)for(let W=0;W<_;W++){const Q=new Uint8Array(c*a);for(let Z=0;Z<u;Z++)for(let et=0;et<f;et++){const ht=e[Z*f+et];Y(Q,ht?.bandMasks?.[W]??ht?.mask??(ht?255:0),m,et,Z,o)}G.push(Q)}}const z=new X.Z({width:c,height:a,pixels:S,pixelType:x,bandMasks:G,mask:V});return z.updateStatistics(),z}function D(e,i,t){if(!J(e))return null;const{width:l,height:s}=e,o=i.x,r=i.y,h=t.width+o,c=t.height+r;if(o<0||r<0||h>l||c>s||0===o&&0===r&&h===l&&c===s)return e;e.mask||(e.mask=new Uint8Array(l*s));const a=e.mask;for(let n=0;n<s;n++){const p=n*l;for(let f=0;f<l;f++)a[p+f]=n<r||n>=c||f<o||f>=h?0:1}return e.updateStatistics(),e}function E(e){if(0===e.size)return 0;let i=0,t=-1,l=0;const s=e.keys();let o=s.next();for(;!o.done;)l=e.get(o.value),l>i&&(t=o.value,i=l),o=s.next();return t}function C(e,i,t){if(0===t)return;const l=e.get(i);1===l?e.delete(i):e.set(i,l-1)}function F(e,i,t){0!==t&&e.set(i,e.has(i)?e.get(i)+1:1)}function d(e,i,t){let{x:l,y:s}=i;const{width:o,height:r}=t;if(0===l&&0===s&&r===e.height&&o===e.width)return e;const{width:h,height:c}=e,a=Math.max(0,s),n=Math.max(0,l),p=Math.min(l+o,h),f=Math.min(s+r,c);if(p<0||f<0||!J(e))return null;l=Math.max(0,-l),s=Math.max(0,-s);const{pixels:u}=e,m=o*r,x=u.length,g=[];for(let U=0;U<x;U++){const B=u[U],R=X.Z.createEmptyBand(e.pixelType,m);for(let V=a;V<f;V++){const G=V*h;let z=(V+s-a)*o+l;for(let W=n;W<p;W++)R[z++]=B[G+W]}g.push(R)}const _=new Uint8Array(m),S=e.mask;for(let U=a;U<f;U++){const B=U*h;let R=(U+s-a)*o+l;for(let V=n;V<p;V++)_[R++]=S?S[B+V]:1}const b=new X.Z({width:t.width,height:t.height,pixelType:e.pixelType,pixels:g,mask:_});return b.updateStatistics(),b}function k(e,i=!0){if(!J(e))return null;const{pixels:t,width:l,height:s,mask:o,pixelType:r}=e,h=[],c=Math.round(l/2),a=Math.round(s/2),n=s-1,p=l-1;for(let u=0;u<t.length;u++){const m=t[u],x=X.Z.createEmptyBand(r,c*a);let g=0;for(let _=0;_<s;_+=2)for(let S=0;S<l;S+=2){const b=m[_*l+S];if(i){const U=S===p?b:m[_*l+S+1],B=_===n?b:m[_*l+S+l];x[g++]=(b+U+B+(S===p?B:_===n?U:m[_*l+S+l+1]))/4}else x[g++]=b}h.push(x)}let f=null;if(null!=o){f=new Uint8Array(c*a);let u=0;for(let m=0;m<s;m+=2)for(let x=0;x<l;x+=2){const g=o[m*l+x];if(i){const _=x===p?g:o[m*l+x+1],S=m===n?g:o[m*l+x+l];f[u++]=g*_*S*(x===p?S:m===n?_:o[m*l+x+l+1])?1:0}else f[u++]=g}}return new X.Z({width:c,height:a,pixelType:r,pixels:h,mask:f})}function M(e,i,t=0,l=!0){if(!J(e))return null;const{width:s,height:o}=i;let{width:r,height:h}=e;const c=new Map,a={x:0,y:0},n=1+t;let p=e;for(let f=0;f<n;f++){const u=Math.ceil(r/s),m=Math.ceil(h/o);for(let x=0;x<m;x++){a.y=x*o;for(let g=0;g<u;g++){a.x=g*s;const _=d(p,a,i);c.set(`${f}/${x}/${g}`,_)}}f<n-1&&(p=k(p,l)),r=Math.round(r/2),h=Math.round(h/2)}return c}function A(e){const{pixelBlock:i,tileSize:t,level:l,row:s,col:o,useBilinear:r}=e;if(!J(i))return null;const{width:h,height:c}=t,a=2**l,n=a*h,p=a*c;let f=d(i,{y:s*p,x:o*n},{width:n,height:p});if(!f)return null;for(let u=l;u>0;u--)f=k(f,r);return f}function y(e,i,t,l,s=0){const{width:o,height:r}=e,{width:h,height:c}=i,a=l.cols,n=l.rows,p=Math.ceil(h/a-.1/a),f=Math.ceil(c/n-.1/n);let u,m,x,g,_,S,b;const U=p*a,B=U*f*n,R=new Float32Array(B),V=new Float32Array(B),G=new Uint32Array(B),z=new Uint32Array(B);let W,Q,Z=0;for(let et=0;et<f;et++)for(let ht=0;ht<p;ht++){u=12*(et*p+ht),m=t[u],x=t[u+1],g=t[u+2],_=t[u+3],S=t[u+4],b=t[u+5];for(let ot=0;ot<n;ot++){Z=(et*n+ot)*U+ht*a,Q=(ot+.5)/n;for(let nt=0;nt<ot;nt++)W=(nt+.5)/a,R[Z+nt]=(m*W+x*Q+g)*o+s,V[Z+nt]=(_*W+S*Q+b)*r+s,G[Z+nt]=Math.floor(R[Z+nt]),z[Z+nt]=Math.floor(V[Z+nt])}u+=6,m=t[u],x=t[u+1],g=t[u+2],_=t[u+3],S=t[u+4],b=t[u+5];for(let ot=0;ot<n;ot++){Z=(et*n+ot)*U+ht*a,Q=(ot+.5)/n;for(let nt=ot;nt<a;nt++)W=(nt+.5)/a,R[Z+nt]=(m*W+x*Q+g)*o+s,V[Z+nt]=(_*W+S*Q+b)*r+s,G[Z+nt]=Math.floor(R[Z+nt]),z[Z+nt]=Math.floor(V[Z+nt])}}return{offsets_x:R,offsets_y:V,offsets_xi:G,offsets_yi:z,gridWidth:U}}function w(e,i){const{coefficients:t,spacing:l}=i,{offsets_x:s,offsets_y:o,gridWidth:r}=y(e,e,t,{rows:l[0],cols:l[1]}),{width:h,height:c}=e,a=new Float32Array(h*c),n=180/Math.PI;for(let p=0;p<c;p++)for(let f=0;f<h;f++){const u=p*r+f,m=0===p?u:u-r,x=p===c-1?u:u+r,g=s[m]-s[x],_=o[x]-o[m];if(isNaN(g)||isNaN(_))a[p*h+f]=90;else{let S=Math.atan2(_,g)*n;S=(360+S)%360,a[p*h+f]=S}}return a}function T(e,i,t,l,s="nearest"){if(!J(e))return null;"majority"===s&&(e=function v(e){if(!J(e))return null;const i=e.clone(),{width:t,height:l,pixels:s}=e,o=s[0],r=i.pixels[0],h=e.mask;for(let c=2;c<l-1;c++){const a=new Map;for(let p=c-2;p<c+2;p++)for(let f=0;f<4;f++){const u=p*t+f;F(a,o[u],h?h[u]:1)}r[c*t]=E(a),r[c*t+1]=r[c*t+2]=r[c*t];let n=3;for(;n<t-1;n++){let p=(c-2)*t+n+1;F(a,o[p],h?h[p]:1),p=(c-1)*t+n+1,F(a,o[p],h?h[p]:1),p=c*t+n+1,F(a,o[p],h?h[p]:1),p=(c+1)*t+n+1,F(a,o[p],h?h[p]:1),p=(c-2)*t+n-3,C(a,o[p],h?h[p]:1),p=(c-1)*t+n-3,C(a,o[p],h?h[p]:1),p=c*t+n-3,C(a,o[p],h?h[p]:1),p=(c+1)*t+n-3,C(a,o[p],h?h[p]:1),r[c*t+n]=E(a)}r[c*t+n+1]=r[c*t+n]}for(let c=0;c<t;c++)r[c]=r[t+c]=r[2*t+c],r[(l-1)*t+c]=r[(l-2)*t+c];return i.updateStatistics(),i}(e));const{pixels:o,mask:r,bandMasks:h,pixelType:c}=e,a=e.width,n=e.height,p=X.Z.getPixelArrayConstructor(c),f=o.length,{width:u,height:m}=i;let x=!1;for(let Z=0;Z<t.length;Z+=3)-1===t[Z]&&-1===t[Z+1]&&-1===t[Z+2]&&(x=!0);const{offsets_x:g,offsets_y:_,offsets_xi:S,offsets_yi:b,gridWidth:U}=y({width:a,height:n},i,t,l,"majority"===s?.5:0);let B;const R=(Z,et,ht,ot)=>{const nt=Z instanceof Float32Array||Z instanceof Float64Array?0:.5;for(let it=0;it<m;it++){B=it*U;for(let st=0;st<u;st++){if(g[B]<0||_[B]<0)Z[it*u+st]=0;else if(ot)Z[it*u+st]=et[S[B]+b[B]*a];else{const gt=Math.floor(g[B]),xt=Math.floor(_[B]),kt=Math.ceil(g[B]),At=Math.ceil(_[B]),vt=g[B]-gt,bt=_[B]-xt;Z[it*u+st]=!ht||ht[gt+xt*a]&&ht[kt+xt*a]&&ht[gt+At*a]&&ht[kt+At*a]?(1-bt)*((1-vt)*et[gt+xt*a]+vt*et[kt+xt*a])+bt*((1-vt)*et[gt+At*a]+vt*et[kt+At*a])+nt:et[S[B]+b[B]*a]}B++}}},V=[];let G;const z=h?.length===f,W=[];for(let Z=0;Z<f;Z++){if(z){const et=new Uint8Array(u*m);R(et,h[Z],h[Z],!0),W.push(et)}G=new p(u*m),R(G,o[Z],z?h[Z]:r,"nearest"===s||"majority"===s),V.push(G)}const Q=new X.Z({width:u,height:m,pixelType:c,pixels:V,bandMasks:z?W:void 0});if(null!=r)Q.mask=new Uint8Array(u*m),R(Q.mask,r,r,!0);else if(x){Q.mask=new Uint8Array(u*m);for(let Z=0;Z<u*m;Z++)Q.mask[Z]=g[Z]<0||_[Z]<0?0:1}return Q.updateStatistics(),Q}},30994:(Ut,_t,tt)=>{tt.d(_t,{BH:()=>I,K:()=>E,KC:()=>mt,NL:()=>dt,QI:()=>P,Tg:()=>at,Yx:()=>wt,nb:()=>F,wF:()=>C,xQ:()=>rt});var X=tt(2076),yt=tt(25688),ct=tt(79751);const ft=new Map;ft.set("meter-per-second",1),ft.set("kilometer-per-hour",.277778),ft.set("knots",.514444),ft.set("feet-per-second",.3048),ft.set("mile-per-hour",.44704);const pt=180/Math.PI,J=5,dt=new X.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function wt(d,k){return ft.get(d)/ft.get(k)||1}function Mt(d){return(450-d)%360}function at(d,k="geographic"){const[M,A]=d,y=Math.sqrt(M*M+A*A);let w=Math.atan2(A,M)*pt;return w=(360+w)%360,"geographic"===k&&(w=Mt(w)),[y,w]}function ut(d,k="geographic"){let M=d[1];"geographic"===k&&(M=Mt(M)),M%=360;const A=d[0];return[A*Math.cos(M/pt),A*Math.sin(M/pt)]}function rt(d,k,M,A="geographic"){if(!(0,ct.nk)(d)||null==M)return d;const y="vector-magdir"===k?d.clone():mt(d,k),w=y.pixels[1];for(let T=0;T<w.length;T++)w[T]="geographic"===A?(w[T]+M[T]+270)%360:(w[T]+360-M[T])%360;return"vector-magdir"===k?y:mt(y,"vector-magdir")}function mt(d,k,M="geographic",A=1){if(!(0,ct.nk)(d))return d;const{pixels:y,width:w,height:T}=d,e=w*T,i=y[0],t=y[1],l=d.pixelType.startsWith("f")?d.pixelType:"f32",s=yt.Z.createEmptyBand(l,e),o=yt.Z.createEmptyBand(l,e);let r=0;for(let c=0;c<T;c++)for(let a=0;a<w;a++)"vector-uv"===k?([s[r],o[r]]=at([i[r],t[r]],M),s[r]*=A):([s[r],o[r]]=ut([i[r],t[r]],M),s[r]*=A,o[r]*=A),r++;const h=new yt.Z({pixelType:l,width:d.width,height:d.height,mask:d.mask,validPixelCount:d.validPixelCount,maskIsAlpha:d.maskIsAlpha,pixels:[s,o]});return h.updateStatistics(),h}function P(d,k,M=1){if(1===M||!(0,ct.nk)(d))return d;const A=d.clone(),{pixels:y,width:w,height:T}=A,e=y[0],i=y[1];let t=0;for(let l=0;l<T;l++)for(let s=0;s<w;s++)"vector-uv"===k?(e[t]*=M,i[t]*=M):e[t]*=M,t++;return A.updateStatistics(),A}function I(d,k,M,A,y){if(null==y||!y.spatialReference.equals(d.spatialReference))return{extent:d,width:Math.round(k/A),height:Math.round(M/A),resolution:d.width/k};const w=y.xmin,T=y.ymax,e=(d.xmax-d.xmin)/k*A,i=(d.ymax-d.ymin)/M*A,t=(e+i)/2;return d.xmin=w+Math.floor((d.xmin-w)/e)*e,d.xmax=w+Math.ceil((d.xmax-w)/e)*e,d.ymin=T+Math.floor((d.ymin-T)/i)*i,d.ymax=T+Math.ceil((d.ymax-T)/i)*i,{extent:d,width:Math.round(d.width/e),height:Math.round(d.height/i),resolution:t}}const K=N(0,0,0);function N(d=0,k=0,M=Math.PI,A=!0){A&&(M=(2*Math.PI-M)%(2*Math.PI));const y=A?-1:1,w=13*y,T=-7*y,e=-2*y,i=-16*y,t=21.75,[l,s]=O(0,k+w,M,t),[o,r]=O(d-5.5,k+T,M,t),[h,c]=O(d+5.5,k+T,M,t),[a,n]=O(d-1.5,k+e,M,t),[p,f]=O(d+1.5,k+e,M,t),[u,m]=O(d-1.5,k+i,M,t),[x,g]=O(d+1.5,k+i,M,t);return[l,s,o,r,a,n,p,f,h,c,u,m,x,g]}function H(d=0,k=Math.PI,M=!0){M&&(k=(2*Math.PI-k)%(2*Math.PI));const y=M?-1:1,w=5*y,T=20*y,e=25*y,i=45,r=2*y,h=M?1:-1,c=5*h;let[a,n]=[0+c,0-T],[p,f]=[a+2*h,n],[u,m]=[p-0*h,f+r],[x,g]=[0-c,0-e],[_,S]=[x+0*h,g-r],b=Math.ceil(d/J),U=Math.floor(b/10);b-=8*U;const B=[],R=[];for(let nt=0;nt<b/2;nt++,U--){U<=0&&b%2==1&&nt===(b-1)/2&&(x=0,_=x+0*h,g=(g+n)/2,S=g-r);const[it,st]=O(x,g,k,i);if(U>0){const[gt,xt]=O(p,g,k,i),[kt,At]=O(a,n,k,i);B.push(gt),B.push(xt),B.push(it),B.push(st),B.push(kt),B.push(At)}else{const[gt,xt]=O(p,f,k,i),[kt,At]=O(u,m,k,i),[vt,bt]=O(_,S,k,i);R.push(it),R.push(st),R.push(vt),R.push(bt),R.push(kt),R.push(At),R.push(gt),R.push(xt)}g+=w,n+=w,f+=w,m+=w,S+=w}const[V,G]=O(0+c,0+T,k,i),z=7*h,[W,Q]=O(0+z,0+T,k,i),[Z,et]=O(0+c,0-e,k,i),[ht,ot]=O(0+z,0-e,k,i);return{pennants:B,barbs:R,shaft:[V,G,W,Q,Z,et,ht,ot]}}function O(d,k,M,A=1){const y=Math.sqrt(d*d+k*k)/A,w=(2*Math.PI+Math.atan2(k,d))%(2*Math.PI);return[y,(2*Math.PI+w-M)%(2*Math.PI)]}const L=[0,1,3,6,10,16,21,27,33,40,47,55,63],q=[0,.5,1,1.5,2],j=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(d,k,M,A){const y=wt(A||"knots",M);let w;for(w=1;w<k.length;w++)if(w===k.length-1){if(d<k[w]*y)break}else if(d<=k[w]*y)break;return Math.min(w-1,k.length-2)}function lt(d,k,M,A,y){let w=0;switch(k){case"beaufort_kn":w=Y(d,L,"knots",M);break;case"beaufort_km":w=Y(d,L,"kilometer-per-hour",M);break;case"beaufort_ft":w=Y(d,L,"feet-per-second",M);break;case"beaufort_m":w=Y(d,L,"meter-per-second",M);break;case"classified_arrow":w=Y(d,y??[],A,M);break;case"ocean_current_m":w=Y(d,q,"meter-per-second",M);break;case"ocean_current_kn":w=Y(d,j,"knots",M)}return w}const D=[];function E(d,k){let A=0,y=0;const{width:w,height:T,mask:e}=d,i=d.pixels[0],t=[],l=[],s=wt(dt.fromJSON(k.inputUnit),"knots"),o="wind_speed"===k.style?J:Number.MAX_VALUE;for(let r=0;r<T;r++)for(let h=0;h<w;h++){const c=i[r*w+h]*s;if((!e||e[r*w+h])&&c<o){for(let n=0;n<4;n++)t[A++]=(h+.5)/w,t[A++]=(r+.5)/T,t[A++]=n<2?-.5:.5,t[A++]=n%2==0?-.5:.5,t[A++]=0,t[A++]=c;const a=4*(A/24-1);l[y++]=a,l[y++]=a+1,l[y++]=a+2,l[y++]=a+1,l[y++]=a+2,l[y++]=a+3}}return{vertexData:new Float32Array(t),indexData:new Uint32Array(l)}}function C(d,k){return"simple_scalar"===k.style?E(d,k):"wind_speed"===k.style?function v(d,k){if(0===D.length)for(let r=0;r<30;r++)D.push(H(5*r,0,!k.invertDirection));const M=wt(dt.fromJSON(k.inputUnit),"knots"),{width:A,height:y,mask:w}=d,T=d.pixels[0],e=d.pixels[1],t=[],l=[];let s=0,o=0;for(let r=0;r<y;r++)for(let h=0;h<A;h++){const c=r*A+h,a=T[c]*M;if((!w||w[r*A+h])&&a>=J){const n=(e[c]+360)%360/180*Math.PI,{pennants:p,barbs:f,shaft:u}=D[Math.min(Math.floor(a/5),29)];if(p.length+f.length===0)continue;let m=t.length/6;const x=(h+.5)/A,g=(r+.5)/y;for(let _=0;_<p.length;_+=2)t[s++]=x,t[s++]=g,t[s++]=p[_],t[s++]=p[_+1]+n,t[s++]=0,t[s++]=a;for(let _=0;_<f.length;_+=2)t[s++]=x,t[s++]=g,t[s++]=f[_],t[s++]=f[_+1]+n,t[s++]=0,t[s++]=a;for(let _=0;_<u.length;_+=2)t[s++]=x,t[s++]=g,t[s++]=u[_],t[s++]=u[_+1]+n,t[s++]=0,t[s++]=a;for(let _=0;_<p.length/6;_++)l[o++]=m,l[o++]=m+1,l[o++]=m+2,m+=3;for(let _=0;_<f.length/8;_++)l[o++]=m,l[o++]=m+1,l[o++]=m+2,l[o++]=m+1,l[o++]=m+2,l[o++]=m+3,m+=4;l[o++]=m+0,l[o++]=m+1,l[o++]=m+2,l[o++]=m+1,l[o++]=m+3,l[o++]=m+2,m+=4}}return{vertexData:new Float32Array(t),indexData:new Uint32Array(l)}}(d,k):function $(d,k){const{style:M,inputUnit:A,outputUnit:y,breakValues:w}=k,T=dt.fromJSON(A),e=dt.fromJSON(y);let l=0,s=0;const{width:o,height:r,mask:h}=d,c=d.pixels[0],a=d.pixels[1],n=null!=h?h.filter(m=>m>0).length:o*r,p=new Float32Array(42*n),f=new Uint32Array(15*n),u=k.invertDirection?N(0,0,0,!1):K;for(let m=0;m<r;m++)for(let x=0;x<o;x++){const g=m*o+x;if(!h||h[m*o+x]){const _=(a[g]+360)%360/180*Math.PI,S=lt(c[g],M,T,e,w);for(let U=0;U<u.length;U+=2)p[l++]=(x+.5)/o,p[l++]=(m+.5)/r,p[l++]=u[U],p[l++]=u[U+1]+_,p[l++]=S,p[l++]=c[g];const b=7*(l/42-1);f[s++]=b,f[s++]=b+1,f[s++]=b+2,f[s++]=b+0,f[s++]=b+4,f[s++]=b+3,f[s++]=b+0,f[s++]=b+2,f[s++]=b+3,f[s++]=b+2,f[s++]=b+5,f[s++]=b+3,f[s++]=b+5,f[s++]=b+6,f[s++]=b+3}}return{vertexData:p,indexData:f}}(d,k)}function F(d,k,M,A=[0,0],y=.5){const{width:w,height:T,mask:e}=d,[i,t]=d.pixels,[l,s]=A,o=Math.round((w-l)/M),r=Math.round((T-s)/M),h=o*r,c=new Float32Array(h),a=new Float32Array(h),n=new Uint8Array(h),p="vector-uv"===k;for(let u=0;u<r;u++)for(let m=0;m<o;m++){let x=0;const g=u*o+m,_=Math.max(0,u*M+s),S=Math.max(0,m*M+l),b=Math.min(T,_+M),U=Math.min(w,S+M);for(let B=_;B<b;B++)for(let R=S;R<U;R++){const V=B*w+R;if(!e||e[V]){x++;const G=p?[i[V],t[V]]:[i[V],(360+t[V])%360],[z,W]=p?G:ut(G);c[g]+=z,a[g]+=W}}if(x>=(b-_)*(U-S)*(1-y)){n[g]=1;const[B,R]=at([c[g]/x,a[g]/x]);c[g]=B,a[g]=R}else n[g]=0,c[g]=0,a[g]=0}const f=new yt.Z({width:o,height:r,pixels:[c,a],mask:n});return f.updateStatistics(),f}},37084:(Ut,_t,tt)=>{tt.d(_t,{GE:()=>rt,KK:()=>j});var X=tt(15861),ct=(tt(29132),tt(8314)),ft=tt(63290),pt=tt(21286),J=tt(10699),dt=tt(4619),wt=tt(37053),Mt=tt(2004);const at=()=>ft.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ut=10;function rt(D,v,E,C){return mt.apply(this,arguments)}function mt(){return(mt=(0,X.Z)(function*(D,v,E,C){const F=performance.now(),d=function P(D,v){const E=function N(D,v,E,C){if(0===C)return D;const F=Math.round(3*C),d=new Array(2*F+1);let k=0;for(let y=-F;y<=F;y++){const w=Math.exp(-y*y/(C*C));d[y+F]=w,k+=w}for(let y=-F;y<=F;y++)d[y+F]/=k;const M=new Float32Array(D.length);for(let y=0;y<E;y++)for(let w=0;w<v;w++){let T=0,e=0;for(let i=-F;i<=F;i++){if(w+i<0||w+i>=v)continue;const t=d[i+F];T+=t*D[2*(y*v+(w+i))],e+=t*D[2*(y*v+(w+i))+1]}M[2*(y*v+w)]=T,M[2*(y*v+w)+1]=e}const A=new Float32Array(D.length);for(let y=0;y<v;y++)for(let w=0;w<E;w++){let T=0,e=0;for(let i=-F;i<=F;i++){if(w+i<0||w+i>=E)continue;const t=d[i+F];T+=t*M[2*((w+i)*v+y)],e+=t*M[2*((w+i)*v+y)+1]}A[2*(w*v+y)]=T,A[2*(w*v+y)+1]=e}return A}(v.data,v.width,v.height,D.smoothing);return D.interpolate?(C,F)=>{const d=Math.floor(C),k=Math.floor(F);if(d<0||d>=v.width)return[0,0];if(k<0||k>=v.height)return[0,0];const M=C-d,A=F-k,T=d<v.width-1?d+1:d,e=k<v.height-1?k+1:k;return[(E[2*(k*v.width+d)]*(1-A)+E[2*(e*v.width+d)]*A)*(1-M)+(E[2*(k*v.width+T)]*(1-A)+E[2*(e*v.width+T)]*A)*M,(E[2*(k*v.width+d)+1]*(1-A)+E[2*(e*v.width+d)+1]*A)*(1-M)+(E[2*(k*v.width+T)+1]*(1-A)+E[2*(e*v.width+T)+1]*A)*M]}:(C,F)=>{const d=Math.round(C),k=Math.round(F);return d<0||d>=v.width||k<0||k>=v.height?[0,0]:[E[2*(k*v.width+d)],E[2*(k*v.width+d)+1]]}}(v,E),k=performance.now(),M=function K(D,v,E,C){const F=[],d=new dt.Z,k=1/Math.max(D.lineCollisionWidth,1),M=Math.round(E*k),A=Math.round(C*k),y=new Int32Array(M*A);for(let T=0;T<y.length;T++)y[T]=-1;const w=[];for(let T=0;T<C;T+=D.lineSpacing)for(let e=0;e<E;e+=D.lineSpacing)w.push({x:e,y:T,sort:d.getFloat()});w.sort((T,e)=>T.sort-e.sort);for(const{x:T,y:e}of w)if(d.getFloat()<D.density){const i=I(D,v,T,e,F.length,y,M,A,k);if(i.length<2)continue;F.push(i)}return F}(v,d,E.width,E.height),A=performance.now(),y=function H(D,v){const E=new dt.Z,C=D.reduce((A,y)=>A+y.length,0),F=new Float32Array(4*C),d=new Array(D.length);let k=0,M=0;for(const A of D){const y=k;for(const w of A)F[4*k]=w.x,F[4*k+1]=w.y,F[4*k+2]=w.t,F[4*k+3]=w.speed,k++;d[M++]={startVertex:y,numberOfVertices:A.length,totalTime:A[A.length-1].t,timeSeed:v?E.getFloat():0}}return{lineVertices:F,lineDescriptors:d}}(M,!0),w=performance.now(),T="Streamlines"===D?function O(D,v){const{lineVertices:C,lineDescriptors:F}=D;let d=0,k=0;for(const i of F)d+=2*i.numberOfVertices,k+=6*(i.numberOfVertices-1);const M=new Float32Array(9*d),A=new Uint32Array(k);let y=0,w=0;function e(i,t,l,s,o,r,h,c){const a=9*y;let n=0;M[a+n++]=i,M[a+n++]=t,M[a+n++]=1,M[a+n++]=l,M[a+n++]=r,M[a+n++]=h,M[a+n++]=s/2,M[a+n++]=o/2,M[a+n++]=c,y++,M[a+n++]=i,M[a+n++]=t,M[a+n++]=-1,M[a+n++]=l,M[a+n++]=r,M[a+n++]=h,M[a+n++]=-s/2,M[a+n++]=-o/2,M[a+n++]=c,y++}for(const i of F){const{totalTime:t,timeSeed:l}=i;let s=null,o=null,r=null,h=null,c=null,a=null;for(let n=0;n<i.numberOfVertices;n++){const p=C[4*(i.startVertex+n)],f=C[4*(i.startVertex+n)+1],u=C[4*(i.startVertex+n)+2],m=C[4*(i.startVertex+n)+3];let x=null,g=null,_=null,S=null;if(n>0){x=p-s,g=f-o;const b=Math.sqrt(x*x+g*g);if(x/=b,g/=b,n>1){let U=x+c,B=g+a;const R=Math.sqrt(U*U+B*B);U/=R,B/=R;const V=Math.min(1/(U*x+B*g),v);U*=V,B*=V,_=-B,S=U}else _=-g,S=x;null!==_&&null!==S&&(e(s,o,r,_,S,t,l,m),A[w++]=y-2,A[w++]=y,A[w++]=y-1,A[w++]=y,A[w++]=y+1,A[w++]=y-1)}s=p,o=f,r=u,c=x,a=g,h=m}e(s,o,r,-a,c,t,l,h)}return{vertexData:M,indexData:A}}(y,ut):function L(D){const{lineVertices:F,lineDescriptors:d}=D;let k=0,M=0;for(const b of d){const U=b.numberOfVertices-1;k+=4*U*2,M+=6*U*2}const A=new Float32Array(16*k),y=new Uint32Array(M);let w,T,e,i,t,l,s,o,r,h,c,a,n,p,f=0,u=0;function g(b,U){let B=r+c,R=h+a;const V=Math.sqrt(B*B+R*R);B/=V,R/=V;const G=r*B+h*R;B/=G,R/=G;let z=c+n,W=a+p;const Q=Math.sqrt(z*z+W*W);z/=Q,W/=Q;const Z=c*z+a*W;z/=Z,W/=Z,function x(b,U,B,R,V,G,z,W,Q,Z,et,ht,ot,nt){const it=16*f;let st=0;for(const gt of[1,2])for(const xt of[1,2,3,4])A[it+st++]=b,A[it+st++]=U,A[it+st++]=B,A[it+st++]=R,A[it+st++]=z,A[it+st++]=W,A[it+st++]=Q,A[it+st++]=Z,A[it+st++]=gt,A[it+st++]=xt,A[it+st++]=ot,A[it+st++]=nt,A[it+st++]=V/2,A[it+st++]=G/2,A[it+st++]=et/2,A[it+st++]=ht/2,f++}(w,T,e,i,-R,B,t,l,s,o,-W,z,b,U),function m(){y[u++]=f-8,y[u++]=f-7,y[u++]=f-6,y[u++]=f-7,y[u++]=f-5,y[u++]=f-6,y[u++]=f-4,y[u++]=f-3,y[u++]=f-2,y[u++]=f-3,y[u++]=f-1,y[u++]=f-2}()}function _(b,U,B,R,V,G){if(r=c,h=a,c=n,a=p,null==r&&null==h&&(r=c,h=a),null!=t&&null!=l){n=b-t,p=U-l;const z=Math.sqrt(n*n+p*p);n/=z,p/=z}null!=r&&null!=h&&g(V,G),w=t,T=l,e=s,i=o,t=b,l=U,s=B,o=R}function S(b,U){r=c,h=a,c=n,a=p,null==r&&null==h&&(r=c,h=a),null!=r&&null!=h&&g(b,U)}for(const b of d){w=null,T=null,e=null,i=null,t=null,l=null,s=null,o=null,r=null,h=null,c=null,a=null,n=null,p=null;const{totalTime:U,timeSeed:B}=b;for(let R=0;R<b.numberOfVertices;R++)_(F[4*(b.startVertex+R)],F[4*(b.startVertex+R)+1],F[4*(b.startVertex+R)+2],F[4*(b.startVertex+R)+3],U,B);S(U,B)}return{vertexData:A,indexData:y}}(y),e=performance.now();return(0,ct.Z)("esri-2d-profiler")&&(at().info("I.1","_createFlowFieldFromData (ms)",Math.round(k-F)),at().info("I.2","_getStreamlines (ms)",Math.round(A-k)),at().info("I.3","createAnimatedLinesData (ms)",Math.round(w-A)),at().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(e-w)),at().info("I.5","createFlowMesh (ms)",Math.round(e-F)),at().info("I.6","Mesh size (bytes)",T.vertexData.buffer.byteLength+T.indexData.buffer.byteLength)),yield Promise.resolve(),(0,J.k_)(C),T})).apply(this,arguments)}function I(D,v,E,C,F,d,k,M,A){const y=[];let w=E,T=C,e=0,[i,t]=v(w,T);i*=D.velocityScale,t*=D.velocityScale;const l=Math.sqrt(i*i+t*t);let s,o;y.push({x:w,y:T,t:e,speed:l});for(let r=0;r<D.verticesPerLine;r++){let[h,c]=v(w,T);h*=D.velocityScale,c*=D.velocityScale;const a=Math.sqrt(h*h+c*c);if(a<D.minSpeedThreshold)return y;const n=h/a,p=c/a;if(w+=n*D.segmentLength,T+=p*D.segmentLength,e+=D.segmentLength/a,Math.acos(n*s+p*o)>D.maxTurnAngle)return y;if(D.collisions){const f=Math.round(w*A),u=Math.round(T*A);if(f<0||f>k-1||u<0||u>M-1)return y;const m=d[u*k+f];if(-1!==m&&m!==F)return y;d[u*k+f]=F}y.push({x:w,y:T,t:e,speed:a}),s=n,o=p}return y}function q(D,v){const E=v.pixels,{width:C,height:F}=v,d=new Float32Array(C*F*2),k=v.mask||new Uint8Array(C*F*2);if(v.mask||k.fill(255),"vector-uv"===D)for(let M=0;M<C*F;M++)d[2*M]=E[0][M],d[2*M+1]=-E[1][M];else if("vector-magdir"===D)for(let M=0;M<C*F;M++){const A=E[0][M],y=(0,pt.Vl)(E[1][M]),w=Math.cos(y-Math.PI/2),T=Math.sin(y-Math.PI/2);d[2*M]=w*A,d[2*M+1]=T*A}return{data:d,mask:k,width:C,height:F}}function j(D,v,E,C,F,d){return Y.apply(this,arguments)}function Y(){return(Y=(0,X.Z)(function*(D,v,E,C,F,d){const k=performance.now(),M=(0,wt.C5)(v.spatialReference);if(!M){const c=yield lt(D,v,E,C,F,d);return(0,ct.Z)("esri-2d-profiler")&&at().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-k)),(0,ct.Z)("esri-2d-profiler")&&at().info("I.9","Number of parts",1),c}const[A,y]=M.valid,T=Math.ceil(v.width/(y-A)),e=v.width/T,i=Math.round(E/T);let t=v.xmin;const l=[],s=performance.now();for(let c=0;c<T;c++){const a=new Mt.Z({xmin:t,xmax:t+e,ymin:v.ymin,ymax:v.ymax,spatialReference:v.spatialReference});l.push(lt(D,a,i,C,F,d)),t+=e}const o=yield Promise.all(l);(0,ct.Z)("esri-2d-profiler")&&at().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-s)),(0,ct.Z)("esri-2d-profiler")&&at().info("I.9","Number of parts",o.length);const r={data:new Float32Array(E*C*2),mask:new Uint8Array(E*C),width:E,height:C};let h=0;for(const c of o){for(let a=0;a<c.height;a++)for(let n=0;n<c.width;n++)h+n>=E||(r.data[2*(a*E+h+n)]=c.data[2*(a*c.width+n)],r.data[2*(a*E+h+n)+1]=c.data[2*(a*c.width+n)+1],r.mask[a*E+h+n]=c.mask[a*c.width+n]);h+=c.width}return(0,ct.Z)("esri-2d-profiler")&&at().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-k)),r})).apply(this,arguments)}function lt(D,v,E,C,F,d){return $.apply(this,arguments)}function $(){return($=(0,X.Z)(function*(D,v,E,C,F,d){const k={requestProjectedLocalDirections:!0,signal:d};if(null!=F&&(k.timeExtent=F),"imagery"===D.type){yield D.load({signal:d});const y=D.rasterInfo.dataType,w=yield D.fetchImage(v,E,C,k);return null==w?.pixelData?.pixelBlock?{data:new Float32Array(E*C*2),mask:new Uint8Array(E*C),width:E,height:C}:q(y,w.pixelData.pixelBlock)}yield D.load({signal:d});const M=D.serviceRasterInfo.dataType,A=yield D.fetchPixels(v,E,C,k);return null==A?.pixelBlock?{data:new Float32Array(E*C*2),mask:new Uint8Array(E*C),width:E,height:C}:q(M,A.pixelBlock)})).apply(this,arguments)}}}]);