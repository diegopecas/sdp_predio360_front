"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[5542],{76825:(U,F,n)=>{n.d(F,{cn:()=>v,j:()=>I,lK:()=>c});const v="updating";function c(N){return"updating"===N?null:N}function I(N){return"updating"===N}},66457:(U,F,n)=>{n.r(F),n.d(F,{default:()=>ye});var v=n(15861),c=n(17626),I=n(88879),N=n(85931),S=n(63290),d=n(62208),A=n(32917),y=n(77712),L=(n(90912),n(76898)),D=n(84161),E=n(28093),b=n(55915),C=n(33190),$=n(33696),J=n(5437),Z=n(38114),Y=n(84786),X=n(66607),q=n(98624),V=n(96854),k=n(42930);class T extends k.q{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:s=>[s.geometryBuffer]},e,{hasInitialize:!0})}}var ee=n(19702),te=n(33816),re=n(34675),H=n(3493),se=n(61885),ie=n(88159);class oe extends se.Z{constructor(e,s){super(),this._updateAndCompare=e,this._notifyUpdated=s,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,s){this._nodes.set(e,s);const r=s.graphics;if(0===r.length)return;const i=new Set;for(let a=0;a<r.length;a++){const h=r[a],l=h.objectId,p=this._graphics.get(l);if(p){i.add(l),h!==p&&(r[a]=p);const g=this._duplicates.get(l);g?g.push(e):this._duplicates.set(l,[p.nodeIndex,e])}else h.nodeIndex=e,this._graphics.set(l,h)}i.size&&this._updateForeignGraphics(s);const o=i.size>0?r.filter(a=>!i.has(a.objectId)):r;o.length>0&&this.emit("change",{added:o,removed:[]})}removeNode(e){const s=this._nodes.get(e);if(!s)return void console.error("Removing unknown node");this._nodes.delete(e);const r=new Set,i=[];for(const o of s.graphics){const a=o.objectId,h=this._graphics.get(a);if(!h)continue;const l=this._duplicates.get(a);if(l){const p=l.indexOf(e);if(-1===p){console.error("error: removing graphic from node that should not reference it.");continue}if(l.splice(p,1),h.nodeIndex===e){let g=this.getNode(l[0]);for(let u=1;u<l.length;u++){const m=this.getNode(l[u]);((0,d.Wi)(g)||(0,d.pC)(m)&&m.node.level>g.node.level)&&(g=m)}(0,d.pC)(g)&&r.add(g)}1===l.length&&this._duplicates.delete(a)}else this._graphics.delete(a),i.push(o)}i.length>0&&this.emit("change",{added:[],removed:i}),r.forEach(o=>this._updateForeignGraphics(o))}_updateForeignGraphics(e){const s=[],r=e.node.index,i=e.node.level;let o=0;for(;o<e.graphics.length;){const a=e.graphics[o].nodeIndex;if(a===r){o++;continue}let h=1;for(;o+h<e.graphics.length&&e.graphics[o+h].nodeIndex===a;)h++;const l=this.getNode(a);if((0,d.pC)(l)&&l.node.level>i)o+=h;else{for(let p=o;p<o+h;p++){const g=e.graphics[p];g.nodeIndex=r,this._updateAndCompare(g,e,p)&&s.push(g)}o+=h}}this._notifyUpdated(s)}toArray(){return Array.from(this._graphics.values())}find(e){let s;return(0,ie.oE)(this._graphics,r=>!!e(r)&&(s=r,!0)),s}forEach(e){this._graphics.forEach(s=>e(s))}forEachNode(e){this._nodes.forEach((s,r)=>e(s,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach((r,i)=>{i!==r.node.index&&console.error("Mismatched node index"),r.graphics.forEach(o=>{e.set(o.objectId,1+(e.get(o.objectId)??0));const a=this._duplicates.get(o.objectId);a&&!a.includes(i)&&console.error("Node not listed in duplicate list"),a||o.nodeIndex===i||console.error("Unique graphic does not reference owning node index")})}),this._graphics.size!==e.size&&console.error("Mismatch between actual and expected number of graphics");let s=0;e.forEach((r,i)=>{s+=r>1?1:0;const o=this._graphics.get(i);if(!o)return void console.error("Missing graphic entry");const a=this._nodes.get(o.nodeIndex);if(!a)return void console.error("Graphic references unkown node");const h=this._duplicates.get(i);h?(h.length!==r&&console.error("Wrong number of entries in duplicate list"),h.forEach(l=>{const p=this._nodes.get(l);p?p.node.level>a.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")})):r>1&&console.error("Missing duplicates entry")}),this._duplicates.size!==s&&console.error("Mismatch between expected and actual number of duplicate entries")}}var Q=n(86152),G=n(42964),ne=n(89476),ae=n(67966),de=n(40465),le=n(57610),w=n(93605),he=n(93394),ce=n(41632),ue=n(94255),B=n(6040),pe=n(23147),ge=n(78465),fe=n(87091);const z=(0,ae.v)();let f=class extends((0,ne.l)((0,de.i)((0,ee.A)(ge.Z)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new oe((t,e,s)=>function ve(t,e,s){const r=e.attributeInfo;if((0,d.Wi)(r)||(0,d.Wi)(r.loadedAttributes)||(0,d.Wi)(r.attributeData))return!1;let i=!1;for(const{name:o}of r.loadedAttributes)if(r.attributeData[o]){const a=(0,G.Jx)(r.attributeData[o],s);a!==t.attributes[o]&&(t.attributes[o]=a,i=!0)}return i}(t,e,s),t=>this.processor.graphicsCore.recreateGraphics(t)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(t,e){return t.url===this.layer.url&&this._i3sOverrides.isEmpty?t.load(e).then(()=>{(0,G.tq)(this.layer,t,this._i3sOverrides),this.layer=t,this._i3sOverrides.destroy();const s=this.view.resourceController?.memoryController;this._i3sOverrides=new Q.v({view:this.view,layer:t,memoryController:s}),(0,d.SC)(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const t=this.view.resourceController?.memoryController;this._i3sOverrides=new Q.v({view:this.view,layer:this.layer,memoryController:t}),(0,G.OJ)(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new le.K({layerView:this}),this.updatingHandles.add(()=>this.layer.rangeInfos,e=>this._rangeInfosChanged(e),A.nn),this.updatingHandles.add(()=>this.layer.renderer,(e,s)=>this._rendererChange(e,s)),this.updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.handles.add((0,A.YP)(()=>w.Z.I3S_TREE_SHOW_TILES,e=>{if(e&&!this._treeDebugger){const s=this._controller.crsIndex;Promise.all([n.e(8592),n.e(3109)]).then(n.bind(n,3109)).then(({I3STreeDebugger:r})=>{!this._treeDebugger&&w.Z.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new r({lv:this,view:this.view,nodeSR:s}))})}else e||!this._treeDebugger||w.Z.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},A.nn)),this._set("processor",new te.Z({owner:this,preferredUpdatePolicy:pe.j.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",e=>this._controller.updateElevationChanged(e.extent,e.spatialReference)),this.supportsHeightUnitConversion&&(this._verticalScale=(0,$.k)("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(this.uid),this._controller=new X.Z({layerView:this,scaleVisibilityEnabled:!1}),(0,G.X5)(this.layer.geometryDefinitions)&&(this._worker=new T(e=>this.view.resourceController.immediate.schedule(e))),this.handles.add(this.layer.on("apply-edits",e=>this.updatingHandles.addPromise(e.result))),this.handles.add(this.layer.on("edits",e=>this._handleEdits(e))),this.when(()=>{this._setupQueryEngine(),this.updatingHandles.add(()=>this.maximumNumberOfFeatures,e=>this._controller.featureTarget=e,A.nn),this.updatingHandles.add(()=>this.suspended,e=>{e&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=(0,d.SC)(this._treeDebugger),this._i3sOverrides=(0,d.SC)(this._i3sOverrides),this._set("processor",(0,d.SC)(this.processor)),this._controller=(0,d.SC)(this._controller),this._queryEngine=(0,d.SC)(this._queryEngine),this._worker=(0,d.SC)(this._worker),this._memCache=(0,d.SC)(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=(0,d.SC)(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??1}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){return this.processor?.graphicsCore?.displayFeatureLimit?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(t){null!=t?(this._override("maximumNumberOfFeatures",t),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const t=this.layer.excludeObjectIds;return t.length?t.toArray().sort((e,s)=>e-s):null}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}whenGraphicAttributes(t,e){var s=this;return(0,v.Z)(function*(){return(0,G.bf)(s.layer,t,s._getObjectIdField(),e,()=>[...s.loadedGraphics.nodes()])})()}getHit(t){if(!this.loadedGraphics)return null;const e=(0,Y.mW)(this.loadedGraphics.find(r=>r.uid===t),this.layer),s=this._getObjectIdField();return e&&e.attributes&&e.attributes[s]?(e.layer=this.layer,e.sourceLayer=this.layer,{type:"graphic",graphic:e,layer:e.layer}):null}whenGraphicBounds(t,e){return this.processor.whenGraphicBounds(t,e)}computeAttachmentOrigin(t,e){return this.processor.computeAttachmentOrigin(t,e)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(t){return this.processor.highlight(t,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(t){return(0,H.sw)(this._attributeEditingContext,t)}_decompressBinaryPointData(t,e){var s=this;return(0,v.Z)(function*(){const r={geometryBuffer:t.geometryBuffer};(0,d.Wi)(s._worker)&&(s._worker=new T(o=>s.view.resourceController.immediate.schedule(o)));const i=yield s._worker.invoke(r,e);if((0,d.Wi)(i))throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}})()}addNode(t,e,s){var r=this;return(0,v.Z)(function*(){if(!j(e)&&!function me(t){return"pointData"in t}(e))throw new Error;if(r.loadedGraphics.hasNode(t.index))return void S.Z.getLogger(r.declaredClass).error("I3S node "+t.id+" already added");const i=(0,d.pC)(r.layer.fullExtent)?function Ee(t,e){return t.xmin-=e,t.ymin-=e,t.xmax+=e,t.ymax+=e,null!=t.zmin&&null!=t.zmax&&(t.zmin-=e,t.zmax+=e),null!=t.mmin&&null!=t.mmax&&(t.mmin-=e,t.mmax+=e),t}(r.layer.fullExtent.clone(),.5):null,o=[],{featureIds:a,pointPositions:h}=j(e)?yield r._extractBinaryPointPositions(t,e,s):r._extractLegacyPointPositions(e);r._validatePositions(t,a,h,i,o);const l=r._controller.crsVertex;(0,b.CM)(h,l,0,h,r.view.spatialReference,0,a.length);const g=j(e)?t.level:0,u={graphics:r._createGraphics(a,h,t.index,g),featureIds:a,attributeInfo:e.attributeDataInfo,node:t};if(yield r._i3sOverrides.apply(u.featureIds,e.attributeDataInfo,s),t.numFeatures=u.graphics.length,r._updateNodeMemory(t),K(u),o.length>0&&(r._computeObb(t,o,l),r._controller.updateVisibility(t.index)),!r._controller.isGeometryVisible(t))return void r._cacheNodeData(u);if((0,d.pC)(r._verticalScale))for(const _ of u.graphics)r._verticalScale(_.geometry);const m=r.view._stage.renderView.objectAndLayerIdRenderHelper;if((0,d.pC)(m))for(let _=0;_<u.featureIds.length;_++)m.setUidToObjectAndLayerId(u.featureIds[_],u.graphics[_].uid,r.layer.id,r.layer.uid,r.layer.popupEnabled,u.node.resources.attributes,_);r.loadedGraphics.addNode(t.index,u),r._controller.updateLoadStatus(t.index,!0),r._filterNode(u),r._treeDebugger&&r._treeDebugger.update()})()}_computeObb(t,e,s){const r=this._controller.crsIndex,i=r.isGeographic?this.view.renderSpatialReference:r;(0,b.CM)(e,s,0,e,i,0,e.length/3),t.serviceObb=(0,he.Qb)(new ue.a(e,3)),r.isGeographic&&(0,b.SH)(t.serviceObb.center,i,t.serviceObb.center,r)}isNodeLoaded(t){return this.loadedGraphics.hasNode(t)}isNodeReloading(){return!1}updateNodeState(){}_extractBinaryPointPositions(t,e,s){var r=this;return(0,v.Z)(function*(){const i=yield r._decompressBinaryPointData(e,s),o=i.positionData,h=o.length/3,l=(0,B.bg)(3*h),p=(0,d.pC)(t.serviceObb)?t.serviceObb.center:[0,0,0],g=Math.abs(p[2])*2**-20;for(let u=0;u<h;u++){const m=3*u;l[m+0]=o[m+0]+p[0],l[m+1]=o[m+1]+p[1],l[m+2]=o[m+2]+p[2],Math.abs(l[m+2])<g&&(l[m+2]=0)}return{featureIds:i.featureIds?Array.from(i.featureIds):[],pointPositions:l}})()}_extractLegacyPointPositions(t){const e=t.pointData.length,s=(0,B.bg)(3*e),r=new Array;for(let i=0;i<e;i++){const o=t.pointData[i],a=o.featureDataPosition,h=a.length,l=o.geometries?.[0]??be[h],p=o.featureIds[0];if("Embedded"!==l.type||"points"!==l.params.type||h<2||h>3)continue;const g=l.params.vertexAttributes?.position??[0,0,0],u=3*r.length;s[u+0]=a[0]+g[0],s[u+1]=a[1]+g[1],s[u+2]=3===h?a[2]+g[2]:NaN,r.push(p)}return{featureIds:r,pointPositions:s}}_validatePositions(t,e,s,r,i){if((0,d.Wi)(r)&&t.serviceObb)return;const o=e.length;for(let h=0;h<o;h++){const l=3*h;(0,D.s)(P,s[l],s[l+1],s[l+2]),(0,d.pC)(r)&&!(0,C.Qg)(r,P)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&S.Z.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&S.Z.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),t.serviceObb||i.push(P[0],P[1],P[2])}}_createGraphics(t,e,s,r){const i=t.length,a=this._getObjectIdField(),h=this.processor.graphicsCore,l=new Array,p=this.view.spatialReference;for(let g=0;g<i;g++){const u=t[g],m={};null!=u&&(m[a]=u);const _=u??I.Z.generateUID(),M=3*g,Ce=isNaN(e[M+2])?void 0:e[M+2],R=(0,Z.Tx)(e[M],e[M+1],Ce,p),O=this.loadedGraphics.get(_);if((0,d.pC)(O))(null==O.level||O.level<r)&&(x.property="geometry",x.graphic=O,x.oldValue=(0,d.Wg)(O.geometry),x.newValue=R,O.geometry=R,O.level=r,h.graphicUpdateHandler(x)),l.push(O);else{const xe=I.Z.generateUID();l.push({objectId:_,uid:xe,geometry:R,attributes:m,visible:!0,nodeIndex:s,level:r})}}return l}_updateNodeMemory(t){t.memory=4096+((0,d.pC)(t.numFeatures)?t.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(t){const e=t.graphics.reduce((s,r)=>(0,Z.Xw)(r)+s,512+8*t.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(t.node),t,e)}_getMemCacheKey(t){return`${t.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((t,e)=>{t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t)),this._controller.updateLoadStatus(e,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(t){const e=this._removeNodeStageData(t);e&&(this._updateNodeMemory(e.node),this._cacheNodeData(e))}_removeNodeStageData(t){const e=this.loadedGraphics.getNode(t);return(0,d.Wi)(e)?null:(this._controller.updateLoadStatus(t,!1),this.loadedGraphics.removeNode(t),this._treeDebugger&&this._treeDebugger.update(),e)}loadCachedNodeData(t){var e=this;return(0,v.Z)(function*(){return e._memCache?.pop(e._getMemCacheKey(t))})()}addCachedNodeData(t,e,s,r){var i=this;return(0,v.Z)(function*(){i.loadedGraphics.hasNode(t.index)?S.Z.getLogger(i.declaredClass).error("I3S node "+t.id+" already added"):(yield i._i3sOverrides.apply(e.featureIds,s,r),i.loadedGraphics.addNode(t.index,e),i._controller.updateLoadStatus(t.index,!0),i._updateNodeMemory(t),e.attributeInfo=s,i._attributeValuesChanged(e),i._filterNode(e),i._treeDebugger&&i._treeDebugger.update())})()}getLoadedNodeIds(){const t=[];return this.loadedGraphics.forEachNode(e=>t.push(e.node.id)),t.sort()}getVisibleNodes(){const t=new Array;return this.loadedGraphics.forEachNode(e=>t.push(e.node)),t}getLoadedNodeIndices(t){this.loadedGraphics.forEachNode((e,s)=>t.push(s))}getLoadedAttributes(t){const e=this.loadedGraphics.getNode(t);if((0,d.pC)(e)&&(0,d.pC)(e.attributeInfo))return e.attributeInfo.loadedAttributes}getAttributeData(t){const e=this.loadedGraphics.getNode(t);if((0,d.pC)(e)&&(0,d.pC)(e.attributeInfo))return e.attributeInfo.attributeData}_setAttributeData(t,e){const s=this.loadedGraphics.getNode(t);(0,d.Wi)(s)||(0,d.Wi)(s.attributeInfo)||(s.attributeInfo.attributeData=e,this._attributeValuesChanged(s))}updateAttributes(t,e,s){var r=this;return(0,v.Z)(function*(){const i=r.loadedGraphics.getNode(t);(0,d.Wi)(i)||(yield r._i3sOverrides.apply(i.featureIds,e,s),i.attributeInfo=e,r._attributeValuesChanged(i))})()}_attributeValuesChanged(t){if(K(t),this._filterNode(t),this.processor.graphicsCore.labelsEnabled){const e=t.graphics.map(s=>s.uid);this.processor.graphicsCore.updateLabelingInfo(e)}}_updateClippingExtent(t){return this._controller&&this._controller.updateClippingArea(t),!1}_getObjectIdField(){return this.layer.objectIdField||J.d}_rendererChange(t,e){var s=this;return(0,v.Z)(function*(){const{layer:{fieldsIndex:r}}=s,i=new Set;let o,a;t?(yield t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],i.clear(),e?(yield e.collectRequiredFields(i,r),a=Array.from(i).sort()):a=[],o.length===a.length&&o.every((h,l)=>o[l]===a[l])||s._reloadAllNodes()})()}_rangeInfosChanged(t){null!=t&&t.length>0&&S.Z.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(t=>this._filterNode(t))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(t){const e=this.parsedDefinitionExpression,s=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const i of t.graphics){const o=i.visible,a=!e||this._evaluateClause(e,i),h=(0,d.Wi)(s)||(0,N.$A)(s,i.attributes[r])<0;i.visible=a&&h,o!==i.visible&&(x.graphic=i,x.property="visible",x.oldValue=o,x.newValue=i.visible,this.processor.graphicsCore.graphicUpdateHandler(x))}}createQuery(){const t={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return(0,d.pC)(this.filter)?this.filter.createQuery(t):new V.Z(t)}queryFeatures(t,e){return this._queryEngine.executeQuery(this._ensureQuery(t),e?.signal)}queryObjectIds(t,e){return this._queryEngine.executeQueryForIds(this._ensureQuery(t),e?.signal)}queryFeatureCount(t,e){return this._queryEngine.executeQueryForCount(this._ensureQuery(t),e?.signal)}queryExtent(t,e){return this._queryEngine.executeQueryForExtent(this._ensureQuery(t),e?.signal)}_ensureQuery(t){return this._addDefinitionExpressionToQuery((0,d.Wi)(t)?this.createQuery():V.Z.from(t))}_setupQueryEngine(){const t=()=>this.processor.featureStore;this._queryEngine=new re.q({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return t()},hasZ:this.hasZ,hasM:this.hasM},priority:fe.T8.FEATURE_QUERY_ENGINE})}getUsedMemory(){return this.processor?.graphicsCore?.usedMemory??0}getUnloadedMemory(){return.8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(t){(0,H.Z6)(this._attributeEditingContext,t)}get _attributeEditingContext(){const t=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:t,forEachNode:e=>this.loadedGraphics.forEachNode(s=>e(s.node,s.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(e,s,r)=>{this._setAttributeData(e,s);const i=this.loadedGraphics.getNode(e);if((0,d.pC)(r)){const o=this.loadedGraphics.get(r.attributes[t]);(0,d.pC)(o)&&this.processor.graphicsCore.recreateGraphics([o])}else(0,d.pC)(i)&&this.processor.graphicsCore.recreateGraphics(i.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const t={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this.loadedGraphics.nodeCount,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(t),t}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};(0,c._)([(0,y.Cb)()],f.prototype,"processor",void 0),(0,c._)([(0,y.Cb)({type:q.Z})],f.prototype,"filter",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"loadedGraphics",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"i3slayer",null),(0,c._)([(0,y.Cb)()],f.prototype,"_controller",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"updating",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"suspended",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"holeFilling",void 0),(0,c._)([(0,y.Cb)(ce.q)],f.prototype,"updatingProgress",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"updatingProgressValue",null),(0,c._)([(0,y.Cb)(z.requiredFields)],f.prototype,"requiredFields",null),(0,c._)([(0,y.Cb)(z.availableFields)],f.prototype,"availableFields",void 0),(0,c._)([(0,y.Cb)()],f.prototype,"_fieldsHelper",void 0),(0,c._)([(0,y.Cb)({type:Number})],f.prototype,"maximumNumberOfFeatures",null),(0,c._)([(0,y.Cb)({readOnly:!0})],f.prototype,"maximumNumberOfFeaturesExceeded",null),(0,c._)([(0,y.Cb)()],f.prototype,"_excludeObjectIdsSorted",null),(0,c._)([(0,y.Cb)({readOnly:!0})],f.prototype,"lodFactor",null),(0,c._)([(0,y.Cb)({readOnly:!0})],f.prototype,"hasM",null),(0,c._)([(0,y.Cb)({readOnly:!0})],f.prototype,"hasZ",null),f=(0,c._)([(0,L.j)("esri.views.3d.layers.SceneLayerGraphicsView3D")],f);const ye=f;function j(t){return"geometryBuffer"in t&&null!==t.geometryBuffer}function K(t){const e=t.attributeInfo,s=t.node.index;if(!((0,d.Wi)(e)||(0,d.Wi)(e.loadedAttributes)||(0,d.Wi)(e.attributeData)))for(let r=0;r<t.graphics.length;r++){const i=t.graphics[r];if(i.nodeIndex===s){i.attributes||(i.attributes={});for(const{name:o}of e.loadedAttributes)e.attributeData[o]&&(i.attributes[o]=(0,G.Jx)(e.attributeData[o],r))}}}const be={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},P=(0,E.c)(),x={graphic:null,property:null,oldValue:null,newValue:null}},89476:(U,F,n)=>{n.d(F,{l:()=>W});var v=n(17626),c=n(63290),I=n(77712),d=(n(90912),n(85931),n(76898)),A=n(10410),y=n(42964);const W=L=>{let D=class extends L{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=E=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&c.Z.getLogger(this.declaredClass).error("Error while evaluating definitionExpression: "+E),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&c.Z.getLogger(this.declaredClass).error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const E=A.WhereClause.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!E.isStandardized)return c.Z.getLogger(this.declaredClass).error("definitionExpression is using non standard function"),null;const b=[];return(0,y.e8)(E.fieldNames,this.i3slayer.fields,{missingFields:b}),b.length>0?(c.Z.getLogger(this.declaredClass).error(`definitionExpression references unknown fields: ${b.join(", ")}`),null):(this._definitionExpressionErrors=0,E)}catch(E){return c.Z.getLogger(this.declaredClass).error("Failed to parse definitionExpression: "+E),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:[]}_evaluateClause(E,b){try{return E.testFeature(b)}catch(C){return this.logError(C),!1}}_addDefinitionExpressionToQuery(E){if(!this.parsedDefinitionExpression)return E;const b=this.i3slayer.definitionExpression,C=E.clone();return C.where=C.where?`(${b}) AND (${C.where})`:b,C}};return(0,v._)([(0,I.Cb)()],D.prototype,"i3slayer",void 0),(0,v._)([(0,I.Cb)({readOnly:!0})],D.prototype,"parsedDefinitionExpression",null),(0,v._)([(0,I.Cb)({readOnly:!0})],D.prototype,"definitionExpressionFields",null),D=(0,v._)([(0,d.j)("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],D),D}}}]);