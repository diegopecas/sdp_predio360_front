"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[5821],{85821:(Pn,nt,I)=>{I.r(nt),I.d(nt,{default:()=>Fn});var M=I(15861),b=I(17626),bt=I(73281),Rt=I(79608),k=I(26584),fe=I(63290),St=I(99959),ve=I(10699),wt=I(32917),w=I(77712),Oe=I(90912),Tt=(I(4619),I(8314)),Ct=I(55342),Q=I(76898),Ft=I(44917),Mt=I(65088),Pt=I(552),Ot=I(50107),ze=(I(29132),I(90885)),rt=I(84792),Zt=I(55538),Nt=I(68653),it=I(37053),st=I(38305),Ae=I(13812),Le=I(25982),Dt=I(11354),He=I(85436),kt=I(9548),re=I(2584),Bt=I(37118),Jt=I(86810),Et=I(60330),at=I(72258),we=I(27497),X=I(79781),oe=I(61068),ot=I(67313),lt=I(8614),ie=I(79751),B=I(28594),We=I(30994),zt=I(71251),U=I(2004),W=I(72642),j=I(65234);let Lt=0,G=class extends((0,Et.v)(Jt.wq)){constructor(){super(...arguments),this._tileFetchQueue=new zt.e({concurrency:32,process:(n,e)=>this._fetchRawTile(n.pyramidLevel,n.row,n.col,{...n.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var n=this;return(0,M.Z)(function*(){const e=(0,B.zD)();n.addResolvingPromise(e),yield n.when()})()}normalizeCtorArgs(n){return n?.ioConfig&&(n={...n,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:re.Z.create(),...n.ioConfig}}),n}get _isGlobalWrappableSource(){const{rasterInfo:n}=this,e=(0,B.ut)(n.spatialReference);return null!=e&&n.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:n}=this.rasterInfo;return null==n||"gcs-shift"===n.type}set rasterJobHandler(n){this._set("rasterJobHandler",n),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=n)}get rasterId(){return this.url||"rasterId-"+Lt++}set url(n){this._set("url",(0,st.Nm)(n,fe.Z.getLogger(this)))}open(n){return(0,M.Z)(function*(){throw new k.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){const a=t.tileInfo||r.rasterInfo.storageInfo.tileInfo,s=r.getTileExtentFromTileInfo(n,e,i,a);return t={noClip:!0,...t},r.fetchPixels(s,a.size[0],a.size[1],t)})()}identify(n,e={}){var i=this;return(0,M.Z)(function*(){n=(0,Oe.TJ)(W.Z,n).clone().normalize();const{multidimensionalDefinition:t,timeExtent:r}=e,{rasterInfo:a}=i,{hasMultidimensionalTranspose:s,multidimensionalInfo:o}=a;let{transposedVariableName:l}=e;const c=null!=o&&s&&(null!=r||(0,X.WU)(t));c&&!l&&(l=null!=t&&t.length>0?t[0].variableName??void 0:o.variables[0].name,e={...e,transposedVariableName:l}),e=i._getRequestOptionsWithSliceId(e);const{spatialReference:f,extent:u}=a,{datumTransformation:d}=e;let m=(0,B.nF)(n,f,d);if(!u.intersects(m))return{location:m,value:null};if(null!=a.transform){const Z=a.transform.inverseTransform(m);if(!a.nativeExtent.intersects(Z))return{location:Z,value:null};m=Z}let h=0;const g=null!=l&&null!=o&&a.hasMultidimensionalTranspose;if("Function"===i.datasetFormat){const Z=i.primaryRasters.rasters[0];if(g)return Z.identify(m,e);const{pixelSize:D}=a,z=3,J=D.x*z/2,E=D.y*z/2,A=new U.Z({xmin:m.x-J,xmax:m.x+J,ymin:m.y-E,ymax:m.y+E,spatialReference:f}),L={interpolation:"nearest",multidimensionalDefinition:t,sliceId:e.sliceId},{pixelBlock:ne}=yield Z.fetchPixels(A,z,z,L),{pixelBlock:_}=yield i.fetchPixels(A,z,z,L);if(null==ne)return{location:m,value:null};const $=Math.floor(z*z*.5),se=!ne.mask||ne.mask[$]?ne.pixels.map(ee=>ee[$]):null;let xe;return null!=_&&(xe=!_.mask||_.mask[$]?_.pixels.map(ee=>ee[$]):void 0),{location:m,value:se,processedValue:xe,pyramidLevel:0}}if(!g)if(e.srcResolution)h=(0,B.kr)(e.srcResolution,a,i.ioConfig.sampling).pyramidLevel;else if(h=yield i.computeBestPyramidLevelForLocation(n,e),null==h)return{location:m,value:null};const y=i.identifyPixelLocation(m,h,null,g);if(null===y)return{location:m,value:null};const{row:p,col:x,rowOffset:v,colOffset:R,blockWidth:S}=y,C=(0,oe.Rq)(i.rasterId,l??e.sliceId),T=`${h}/${p}/${x}`;let O=(0,oe.Qg)(C,null,T);null==O&&(O=i.fetchRawTile(h,p,x,e),(0,oe.gX)(C,null,T,O));const P=yield O;return P?.pixels?.length?i._processIdentifyResult(P,{srcLocation:m,position:v*S+R,pyramidLevel:h,useTransposedTile:!!g,requestSomeSlices:c,identifyOptions:e}):{location:m,value:null}})()}fetchPixels(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){n=(0,B.Fi)(n),t=r._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:a}=r;if(t.requestRawData&&a)return r._fetchPixels(n,e,i,t);const s=(0,B.ut)(n.spatialReference),o=(0,B.Hq)(n);if(null==s||0===o||1===o&&r._isGlobalWrappableSource&&a)return r._fetchPixels(n,e,i,t);if(o>=3)return{extent:n,pixelBlock:null};const l=[],{xmin:c,xmax:f}=n,u=Math.round(s/(f-c)*e),d=u-Math.round((s/2-c)/(f-c)*e);let m=0;const h=[];for(let x=0;x<=o;x++){const v=new U.Z({xmin:0===x?c:-s/2,xmax:x===o?f-s*x:s/2,ymin:n.ymin,ymax:n.ymax,spatialReference:n.spatialReference}),R=0===x?u-d:x===o?e-m:u;m+=R,h.push(R);const S=t.disableWrapAround&&x>0?null:r._fetchPixels(v,R,i,t);l.push(S)}const g=(yield Promise.all(l)).map(x=>x?.pixelBlock);let y=null;const p={width:e,height:i};return y=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:p,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},t)).pixelBlock:(0,ie.us)(g,p,{blockWidths:h}),{extent:n,srcExtent:(0,B.tB)(n,r.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:y}})()}fetchRawPixels(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){e={x:Math.floor(e.x),y:Math.floor(e.y)};const a=yield r._fetchRawTiles(n,e,i,t),{nativeExtent:s,nativePixelSize:o,storageInfo:l}=r.rasterInfo,c=2**n,f=o.x*c,u=o.y*c,d=new U.Z({xmin:s.xmin+f*e.x,xmax:s.xmin+f*(e.x+i.width-1),ymin:s.ymax-u*(e.y+i.height-1),ymax:s.ymax-u*e.y,spatialReference:s.spatialReference});if(!a)return{extent:d,srcExtent:d,pixelBlock:null};const{pixelBlocks:m,mosaicSize:h}=a;if(1===m.length&&null!=m[0]&&m[0].width===i.width&&m[0].height===i.height)return{extent:d,srcExtent:d,pixelBlock:a.pixelBlocks[0]};const p={x:e.x%(n>0?l.pyramidBlockWidth:l.blockWidth),y:e.y%(n>0?l.pyramidBlockHeight:l.blockHeight)};let x;return x=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:h,destDimension:i,clipOffset:p,clipSize:i,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:(0,ie.us)(m,h,{clipOffset:p,clipSize:i}),{extent:d,srcExtent:d,pixelBlock:x}})()}fetchRawTile(n,e,i,t){throw new k.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(n){return(0,B.tB)(this.rasterInfo.extent,n)}decodePixelBlock(n,e){return!this.rasterJobHandler||e.useCanvas?(0,lt.J)(n,e):this.rasterJobHandler.decode({data:n,options:e})}request(n,e,i=0){var t=this;return(0,M.Z)(function*(){const{customFetchParameters:r}=t.ioConfig,{range:a,query:s,headers:o}=e;i=i??e.retryCount??t.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return yield(0,rt.Z)(n,{...e,query:{...s,...r},headers:{...o,...l}})}catch(c){if(i>0)return i--,t.request(n,e,i);throw c}})()}getSliceIndex(n){const{multidimensionalInfo:e}=this.rasterInfo;return null==e||null==n||0===n.length?null:(0,X.gk)(n,e)}getTileExtentFromTileInfo(n,e,i,t){const r=t.lodAt(n);return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:n,spatialReference:e,extent:i,pixelSize:t}=this.rasterInfo;if(!n.tileInfo){const r=[],a=n.maximumPyramidLevel||0;let s=Math.max(t.x,t.y),o=1/.0254*96*s;for(let c=0;c<=a;c++)r.unshift(new at.Z({level:a-c,resolution:s,scale:o})),s*=2,o*=2;const l=new W.Z({x:i.xmin,y:i.ymax,spatialReference:e});n.tileInfo=new re.Z({origin:l,size:[n.blockWidth,n.blockHeight],spatialReference:e,lods:r}),n.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(n,e=512,i=512,t){const{width:r,height:a,nativeExtent:s,pixelSize:o,spatialReference:l}=n,c=new W.Z({x:s.xmin,y:s.ymax,spatialReference:l});null==t&&(t=Math.max(0,Math.round(Math.log(Math.max(r,a))/Math.LN2-8)));const f=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],t);n.storageInfo=new we.Z({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:f})}computeBestPyramidLevelForLocation(n,e={}){return(0,M.Z)(function*(){return 0})()}computeBlockBoundary(n,e,i,t,r,a=0,s=2){if(1===r.length&&a>0){r=[...r];let{x:f,y:u}=r[0];for(let d=0;d<a;d++)f*=s,u*=s,r.push({x:f,y:u})}const o=[],{x:l,y:c}=t;for(let f=0;f<r.length;f++){const{x:u,y:d}=r[f];o.push({minCol:Math.floor((n.xmin-l+.1*u)/e/u),maxCol:Math.floor((n.xmax-l-.1*u)/e/u),minRow:Math.floor((c-n.ymax+.1*d)/i/d),maxRow:Math.floor((c-n.ymin-.1*d)/i/d)})}return o}getPyramidPixelSize(n){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(0===n)return e;if(null!=i&&i.length)return i[n-1];const r=t**n;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(n,e,i,t){const{spatialReference:r,nativeExtent:a,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=s,f=t&&null!=c?c.tileSize[0]:s.blockWidth,u=t&&null!=c?c.tileSize[1]:s.blockHeight,d=(0,B.nF)(n,r,i);if(!a.intersects(d)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:h,y:g}=m,y=(l.y-d.y)/g/u,p=(d.x-l.x)/h/f,x=Math.min(u-1,Math.floor((y-Math.floor(y))*u)),v=Math.min(f-1,Math.floor((p-Math.floor(p))*f));return{pyramidLevel:e,row:Math.floor(y),col:Math.floor(p),rowOffset:x,colOffset:v,blockWidth:f,srcLocation:d}}getTileExtent(n,e,i,t,r,a){const[s,o]=a,l=t.x+i*s*n.x,f=t.y-e*o*n.y;return new U.Z({xmin:l,xmax:l+s*n.x,ymin:f-o*n.y,ymax:f,spatialReference:r})}getBlockWidthHeight(n){return{blockWidth:n>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:n>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(n,e,i){const t=this.rasterInfo.storageInfo.blockBoundary[n];return!t||t.maxRow<e||t.maxCol<i||t.minRow>e||t.minCol>i}updateImageSpaceRasterInfo(n){const{extent:e,pixelSize:i}=n;if(-.5===e.xmin&&.5===e.ymax&&1===i.x&&1===i.y&&null==n.transform)return;const{width:t,height:r}=n,a=j.Z.WebMercator;n.spatialReference=a,n.extent=n.nativeExtent=new U.Z({xmin:-.5,ymax:.5,xmax:t-.5,ymin:.5-r,spatialReference:a}),n.isPseudoSpatialReference=!0,n.transform=null,n.pixelSize=new W.Z({x:1,y:1,spatialReference:a});const{extent:s,storageInfo:o}=n;if(o){o.origin=new W.Z({x:s.xmin,y:s.ymax,spatialReference:a});const{tileInfo:l}=o;if(l){l.origin=o.origin;const c=(n.nativePixelSize.x+n.nativePixelSize.y)/2;l.lods.forEach((f,u)=>{f.resolution=c*2**u,f.scale=96*f.resolution/.0254})}}}_fetchPixels(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){let a=(0,B.Hq)(n);if(a>=2)return{extent:n,pixelBlock:null};const s=r._getSourceDataInfo(n,e,i,t),{pyramidLevel:o,srcResolution:l,srcExtent:c,srcWidth:f,srcHeight:u,ul:d}=s;if(0===f||0===u)return{extent:n,srcExtent:c,pixelBlock:null};const{rasterInfo:m}=r,h=m.transform,g="gcs-shift"===h?.type,y=null!=(0,B.ut)(n.spatialReference);!g&&y||(a=(0,B.Hq)(s.srcExtent,g));const p=yield r._fetchRawTiles(o,d,{width:f,height:u,wrapCount:a},t);if(!p)return{extent:n,srcExtent:c,pixelBlock:null};const x=m.storageInfo,v=o>0?x.pyramidBlockWidth:x.blockWidth,R=o>0?x.pyramidBlockHeight:x.blockHeight;let{x:S,y:F}=m.pixelSize;if(o>0){const{pyramidResolutions:ae,pyramidScalingFactor:Mn}=x;if(null!=ae&&ae[o-1])({x:S,y:F}=ae[o-1]);else{const It=Mn**o;S*=It,F*=It}}const C=m.spatialReference,T=new W.Z({x:S,y:F,spatialReference:C}),O=v===f&&R===u&&d.x%v==0&&d.y%R==0,P=new W.Z({x:(n.xmax-n.xmin)/e,y:(n.ymax-n.ymin)/i,spatialReference:n.spatialReference}),N=!n.spatialReference.equals(C),Z=C.isGeographic?1e-9:1e-4,{datumTransformation:D}=t;if(!N&&O&&1===p.pixelBlocks.length&&v===e&&R===i&&r._isSameResolution(l,P,Z))return{extent:n,srcExtent:c,srcTilePixelSize:T,pixelBlock:p.pixelBlocks[0]};const z=y&&null!=(0,B.ut)(c.spatialReference)&&r._hasNoneOrGCSShiftTransform,J=t.requestProjectedLocalDirections&&r.rasterInfo.dataType.startsWith("vector");J&&!r.rasterJobHandler&&(yield(0,B.zD)());const E=r.rasterJobHandler?yield r.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:n,srcBufferExtent:p.extent,pixelSize:P.toJSON(),datumTransformation:D,rasterTransform:h,hasWrapAround:a>0||z,isAdaptive:!1!==r.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:J},t):(0,B.Qp)({projectedExtent:n,srcBufferExtent:p.extent,pixelSize:P,datumTransformation:D,rasterTransform:h,hasWrapAround:a>0||z,isAdaptive:!1,includeGCSGrid:J});let A;const L=!t.requestRawData,ne={rows:E.spacing[0],cols:E.spacing[1]},_=r._hasNoneOrGCSShiftTransform?r._getRasterTileAlignmentInfo(o,p.extent.xmin):void 0,{pixelBlocks:$,mosaicSize:se,isPartiallyFilled:xe}=p;let ee=null;if(r.rasterJobHandler)({pixelBlock:A,localNorthDirections:ee}=yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:$,srcMosaicSize:se,destDimension:L?{width:e,height:i}:null,coefs:L?E.coefficients:null,sampleSpacing:L?ne:null,projectDirections:J,gcsGrid:J?E.gcsGrid:null,isUV:"vector-uv"===r.rasterInfo.dataType,interpolation:t.interpolation,alignmentInfo:_,blockWidths:null},t));else{const ae=(0,ie.us)($,se,{alignmentInfo:_});A=L?(0,ie.Uk)(ae,{width:e,height:i},E.coefficients,ne,t.interpolation):ae,J&&E.gcsGrid&&(ee=(0,ie.Qh)({width:e,height:i},E.gcsGrid),A=(0,We.xQ)(A,r.rasterInfo.dataType,ee))}return t.requestRawData||J?{extent:n,srcExtent:c,srcTilePixelSize:T,pixelBlock:A,transformGrid:E,localNorthDirections:ee,isPartiallyFilled:xe}:{extent:n,srcExtent:c,srcTilePixelSize:T,pixelBlock:A}})()}_fetchRawTiles(n,e,i,t){var r=this;return(0,M.Z)(function*(){const{origin:a,blockBoundary:s}=r.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=r.getBlockWidthHeight(n);let{x:c,y:f}=e,{width:u,height:d,wrapCount:m}=i;const h=r._getRasterTileAlignmentInfo(n,0);t.buffer&&(c-=t.buffer.cols,f-=t.buffer.rows,u+=2*t.buffer.cols,d+=2*t.buffer.rows);let g=0,y=0,p=0;m&&null!=h&&(({worldColumnCountFromOrigin:y,originColumnOffset:p,rightPadding:g}=h),y*h.blockWidth-g>=c+u&&(g=0));const x=Math.floor(c/o),v=Math.floor(f/l),R=Math.floor((c+u+g-1)/o),S=Math.floor((f+d+g-1)/l),F=s[n];if(!F)return null;const{minRow:C,minCol:T,maxCol:O,maxRow:P}=F;if(0===m&&(S<C||R<T||v>P||x>O))return null;const N=new Array;let Z=!1;const D=null==r.ioConfig.allowPartialFill?t.allowPartialFill:r.ioConfig.allowPartialFill;for(let _=v;_<=S;_++)for(let $=x;$<=R;$++){let se=$;if(!t.disableWrapAround&&m&&null!=h&&y<=$&&(se=$-y-p),_>=C&&se>=T&&P>=_&&O>=se){const xe=r._tileFetchQueue.push({pyramidLevel:n,row:_,col:se,options:t},{signal:t.signal});N.push(D?new Promise(ee=>{xe.then(ae=>ee(ae)).catch(()=>{Z=!0,ee(null)})}):xe)}else N.push(Promise.resolve(null))}if(0===N.length)return null;const z=yield Promise.all(N),J={height:(S-v+1)*l,width:(R-x+1)*o},{spatialReference:E}=r.rasterInfo,A=r.getPyramidPixelSize(n),{x:L,y:ne}=A;return{extent:new U.Z({xmin:a.x+x*o*L,xmax:a.x+(R+1)*o*L,ymin:a.y-(S+1)*l*ne,ymax:a.y-v*l*ne,spatialReference:E}),pixelBlocks:z,mosaicSize:J,isPartiallyFilled:Z}})()}_isSameResolution(n,e,i){return Math.abs(n.x-e.x)<i&&Math.abs(n.y-e.y)<i}_fetchRawTile(n,e,i,t){const r=this.rasterInfo.storageInfo.blockBoundary[n];if(!r)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:o,maxRow:l}=r;if(e<a||i<s||e>l||i>o)return Promise.resolve(null);const c=(0,oe.Rq)(this.rasterId,t.sliceId),f=`${n}/${e}/${i}`;let u=(0,oe.Qg)(c,t.registryId,f);if(null==u){const d=new AbortController;u=this.fetchRawTile(n,e,i,{...t,signal:d.signal}),(0,oe.gX)(c,t.registryId,f,u,d),u.catch(()=>(0,oe.Gc)(c,t.registryId,f))}return t.signal&&(0,ve.fu)(t,()=>{(0,oe.OE)(c,t.registryId,f)}),u}_computeMagDirValues(n){const{bandCount:e,dataType:i}=this.rasterInfo;if((2!==e||"vector-magdir"!==i)&&"vector-uv"!==i||2!==n?.length||!n[0]?.length)return null;const t=n[0].length;if("vector-magdir"===i){const l=n[1].map(c=>(c+360)%360);return[n[0],l]}const[r,a]=n,s=[],o=[];for(let l=0;l<t;l++){const[c,f]=(0,We.Tg)([r[l],a[l]]);s.push(c),o.push(f)}return[s,o]}_getRasterTileAlignmentInfo(n,e){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=(0,B.P_)(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[n]}}_getSourceDataInfo(n,e,i,t={}){const r={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(r.srcResolution=t.srcResolution,this._updateSourceDataInfo(n,r));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:o,pyramidLevel:l}=r,c=s/e,f=o/i,u=l<a&&c*f>=16,d=l===a&&this._requireTooManySrcTiles(s,o,e,i);if(u||d||0===s||0===o){const m=new W.Z({x:(n.xmax-n.xmin)/e,y:(n.ymax-n.ymin)/i,spatialReference:n.spatialReference});let h=(0,B.VO)(m,this.rasterInfo.spatialReference,n,r.datumTransformation);if(u&&t.srcResolution&&(!h||t.srcResolution&&h.x+h.y<t.srcResolution.x+t.srcResolution.y)){const y=Math.round(Math.log(Math.max(c,f))/Math.LN2)-1;if(a-l+3>=y){const p=2**y;h={x:t.srcResolution.x*p,y:t.srcResolution.y*p}}}h&&(r.srcResolution=h,this._updateSourceDataInfo(n,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,e,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(n,e,i,t){const{tileInfo:r}=this.rasterInfo.storageInfo,s=n/i,o=e/t;return Math.ceil(n/r.size[0])*Math.ceil(e/r.size[1])>=256*Math.max(1,(i+t)/1024)||s>8||o>8}_updateSourceDataInfo(n,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:i}=this,t=i.spatialReference,{srcResolution:r,datumTransformation:a}=e,{pyramidLevel:s,pyramidResolution:o,excessiveReading:l}=(0,B.kr)(r,i,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||(0,B.tB)(n,t,a);if(null==c)return;const f=i.transform;f&&(c=f.inverseTransform(c)),e.srcExtent=c;const{x:u,y:d}=i.storageInfo.origin,m=Math.floor((c.xmin-u)/o.x+.1),h=Math.floor((d-c.ymax)/o.y+.1),g=Math.floor((c.xmax-u)/o.x-.1),y=Math.floor((d-c.ymin)/o.y-.1),p=c.width<.1*o.x?0:g-m+1,x=c.height<.1*o.y?0:y-h+1;e.pyramidLevel=s,e.pyramidResolution=o,e.srcWidth=p,e.srcHeight=x,e.ul={x:m,y:h}}_getRequestOptionsWithSliceId(n){return null!=this.rasterInfo.multidimensionalInfo&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)}),n}_processIdentifyResult(n,e){const{srcLocation:i,position:t,pyramidLevel:r,useTransposedTile:a}=e,s=n.pixels[0].length/n.width/n.height;if(n.mask&&!n.mask[t])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!a){const y=n.pixels.map(v=>v[t]),p={location:i,value:y,pyramidLevel:r},x=this._computeMagDirValues(y.map(v=>[v]));return x?.length&&(p.magdirValue=x.map(v=>v[0])),p}let l=n.pixels.map(y=>y.slice(t*s,t*s+s)),c=this._computeMagDirValues(l);const{requestSomeSlices:f,identifyOptions:u}=e;let d=(0,X.MO)(o,u.transposedVariableName);if(f){const y=(0,X.Ur)(d,u.multidimensionalDefinition,u.timeExtent);l=l.map(p=>y.map(x=>p[x])),c=c?.map(p=>y.map(x=>p[x])),d=y.map(p=>d[p])}const m=n.noDataValues||this.rasterInfo.noDataValue,h={pixels:l,pixelType:n.pixelType};let g;return null!=m&&((0,ot.Ao)(h,m),g=h.mask),{location:i,value:null,dataSeries:d.map((y,p)=>{const x={value:0===g?.[p]?null:l.map(v=>v[p]),multidimensionalDefinition:y.multidimensionalDefinition.map(v=>new Le.Z({...v,isSlice:!0}))};return c?.length&&(x.magdirValue=[c[0][p],c[1][p]]),x}),pyramidLevel:r}}};(0,b._)([(0,w.Cb)()],G.prototype,"_rasterTileAlignmentInfo",void 0),(0,b._)([(0,w.Cb)()],G.prototype,"_tileFetchQueue",void 0),(0,b._)([(0,w.Cb)({readOnly:!0})],G.prototype,"_isGlobalWrappableSource",null),(0,b._)([(0,w.Cb)({readOnly:!0})],G.prototype,"_hasNoneOrGCSShiftTransform",null),(0,b._)([(0,w.Cb)()],G.prototype,"rasterJobHandler",null),(0,b._)([(0,w.Cb)({readOnly:!0})],G.prototype,"rasterId",null),(0,b._)([(0,w.Cb)(Ae.HQ)],G.prototype,"url",null),(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),(0,b._)([(0,w.Cb)()],G.prototype,"hasUniqueSourceStorageInfo",void 0),(0,b._)([(0,w.Cb)()],G.prototype,"rasterInfo",void 0),(0,b._)([(0,w.Cb)()],G.prototype,"ioConfig",void 0),(0,b._)([(0,w.Cb)()],G.prototype,"sourceJSON",void 0),G=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.BaseRaster")],G);const le=G;var ut=I(16730),K=I(25688);function Ue(n,e,i){return je.apply(this,arguments)}function je(){return(je=(0,M.Z)(function*(n,e,i){if("extent"===i.type)return function Ut(n,e,i){const{width:t,height:r}=n,a=new Uint8Array(t*r),s=e.width/t,o=e.height/r;if(i.width/s<.5||i.height/o<.5)return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});const{xmin:l,xmax:c,ymin:f,ymax:u}=e,{xmin:d,xmax:m,ymin:h,ymax:g}=i,y=Math.max(l,d),p=Math.min(c,m),x=Math.max(f,h),v=Math.min(u,g),R=.5*s,S=.5*o;if(p-y<R||v-x<S||p<l+R||y>c-R||x>u-S||v<f+S)return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});const F=Math.max(0,(y-l)/s),C=Math.min(t,Math.max(0,(p-l)/s)),T=Math.max(0,(u-v)/o),O=Math.min(r,Math.max(0,(u-x)/o)),P=Math.round(F),N=Math.round(C)-1,Z=Math.round(T),D=Math.round(O)-1;if(P===N&&F%1>.5&&C%1<.5||Z===D&&T%1>.5&&O%1<.5)return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});if(0===P&&0===Z&&N===t&&D===r)return n;const z=n.mask;for(let J=Z;J<=D;J++)for(let E=P;E<=N;E++){const A=J*t+E;a[A]=z?z[A]:255}return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]})}(n,e,i);const{width:t,height:r}=n,a=new Uint8Array(t*r),{contains:s,intersects:o}=yield Promise.all([I.e(4918),I.e(4766)]).then(I.bind(I,44766));return o(e,i)?"polyline"===i.type?function jt(n,e,i){const{width:t,height:r}=n,a=new Uint8Array(t*r),s=e.width/t,o=e.height/r,{xmin:l,ymax:c}=e,{paths:f}=i,u=n.mask;for(let d=0;d<f.length;d++){const m=f[d];for(let h=0;h<m.length-1;h++){const[g,y]=m[h],[p,x]=m[h+1];let v=Math.floor((c-y)/o),R=Math.floor((c-x)/o);if(R<v){const F=v;v=R,R=F}v=Math.max(0,v),R=Math.min(r-1,R);const S=(p-g)/(x-y);for(let F=v;F<=R;F++){const C=F===v?Math.max(y,x):(r+1-F)*o,T=F===R?Math.min(y,x):C-o;let O=Math.floor(x===y?(g-l)/s:(S*(C-y)+g-l)/s),P=Math.floor(x===y?(p-l)/s:(S*(T-y)+g-l)/s);if(P<O){const Z=O;O=P,P=Z}const N=F*t;O=Math.max(0,O),P=Math.min(t-1,P);for(let Z=N+O;Z<=N+P;Z++)a[Z]=u?u[Z]:255}}}return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]})}(n,e,i):s(i,e)?n:function Wt(n,e,i){if(!n)return n;const{width:t,height:r}=n,a=e.width/t,s=e.height/r,{xmin:o,ymax:l}=e;let c;if("extent"===i.type){const y=(i.xmin-o)/a,p=(i.xmax-o)/a,x=(l-i.ymax)/s,v=(l-i.ymin)/s;c=[[[y,x],[y,v],[p,v],[p,x],[y,x]]]}else c=i.rings.map(y=>y.map(([p,x])=>[(p-o)/a,(l-x)/s]));const f=document.createElement("canvas");f.width=t,f.height=r;const u=f.getContext("2d");u.fillStyle="#f00",u.beginPath(),c.forEach(y=>{u.moveTo(y[0][0],y[0][1]);for(let p=0;p<y.length;p++)u.lineTo(y[p][0],y[p][1]);u.closePath()}),u.fill();const d=u.getImageData(0,0,t,r).data,m=n.mask,h=t*r,g=new Uint8Array(h);for(let y=0;y<h;y++)m&&!m[y]||(g[y]=d[4*y+3]>127?255:0);return new K.Z({pixelType:n.pixelType,width:t,height:r,mask:g,maskIsAlpha:!1,pixels:[...n.pixels]})}(n,e,i):new K.Z({pixelType:n.pixelType,width:t,height:r,mask:a,maskIsAlpha:!1,pixels:[...n.pixels]})})).apply(this,arguments)}var Ze=I(17253);let de=class extends le{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const{rasterFunction:i}=e;e.primaryRasters?.rasters?.length?i.sourceRasters=e.primaryRasters.rasters:(e.primaryRasters=i.getPrimaryRasters(),e.rasterJobHandler&&e.primaryRasters.rasters?.forEach(f=>f.rasterJobHandler=e.rasterJobHandler));const{rasters:t,rasterIds:r}=e.primaryRasters,a=t.map(f=>f.rasterInfo?void 0:f.open(n));yield Promise.all(a);const s=t.map(({rasterInfo:f})=>f),o=i.bind({rasterInfos:s,rasterIds:r});if(i.rawSourceRasterInfos=s,!o.success||0===s.length)throw new k.Z("raster-function:open",`cannot bind the function: ${o.error??""}`);const l="Table"===i.functionName?i:i.functionArguments?.raster;"Table"===l?.functionName&&(i.rasterInfo.attributeTable=Ze.Z.fromJSON(l.functionArguments.attributeTableAsRecordSet)),yield e.syncJobHandler();const c=s[0];e.hasUniqueSourceStorageInfo=1===s.length||s.slice(1).every(f=>e._hasSameStorageInfo(f,c)),e.set("sourceJSON",t[0].sourceJSON),e.set("rasterInfo",i.rasterInfo),yield e._updateClipGeometry()})()}syncJobHandler(){var n=this;return(0,M.Z)(function*(){return n.rasterJobHandler?.updateRasterFunction(n.rasterFunction)})()}fetchPixels(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){const{rasters:a,rasterIds:s}=r.primaryRasters;let o=!1;const{interpolation:l}=t,c=r.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!t.requestRawData&&c&&(o=1===a.length&&!t.skipRasterFunction,t={...t,interpolation:"bilinear",requestRawData:o});const f=a.map(R=>R.fetchPixels(n,e,i,t)),u=yield Promise.all(f),d=u.map(R=>R.pixelBlock),m=o||t.requestRawData?u.map(R=>R.srcTilePixelSize):null;if(t.skipRasterFunction||d.every(R=>null==R))return u[0];const h=u.find(R=>null!=R.pixelBlock)?.extent??n;let g=r.rasterJobHandler?yield r.rasterJobHandler.process({extent:h,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s}):r.rasterFunction.process({extent:h,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s});const{transformGrid:y}=u[0];if(!o||null==g||null==y){const R=t.noClip?null:r.getClippingGeometry(h.spatialReference);return t.noClip||t.requestRawData||null==g||!R||(g=yield Ue(g,h,R)),{...u[0],pixelBlock:g}}const p={rows:y.spacing[0],cols:y.spacing[1]};let x;x=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:e,height:i},coefs:y.coefficients,sampleSpacing:p,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},t)).pixelBlock:(0,ie.Uk)(g,{width:e,height:i},y.coefficients,p,l);const v=t.noClip?null:r.getClippingGeometry(n.spatialReference);return t.noClip||t.requestRawData||null==x||null==v||(x=yield Ue(x,n,v)),{extent:n,srcExtent:u[0].srcExtent,pixelBlock:x}})()}getClippingGeometry(n){const e=this._clippingGeometry.get("0");if(!n||!e)return e;const i=this._getSRKey(n);let t=this._clippingGeometry.get(i);return null!=t||(t=n.equals(e.spatialReference)?e:(0,B.Wt)(e,n),this._clippingGeometry.set(i,t)),t}_hasSameStorageInfo(n,e){const{storageInfo:i,pixelSize:t,spatialReference:r,extent:a}=n,{storageInfo:s,pixelSize:o,spatialReference:l,extent:c}=e;return t.x===o.x&&t.y===o.y&&r.equals(l)&&a.equals(c)&&i.blockHeight===s.blockHeight&&i.blockWidth===s.blockWidth&&i.maximumPyramidLevel===s.maximumPyramidLevel}_updateClipGeometry(){var n=this;return(0,M.Z)(function*(){const e=n.rasterFunction.getClippingGeometries()[0];let i=e?.clippingGeometry;if(i&&"inside"===e.clippingType){const{extent:t}=n.rasterInfo,{difference:r,densify:a}=yield Promise.all([I.e(4918),I.e(4766)]).then(I.bind(I,44766));let s=a(Bt.Z.fromExtent(t),2*(t.width+t.height)/40);s=(0,B.Wt)(s,i.spatialReference),i=r(s,i)}n._clippingGeometry.clear(),i&&n._clippingGeometry.set("0",i)})()}_getSRKey(n){return String(n.wkid??n.wkt??n.wkt2)}};(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),(0,b._)([(0,w.Cb)()],de.prototype,"tileType",void 0),(0,b._)([(0,w.Cb)()],de.prototype,"rasterFunction",void 0),(0,b._)([(0,w.Cb)()],de.prototype,"primaryRasters",void 0),de=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.FunctionRaster")],de);const ft=de;var Ge=I(47444),me=I(17057),ce=I(8341),_t=I(99033),$t=I(27599),Xt=I(37084);const Yt=n=>{let e=class extends n{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){"none"===t?.functionName?.toLowerCase()&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}get rasterInfo(){return(0,Zt.Mr)(fe.Z.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(t){this._set("url",(0,st.Nm)(t,fe.Z.getLogger(this)))}set renderer(t){null==t&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,r,a){const s=r?.layerDefinition?.drawingInfo?.renderer;return(0,ze.ij)(s,a)||void 0}convertVectorFieldData(t,r){var a=this;return(0,M.Z)(function*(){const{serviceRasterInfo:s}=a;if(null==t||!s)return null;const o=a._rasterJobHandler.instance,l=s.dataType;return o?o.convertVectorFieldData({pixelBlock:t,dataType:l},r):(0,We.KC)(t,l)})()}computeStatisticsHistograms(t,r){var a=this;return(0,M.Z)(function*(){t=(0,Oe.TJ)($t.Z,t).clone();const{serviceRasterInfo:s}=a,{geometry:o}=t;if(null==o)throw new k.Z("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=o;const{spatialReference:c}=s;o.spatialReference.equals(c)||(yield(0,B.zD)(),l="extent"===o.type?(0,B.tB)(o,c):(0,B.Wt)(o,c));const f=t.pixelSize??new W.Z({x:s.pixelSize.x,y:s.pixelSize.y,spatialReference:c}),{extent:u,width:d,height:m}=function Gt(n,e,i,t=!0){const{spatialReference:r}=n,{x:a,y:s}=function Ht(n,e){if(n.spatialReference.equals(e))return n;const i=(0,ut.c9)(n.spatialReference),t=(0,ut.c9)(e);if(i===t)return n;const r=i/t;return{x:n.x*r,y:n.y*r}}(i,r);let o,l,c;const f="extent"===e.type?e:e.extent;let{xmin:u,xmax:d,ymax:m,ymin:h}=f;const{xmin:g,ymax:y}=n.extent;return t?(u=g+(u>g?a*Math.round((u-g)/a):0),m=y-(m<y?s*Math.round((y-m)/s):0),d=g+(d>g?a*Math.round((d-g)/a):0),h=y-(h<y?s*Math.round((y-h)/s):0),o=new U.Z({xmin:u,ymax:m,xmax:d,ymin:h,spatialReference:r}),l=Math.round(o.width/a),c=Math.round(o.height/s)):(l=Math.floor((d-u)/a+.8),c=Math.floor((m-h)/s+.8),u=g+(u>g?a*Math.floor((u-g)/a+.1):0),m=y-(m<y?s*Math.floor((y-m)/s+.1):0),d=u+l*a,h=m-c*s,o=new U.Z({xmin:u,ymax:m,xmax:d,ymin:h,spatialReference:r})),{extent:o,width:l,height:c}}(s,l,f),h=yield a.fetchPixels(u,d,m,{...r,interpolation:"nearest"});if(null==h.pixelBlock)throw new k.Z("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=yield Ue(h.pixelBlock,u,l),y=a._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:g},r):(0,me.js)(g)})()}createFlowMesh(t,r){var a=this;return(0,M.Z)(function*(){const s=a._rasterJobHandler.instance;return s?s.createFlowMesh(t,r):(0,Xt.GE)(t.meshType,t.simulationSettings,t.flowData,null!=r.signal?r.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(t){const{multidimensionalInfo:r}=this.serviceRasterInfo??{};if(null==r)return t;let a=t.multidimensionalDefinition||this.multidimensionalDefinition;a?.length||(a=(0,X.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=t.timeExtent||this.timeExtent;if(null!=a&&null!=s&&(null!=s.start||null!=s.end)){a=a.map(g=>g.clone());const o=r.variables.find(({name:g})=>g===a[0].variableName)?.dimensions?.find(({name:g})=>"StdTime"===g),l=a.find(({dimensionName:g})=>"StdTime"===g);if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:f}=s,u=null==c?null:c.getTime(),d=null==f?null:f.getTime(),m=u??d,h=d??u;if(null!=o.values){const g=o.values.filter(y=>Array.isArray(y)?m===h?y[0]<=m&&y[1]>=m:y[0]<=m&&y[1]>m||y[0]<h&&y[1]>=h||y[0]>=m&&y[1]<=h||y[0]<m&&y[1]>h:m===h?y===m:y>=m&&y<=h);if(g.length){const y=g.sort((p,x)=>{const v=Array.isArray(p)?p[0]:p,R=Array.isArray(p)?p[1]:p,S=Array.isArray(x)?x[0]:x,F=Array.isArray(x)?x[1]:x;return m===h?v-S:Math.abs(R-h)-Math.abs(F-h)})[0];l.values=[y]}else a=null}else if(o.hasRegularIntervals&&o.extent){const[g,y]=o.extent;m>y||h<g?a=null:l.values=m===h?[m]:[Math.max(g,m),Math.min(y,h)]}}return null!=a&&(0,X.nb)(a,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:a}}updateRasterFunction(){var t=this;return(0,M.Z)(function*(){if(!t.loaded||"imagery-tile"!==t.type||!t.rasterFunction&&!t._cachedRasterFunctionJson||JSON.stringify(t.rasterFunction)===JSON.stringify(t._cachedRasterFunctionJson))return;if(t._isConstructedFromFunctionRaster&&"Function"===t.raster.datasetFormat){const u=t.raster.rasterFunction.toJSON();return!t.rasterFunction&&u&&t._set("rasterFunction",He.Z.fromJSON(u)),void(t._cachedRasterFunctionJson=t.rasterFunction?.toJSON())}let r,a=t.raster,s=!1;"Function"===a.datasetFormat?(r=a.primaryRasters.rasters,a=r[0],s=!0):r=[a];const{rasterFunction:o}=t;if(o){const u={raster:a};r.length>1&&r.forEach(h=>u[h.url]=h);const d=(0,Ge.Ue)(o.functionDefinition?.toJSON()??o.toJSON(),u),m=new ft({rasterFunction:d});m.rasterJobHandler=t._rasterJobHandler.instance,yield m.open(),t._cachedRasterFunctionJson=t.rasterFunction?.toJSON(),t.raster=m}else t.raster=a,t._cachedRasterFunctionJson=null,yield a.when();if(t._cachedRendererJson=null,!s&&!o)return;const{bandIds:l}=t,{bandCount:c}=t.raster.rasterInfo,f=l?.length?l.some(u=>u>=c):c>=3;l&&(f||t.renderer&&"raster-stretch"!==t.renderer.type)&&t._set("bandIds",null),t._configDefaultRenderer("auto")})()}updateRenderer(){var t=this;return(0,M.Z)(function*(){const{loaded:r,symbolizer:a}=t;if(!r||!a||!t.renderer)return;const{rasterInfo:s}=t.raster,l=(0,X.N3)(s,{multidimensionalDefinition:t.multidimensionalDefinition,multidimensionalSubset:t.multidimensionalSubset})?.name,c=(0,ce.ol)({...t.renderer.toJSON(),variableName:l});if(JSON.stringify(t._cachedRendererJson)===JSON.stringify(c))return;const f=t._rasterJobHandler.instance;f&&(a.rasterInfo=(0,ce.FI)(s,l),a.rendererJSON=c,a.bind(),yield f.updateSymbolizer(a),t._cachedRendererJson=c)})()}applyRenderer(t,r){var a=this;return(0,M.Z)(function*(){const s=t?.pixelBlock;if(!(null!=s&&s.pixels&&s.pixels.length>0))return null;let o;yield a.updateRenderer();const l=a._rasterJobHandler.instance,c=a.bandIds??[];return o=l?yield l.symbolize({...t,simpleStretchParams:r,bandIds:c}):a.symbolizer.symbolize({...t,simpleStretchParams:r,bandIds:c}),o})()}getTileUrl(t,r,a){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${t}/${r}/${a}`:""}getCompatibleTileInfo(t,r,a=!1){if(!this.loaded||null==r)return null;if(a&&t.equals(this.spatialReference))return this.tileInfo;const s=(0,it.C5)(t);return re.Z.create({size:256,spatialReference:t,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:r.xmin,y:r.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}fetchTile(t,r,a,s={}){var o=this;return(0,M.Z)(function*(){if(i(o),s.requestAsImageElement){const c=o.getTileUrl(t,r,a);return(0,rt.Z)(c,{responseType:"image",query:{...o.refreshParameters,...o.raster.ioConfig.customFetchParameters},signal:s.signal}).then(f=>f.data)}const{serviceRasterInfo:l}=o;return null!=l.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:o.raster.getTileExtentFromTileInfo(t,r,a,s.tileInfo||l.storageInfo.tileInfo),pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),"raster-shaded-relief"===o.renderer?.type&&(s={...s,buffer:{cols:1,rows:1}}),o.raster.fetchTile(t,r,a,s))})()}fetchPixels(t,r,a,s={}){var o=this;return(0,M.Z)(function*(){return null!=o.serviceRasterInfo.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:t,pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),r=Math.round(r),a=Math.round(a),o.raster.fetchPixels(t,r,a,s))})()}identify(t,r={}){var a=this;return(0,M.Z)(function*(){const{raster:s,serviceRasterInfo:o}=a;if(!(null==o.multidimensionalInfo||o.hasMultidimensionalTranspose&&((0,X.WU)(r.multidimensionalDefinition)||r.transposedVariableName||r.timeExtent)||null!=(r=a.normalizeRasterFetchOptions(r)).multidimensionalDefinition))return{location:t,value:null};const l=a.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(t))throw new k.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return s.identify(t,r)})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.serviceRasterInfo?.multidimensionalInfo;if(null==t||"standard-time"!==this.serviceRasterInfo?.dataType)return!1;const r=this.multidimensionalDefinition,a=r?.[0]?.variableName;return t.variables.some(s=>s.name===a&&(!r?.[0].dimensionName||s.dimensions.some(o=>"StdTime"===o.name)))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){return(0,X.jj)(this.multidimensionalSubset,t??this.serviceRasterInfo?.multidimensionalInfo)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,X.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){var t=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const r=new kt.Z;return this._rasterJobHandler.connectionPromise=r.initialize().then((0,M.Z)(function*(){i(t),t._rasterJobHandler.instance=r,t.raster.rasterJobHandler=r,"Function"===t.raster.datasetFormat&&t.raster.syncJobHandler(),t.rasterFunction&&(yield t.updateRasterFunction().catch(()=>{})),t.renderer&&t.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:t}=this,r=(0,ce.In)(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",r)}}_configDefaultRenderer(t="no"){i(this);const{rasterInfo:r}=this.raster;!this.bandIds&&r.bandCount>1&&(this.bandIds=(0,ce.YD)(r));const s=(0,X.N3)(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===t){const f=(0,ce.Ob)(r,{bandIds:this.bandIds,variableName:s}),u=r.statistics,d=u&&u.length>0?u[0]:null;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===f.type&&((d?.max??0)>1e24||(d?.min??0)<-1e24)&&(f.dynamicRangeAdjustment=!0,f.statistics=null,"none"===f.stretchType&&(f.stretchType="min-max")),this.renderer=f}const o=(0,ce.ol)({...this.renderer.toJSON(),variableName:s}),l=(0,ce.FI)(r,s);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new _t.Z({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if("auto"===t){const{colormap:f}=this.raster.rasterInfo,u=this.renderer;if(null!=f&&"raster-colormap"===u.type){const d=(0,ce.Ob)(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(u)&&this._configDefaultRenderer("override")}else if("raster-stretch"===u.type){const d=this.bandIds?.length,m=u.statistics?.length;!u.dynamicRangeAdjustment&&m&&d&&m!==d&&this._configDefaultRenderer("override")}}}else fe.Z.getLogger(this).warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),"auto"===t&&this._configDefaultRenderer("override")}};function i(t){if(!t.raster||!t.serviceRasterInfo)throw new k.Z("imagery-tile","no raster")}return(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),(0,b._)([(0,w.Cb)()],e.prototype,"bandIds",void 0),(0,b._)([(0,w.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),(0,b._)([(0,w.Cb)({json:{read:!1}})],e.prototype,"fullExtent",null),(0,b._)([(0,w.Cb)()],e.prototype,"interpolation",void 0),(0,b._)([(0,w.Cb)()],e.prototype,"ioConfig",void 0),(0,b._)([(0,w.Cb)({type:[Le.Z],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),(0,b._)([(0,w.Cb)({type:Dt.Z,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),(0,b._)([(0,w.Cb)()],e.prototype,"raster",void 0),(0,b._)([(0,w.Cb)({type:He.Z,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),(0,b._)([(0,w.Cb)({readOnly:!0})],e.prototype,"rasterInfo",null),(0,b._)([(0,w.Cb)()],e.prototype,"serviceRasterInfo",void 0),(0,b._)([(0,w.Cb)()],e.prototype,"sourceJSON",void 0),(0,b._)([(0,w.Cb)({readOnly:!0,type:j.Z,json:{read:!1}})],e.prototype,"spatialReference",void 0),(0,b._)([(0,w.Cb)({type:re.Z})],e.prototype,"tileInfo",void 0),(0,b._)([(0,w.Cb)(Ae.HQ)],e.prototype,"url",null),(0,b._)([(0,w.Cb)({types:ze.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:ze.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],e.prototype,"renderer",null),(0,b._)([(0,Nt.r)("renderer")],e.prototype,"readRenderer",null),(0,b._)([(0,w.Cb)({clonable:!1})],e.prototype,"symbolizer",void 0),e=(0,b._)([(0,Q.j)("esri.layers.ImageryTileMixin")],e),e};var Qt=I(49286),Kt=I(6647),qt=I(30346),en=I(99555),tn=I(97941),Ie=I(36255),nn=I(2939),Te=I(84727),dt=I(15365);function rn(n){const e=n.fields,i=n.records,t=e.some(c=>"oid"===c.name.toLowerCase())?"OBJECTID":"OID",r=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=r.map(c=>c.name),s=[];let o=0,l=0;return i.forEach(c=>{const f={};for(f[t]=o++,l=1;l<a.length;l++)f[a[l]]=c[l-1];s.push({attributes:f})}),{displayFieldName:"",fields:r,features:s}}class mt{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),t=3&i.getUint8(0);if(3!==t)return{header:{version:t},recordSet:null};const r=i.getUint32(4,!0),a=i.getUint16(8,!0),s=i.getUint16(10,!0),o={version:t,recordCount:r,headerByteCount:a,recordByteCount:s};let l=32;const c=[],f=[];let u;if(3===t){for(;13!==i.getUint8(l);)u=String.fromCharCode(i.getUint8(l+11)).trim(),c.push({name:(0,dt.f)(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:i.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;f.length<r&&e.byteLength-l>s;){const d=[];32===i.getUint8(l)?(l+=1,c.forEach(m=>{if("C"===m.type)d.push((0,dt.f)(new Uint8Array(e,l,m.length)).trim());else if("N"===m.type)d.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if("F"===m.type)d.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if("D"===m.type){const h=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();d.push(new Date(parseInt(h.substring(0,4),10),parseInt(h.substring(4,6),10)-1,parseInt(h.substring(6,8),10)))}l+=m.length}),f.push(d)):l+=s}}return{header:o,fields:c,records:f,recordSet:rn({fields:c,records:f})}}}var pt=I(46572);const pe=new Map;pe.set("int16","esriFieldTypeSmallInteger"),pe.set("int32","esriFieldTypeInteger"),pe.set("int64","esriFieldTypeInteger"),pe.set("float32","esriFieldTypeSingle"),pe.set("float64","esriFieldTypeDouble"),pe.set("text","esriFieldTypeString");let Ce=class extends le{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const{data:i}=yield e.request(e.url+"/conf.json",{signal:n?.signal});if(!e._validateHeader(i))throw new k.Z("cloudraster:open","Invalid or unsupported conf.json.");e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:r}=e._parseHeader(i);if("thematic"===r.dataType){const a=yield e._fetchAuxiliaryInformation();r.attributeTable=a}e._set("storageInfo",t),e._set("rasterInfo",r),e.ioConfig.retryCount=e.ioConfig.retryCount||0})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){const{transposeInfo:a}=r.rasterInfo.storageInfo,{transposedVariableName:s}=t,o=!(!a||!s),l=o?0:r.rasterInfo.storageInfo.maximumPyramidLevel-n;if(l<0)return null;const c=r._buildCacheFilePath(l,e,i,t.multidimensionalDefinition,s),f=r._getIndexRecordFromBundle(e,i,o),u=yield r.request(c,{range:{from:0,to:r.storageInfo.headerSize-1},responseType:"array-buffer",signal:t.signal});if(!u)return null;const d=new Uint8Array(u.data),m=r._getTileEndAndContentType(d,f);if(0===m.recordSize)return null;const h=yield r.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:t.signal});if(!h)return null;const[g,y]=r._getTileSize(o);return r.decodePixelBlock(h.data,{width:g,height:y,planes:null,pixelType:null,returnInterleaved:o})})()}_validateHeader(n){return n&&"RasterInfo"===n.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(i=>!n[i])}_parseHeader(n){const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][n.pixelType],{bandCount:i,colormap:t,blockWidth:r,blockHeight:a,firstPyramidLevel:s,maximumPyramidLevel:o}=n,l=n.statistics?.map(L=>({min:L.min,max:L.max,avg:L.mean,stddev:L.standardDeviation,median:L.median,mode:L.mode})),c=n.histograms?.[0]?.counts?.length?n.histograms:null,f=n.extent.spatialReference,u=n.geodataXform?.spatialReference,d=new j.Z(f?.wkid||f?.wkt||f?.wkt2?f:u);let m=new U.Z({xmin:n.extent.xmin,ymin:n.extent.ymin,xmax:n.extent.xmax,ymax:n.extent.ymax,spatialReference:d});const h=new W.Z({x:n.pixelSizeX,y:n.pixelSizeY,spatialReference:d}),g=Math.round((m.xmax-m.xmin)/h.x),y=Math.round((m.ymax-m.ymin)/h.y),p=this._parseTransform(n.geodataXform),x=p?m:null;p&&(m=p.forwardTransform(m),h.x=(m.xmax-m.xmin)/g,h.y=(m.ymax-m.ymin)/y);const v=n.properties??{},R=n.format.toLowerCase().replace("cache/",""),S=new W.Z(n.origin.x,n.origin.y,d);let F,C,T,O;if(t?.colors)for(F=[],C=0;C<t.colors.length;C++)T=t.colors[C],O=t.values?t.values[C]:C,F.push([O,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const P=n.LODInfos,N=[];for(C=0;C<P.levels.length;C++)N.push(new at.Z({level:P.levels[C],resolution:P.resolutions[C],scale:96/.0254*P.resolutions[C]}));const Z=new re.Z({dpi:96,lods:N,format:R,origin:S,size:[r,a],spatialReference:d}),D={recordSize:8,packetSize:n.packetSize,headerSize:n.packetSize*n.packetSize*8+64},z=[{maxCol:Math.ceil(g/r)-1,maxRow:Math.ceil(y/a)-1,minCol:0,minRow:0}];let J=2;if(o>0)for(C=0;C<o;C++)z.push({maxCol:Math.ceil(g/J/r)-1,maxRow:Math.ceil(y/J/a)-1,minCol:0,minRow:0}),J*=2;const E=n.mdInfo;let A=null;if(E&&v._yxs){const L=v._yxs;A={packetSize:L.PacketSize,tileSize:[L.TileXSize,L.TileYSize]}}return{storageInfo:D,rasterInfo:new Te.Z({width:g,height:y,pixelType:e,bandCount:i,extent:m,nativeExtent:x,transform:p,spatialReference:d,pixelSize:h,keyProperties:v,statistics:l,histograms:c,multidimensionalInfo:E,colormap:F,storageInfo:new we.Z({blockWidth:r,blockHeight:a,pyramidBlockWidth:r,pyramidBlockHeight:a,origin:S,tileInfo:Z,transposeInfo:A,firstPyramidLevel:s,maximumPyramidLevel:o,blockBoundary:z})})}}_parseTransform(n){if(!(0,pt.j)(n))throw new k.Z("cloudraster:open","the data contains unsupported geodata transform types");const e=(0,pt.c)(n);if("identity"===e.type)return null;if("polynomial"!==e.type||!e.forwardCoefficients?.length||!e.inverseCoefficients?.length)throw new k.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}_fetchAuxiliaryInformation(n){var e=this;return(0,M.Z)(function*(){const i=e.request(e.url+"/conf.vat.json",{signal:n}).then(s=>s.data).catch(()=>null),t=e.request(e.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:n}).then(s=>s.data).catch(()=>null),r=yield Promise.all([i,t]);let a;if(r[0]){let s=r[0].fields;const o=r[0].values;if(s&&o){s=s.map(c=>({type:"OID"===c.name?"esriFieldTypeOID":pe.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));s&&o&&(a={fields:s,features:l})}}return!a&&r[1]&&(a=mt.parse(r[1]).recordSet),Ze.Z.fromJSON(a)})()}_buildCacheFilePath(n,e,i,t,r){const a=this._getPackageSize(!!r),s=Math.floor(e/a)*a,o=Math.floor(i/a)*a,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=n>=10?n.toString():"0"+n.toString();const{multidimensionalInfo:f}=this.rasterInfo,u=t?.[0];if(null==f||!u)return`${this.url}/_alllayers/${c}/${l}.bundle`;let d="_yxs";if(!r){d=f.variables.find(g=>g.name===u.variableName).dimensions[0].values.indexOf(u.values[0]).toString(16);const h=4-d.length;for(let g=0;g<h;g++)d="0"+d;d="S"+d}const m=this._getVariableFolderName(r||u.variableName);return`${this.url}/_alllayers/${m}/${d}/${c}/${l}.bundle`}_getPackageSize(n=!1){const{transposeInfo:e}=this.rasterInfo.storageInfo;return n&&null!=e?e.packetSize??0:this.storageInfo.packetSize}_getTileSize(n=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:i}=e;return n&&null!=i?i.tileSize:e.tileInfo.size}_getVariableFolderName(n){return""===(n=n.trim())?"_v":n.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(n,e,i=!1){const t=this._getPackageSize(i),r=t*(n%t)+e%t;if(r<0)throw new Error("Invalid level / row / col");return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(n,e){const i=n.subarray(e,e+8);let t,r=0;for(t=0;t<5;t++)r|=(255&i[t])<<8*t;const a=0xffffffffff&r;for(r=0,t=5;t<8;t++)r|=(255&i[t])<<8*(t-5);return{position:a,recordSize:0xffffffffff&r}}_toHexString4(n){let e=n.toString(16);if(4!==e.length){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};(0,b._)([(0,w.Cb)({readOnly:!0})],Ce.prototype,"storageInfo",void 0),(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.CloudRaster")],Ce);const sn=Ce;var an=I(91558),on=I(56683);function yt(n){return["x","e","east","long","longitude"].includes(n.toLowerCase())}function gt(n){return["y","n","west","lat","latitude"].includes(n.toLowerCase())}function Ve(n){const e=(0,on.G3)();return e?n[e]??Object.values(n)[0]:Object.values(n)[0]}function _e(){return Math.round(255*Math.random())}function un(n){let e=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let t=0;t<n.length;t++){const r=n[t];null!=r&&(r<e&&(e=r),r>i&&(i=r))}return(0,ot.JQ)(e,i)}function fn(n,e,i){const t=n.map((l,c)=>({name:l,count:e[c]})).sort((l,c)=>l.name>c.name?-1:1),r=(a=1,l=>a*=l.count);var a;const s=[...t.slice(1),{name:"",count:1}].reverse().map(r).reverse();let o=0;for(let l=n.length-1;l>=0;l--)o+=s[t.findIndex(({name:c})=>c===n[l])]*(i%e[l]),i=Math.floor(i/e[l]);return o}let be=class extends le{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const i=e.source,{pixelBlocks:t,attributeTable:r,statistics:a,histograms:s,name:o,nativeExtent:l,transform:c}=i,f=t[0],{width:u,height:d,pixelType:m}=f,h=i.extent??new U.Z({xmin:-.5,ymin:.5,xmax:u-.5,ymax:d-.5,spatialReference:new j.Z({wkid:3857})}),g=i.isPseudoSpatialReference??!i.extent,y={x:h.width/u,y:h.height/d},p={...i.keyProperties};r&&(p.DataType="Thematic");const x=new Te.Z({width:u,height:d,pixelType:m,extent:h,nativeExtent:l,attributeTable:r,transform:c,pixelSize:y,spatialReference:h.spatialReference,bandCount:f.pixels.length,keyProperties:p,multidimensionalInfo:i.multidimensionalInfo,statistics:a,isPseudoSpatialReference:g,histograms:s});e.ioConfig.skipMapInfo&&e.updateImageSpaceRasterInfo(x),e.createRemoteDatasetStorageInfo(x,512,512),e._set("rasterInfo",x),e.updateTileInfo(),x.multidimensionalInfo?yield e._buildMDimStats(i.pixelBlocks,x.multidimensionalInfo):yield e._buildInMemoryRaster(f,{width:512,height:512},n),x.multidimensionalInfo||(e.source=null),e.datasetName=o})()}fetchRawTile(n,e,i,t={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[s,o]=a.storageInfo.tileInfo.size,{sliceId:l}=t,{pixelBlocks:c}=this.source,f={pixelBlock:null==l?c[0]:c[l],useBilinear:"thematic"!==a.dataType,tileSize:{width:s,height:o},level:n,row:e,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(f,t):(0,ie.Uu)(f);return Promise.resolve(u)}const r=this._pixelBlockTiles.get(`${n}/${e}/${i}`);return Promise.resolve(r)}_buildInMemoryRaster(n,e,i){var t=this;return(0,M.Z)(function*(){const{rasterInfo:r}=t,a=r.storageInfo.maximumPyramidLevel??0,s="thematic"!==r.dataType,o=t.rasterJobHandler?t.rasterJobHandler.split({pixelBlock:n,tileSize:e,maximumPyramidLevel:a,useBilinear:s},i):Promise.resolve((0,ie.Vl)(n,e,a,s)),l=null!=r.statistics,c=null!=r.histograms,f=t.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):t.rasterJobHandler?t.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:n},i):Promise.resolve((0,me.Hv)(n)),u=yield(0,ve.as)([o,f]);if(!u[0].value&&u[1].value)throw new k.Z("inmemory-raster:open","failed to build in memory raster");t._pixelBlockTiles=u[0].value,l||(r.statistics=u[1].value?.statistics),c||(r.histograms=u[1].value?.histograms)})()}_buildMDimStats(n,e,i){var t=this;return(0,M.Z)(function*(){for(let r=0;r<e.variables.length;r++){const a=e.variables[r];if(a.statistics)continue;const s=a.dimensions.map(f=>new Le.Z({variableName:a.name,dimensionName:f.name,values:[f.values?.[0]??f.extent?.[0]],isSlice:!0})),o=(0,X.gk)(s,e),l=null==o?null:n[o];if(null==l)continue;const c=t.rasterJobHandler?yield t.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},i):(0,me.js)(l);a.statistics=c.statistics,a.histograms||(a.histograms=c.histograms)}})()}};(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),(0,b._)([(0,w.Cb)()],be.prototype,"source",void 0),(0,b._)([(0,w.Cb)()],be.prototype,"url",null),be=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],be);const $e=be;let Fe=class extends le{constructor(){super(...arguments),this.datasetFormat="CovJSON"}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const{extent:i,pixelBlocks:t,multidimensionalInfo:r,attributeTable:a,bandNames:s}=yield e._fetchData(n),{statistics:o,histograms:l}=(0,me.js)(t[0]),c=s?.map(m=>({BandName:m})),f={DataType:a?"Thematic":r?"Scientific":"Generic",BandProperties:c},u=new $e({source:{extent:i,pixelBlocks:t,attributeTable:a?Ze.Z.fromJSON(a):null,multidimensionalInfo:r,statistics:o,histograms:l,keyProperties:f,isPseudoSpatialReference:!1}});yield u.open(),e._inMemoryRaster=u;const d=e.source?"":e.url.slice(e.url.lastIndexOf("/")+1);e._set("datasetName",d.slice(0,d.indexOf("."))),e._set("rasterInfo",u.rasterInfo)})()}fetchRawTile(n,e,i,t={}){return this._inMemoryRaster.fetchRawTile(n,e,i,t)}_fetchData(n){var e=this;return(0,M.Z)(function*(){const i=e.source??(yield e.request(e.url,{signal:n?.signal})).data,t="imagery-tile-layer:open-coverage-json";if("coverage"!==i.type?.toLowerCase()||"grid"!==i.domain?.domainType?.toLowerCase())throw new k.Z(t,"Only coverage with Grid domain type is supported");if(!i.ranges)throw new k.Z(t,"Missing ranges in the grid coverage data");if(!i.domain.referencing?.length)throw new k.Z(t,"Missing domain referencing in the grid coverage data");const r=Object.values(i.ranges);for(let a=0;a<r.length;a++){const{axisNames:s,shape:o,type:l,values:c}=r[a];if(!("ndarray"===l.toLowerCase()&&c?.length&&s?.length&&o?.length))throw new k.Z(t,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!yt(s[s.length-1])||!gt(s[s.length-2]))throw new k.Z(t,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function dn(n){const{width:e,height:i,extent:t,dimensions:r}=function ln(n){const{axes:e}=n.domain,i=Object.keys(e),t=[],r=[];let a=-1,s=-1,o=[];for(let x=0;x<i.length;x++){const v=i[x];yt(v)?a=x:gt(v)&&(s=x);const R=e[v],S=[];if("values"in R){R.values.forEach(C=>S.push("string"==typeof C?new Date(C).getTime():C));const F=S[1]-S[0];t.push([S[0]-.5*F,S[S.length-1]+.5*F]),r.push(F)}else{const{start:F,stop:C,num:T}=R,O=(C-F)/(T-1);t.push([F-.5*O,C+.5*O]),r.push(O);for(let P=0;P<T;P++)S.push(F+O*P)}o.push({name:v,values:S,extent:[S[0],S[S.length-1]]})}a>-1&&-1===s?s=0===a?1:0:s>-1&&-1===a?a=0===s?1:0:-1===s&&-1===a&&(a=0,s=1),o=o.filter((x,v)=>!(v===a||v===s));const{referencing:l}=n.domain,c=l.find(x=>x.coordinates.includes(i[a])).system.id,f=c?.slice(c.lastIndexOf("/")+1),u=null==f||"CRS84"===f?4326:Number(f),d=new j.Z({wkid:u}),[m,h]=t[a],[g,y]=t[s],p=new U.Z({xmin:m,xmax:h,ymin:g,ymax:y,spatialReference:d});return{width:Math.round(p.width/r[a]),height:Math.round(p.height/r[s]),extent:p,dimensions:o}}(n),{ranges:a}=n,s=Object.keys(a).sort((d,m)=>d<m?-1:1),o=[];for(let d=0;d<s.length;d++)r?.length&&o.push({name:s[d],dimensions:r});const l=function cn(n){const e={},{parameters:i}=n;if(!i)return e;for(const[t,r]of Object.entries(i)){const{type:a,description:s,unit:o,categoryEncoding:l,observedProperty:c}=r;if("Parameter"===a&&(e[t]={},s&&(e[t].description=Ve(s)),o&&(e[t].unit=o.label?Ve(o.label):null,e[t].symbol=o.symbol?.value),l)){const f=Object.entries(l).map((m,h)=>({OID:h,Value:Number(m[1]),ClassName:m[0].slice(m[0].lastIndexOf("/")+1),Count:1}));let u=!1;c?.categories?.length&&(c.categories.forEach(m=>{if(!m.id)return;const h=m.id.slice(m.id.lastIndexOf("/")+1),g=f.find(p=>p.ClassName===h);if(!g)return;const y=m.label?Ve(m.label):null;if(g.Label=y,m.preferredColor){const p=an.Z.fromHex(m.preferredColor);p&&(u=!0,g.Red=p.r,g.Green=p.g,g.Blue=p.b)}}),u&&f.forEach(m=>{null==m.Red&&(m.Red=_e(),m.Green=_e(),m.Blue=_e())}));const d={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:f.map(m=>({attributes:m}))};u&&d.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[t].attributeTable=d}}return e}(n);o.forEach(d=>l[d.name]&&Object.assign(d,l[d.name]));const c=o.length?{variables:o}:void 0,f=[];for(let d=0;d<s.length;d++){const m=s[d],{values:h,dataType:g,axisNames:y,shape:p}=a[m],x=p.length>2?d*p.slice(0,-2).reduce((T,O)=>T*O):0,v=y.slice(0,-2),R=p.slice(0,-2),S="float"===g?"f32":un(h),F=e*i,C=h.length/F;for(let T=0;T<C;T++){const O=K.Z.createEmptyBand(S,F),P=new Uint8Array(F).fill(255);let N=!1;const Z=T*F;for(let D=0;D<F;D++){const z=h[Z+D];null==z?(P[D]=0,N=!0):O[D]=z}if(0===d||r?.length){const D=new K.Z({width:e,height:i,mask:N?P:null,pixels:[O],pixelType:S});D.updateStatistics(),r?.length?f[fn(v,R,T)+x]=D:f.push(D)}else{const D=f[T];D.pixels.push(O),N?D.mask&&(D.mask=K.Z.combineBandMasks([D.mask,P])):D.mask=N?P:null}}}const u=Object.values(l).find(d=>d.attributeTable)?.attributeTable;return{extent:t,pixelBlocks:f,multidimensionalInfo:c,attributeTable:u,bandNames:c?void 0:s}}(i)})()}};(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),(0,b._)([(0,w.Cb)({constructOnly:!0})],Fe.prototype,"source",void 0),Fe=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.CovJSONRaster")],Fe);const mn=Fe;var Xe=I(85931);function Re(n,e){if(!n||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const a=Re(n,i);for(let s=0;s<a.length;s++)Re(a[s],e).forEach(o=>t.push(o));return t}const r=n.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let a=0;a<r.length;a++)t.push(r[a]||r.item(a));return t}function Y(n,e){if(!n||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=Re(n,i);return t.length>0?e?Y(t[0],e):t[0]:null}function q(n,e=null){const i=e?Y(n,e):n;let t;return i?(t=i.textContent||i.nodeValue,t?t.trim():null):null}function Ne(n,e){return function pn(n,e){const i=Re(n,e),t=[];let r;for(let a=0;a<i.length;a++)r=i[a].textContent||i[a].nodeValue,r&&(r=r.trim(),""!==r&&t.push(r));return t}(n,e).map(i=>Number(i))}function he(n,e){const i=q(n,e);return Number(i)}function Ye(n,e){const i=n?.nodeName?.toLowerCase(),t=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===t}var Qe=I(85374);function xt(n,e){if(!n||!e)return null;const i=[];for(let t=0;t<n.length;t++)i.push(n[t]),i.push(e[t]);return i}function De(n){if(!n)return null;let e=Number(n);if(!isNaN(e)&&0!==e)return new j.Z({wkid:e});if(n=String(n).trim(),(0,it.xl)(n))return new j.Z({wkt2:n});const i=n.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const t=i.indexOf("VERTCS"),r=i.indexOf("PROJCS"),a=r>-1?r:i.indexOf("GEOGCS");if(-1===a)return null;const s=n.slice(a,n.lastIndexOf("]",t)+1).trim(),o=n.slice(t,n.lastIndexOf("]")).trim();e=Ke(s);const l=new j.Z(e?{wkid:e}:{wkt:s}),c=Ke(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Ke(n),new j.Z(0!==e?{wkid:e}:{wkt:n})):null}function Ke(n){const e=n.replaceAll("]","[").replaceAll('"',"").split("[").map(r=>r.trim()).filter(r=>""!==r),i=e[e.length-1].split(","),t=i[0]?.toLowerCase();if(("epsg"===t||"esri"===t)&&n.endsWith('"]]')){const r=Number(i[1]);if(!isNaN(r)&&0!==r)return r}return 0}function qe(n){if("pamdataset"!==n?.documentElement.tagName?.toLowerCase())return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};n.documentElement.childNodes.forEach(t=>{if(1===t.nodeType)if(Ye(t,"SRS")){if(!e.spatialReference){const r=q(t);e.spatialReference=De(r)}}else if(Ye(t,"Metadata"))if("xml:ESRI"===t.getAttribute("domain")){const{spatialReference:r,transform:a}=function hn(n){const e=Y(n,"GeodataXform"),i=De(he(e,"SpatialReference/WKID")||q(e,"SpatialReference/WKT"));if("typens:PolynomialXform"!==e.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const t=he(e,"PolynomialOrder")??1,r=Ne(e,"CoeffX/Double"),a=Ne(e,"CoeffY/Double"),s=Ne(e,"InverseCoeffX/Double"),o=Ne(e,"InverseCoeffY/Double"),l=xt(r,a),c=xt(s,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Qe.Z({spatialReference:i,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}(t);e.transform=a,e.spatialReference||(e.spatialReference=r)}else Re(t,"MDI").forEach(r=>e.metadata[r.getAttribute("key")]=q(r));else if(Ye(t,"PAMRasterBand")){const r=function yn(n){const e=he(n,"NoDataValue"),i=Y(n,"Histograms/HistItem"),t=he(i,"HistMin"),r=he(i,"HistMax"),a=he(i,"BucketCount"),s=q(i,"HistCounts")?.split("|").map(d=>Number(d));let o,l,c,f;Re(n,"Metadata/MDI").forEach(d=>{const m=Number(d.textContent??d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=m;break;case"STATISTICS_MAXIMUM":l=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":f=m}});const u=he(n,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:s?.length&&null!=t&&null!=r?{min:t,max:r,size:a||s.length,counts:s}:null,sourceBandIndex:u,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:f}:null}}(t);null!=r.sourceBandIndex&&null==e.rasterBands[r.sourceBandIndex]?e.rasterBands[r.sourceBandIndex]=r:e.rasterBands.push(r)}});const i=e.rasterBands;return i.length&&(e.statistics=i[0].statistics?i.map(a=>a.statistics).filter(Xe.pC):null,e.histograms=i[0].histogram?i.map(a=>a.histogram).filter(Xe.pC):null),e}let ke=class extends le{open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const i=yield e._fetchData(n);let{spatialReference:t,statistics:r,histograms:a,transform:s}=yield e._fetchAuxiliaryData(n);const o=!t;o&&(t=new j.Z({wkid:3857})),a?.length&&null==r&&(r=(0,me.Oh)(a));const{width:l,height:c}=i;let f=new U.Z({xmin:-.5,ymin:.5-c,xmax:l-.5,ymax:.5,spatialReference:t});const u=s?s.forwardTransform(f):f;let d=!0;if(s){const h=s.forwardCoefficients;d=h&&0===h[1]&&0===h[2],d&&(s=null,f=u)}const m=new $e({source:{extent:u,nativeExtent:f,transform:s,pixelBlocks:[i],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o},ioConfig:{sampling:"closest",skipStatistics:!0}});e.ioConfig.skipMapInfo&&(m.ioConfig.skipMapInfo=!0),yield m.open(),m.source=null,e._set("rasterInfo",m.rasterInfo),e._inMemoryRaster=m})()}fetchRawTile(n,e,i,t={}){return this._inMemoryRaster.fetchRawTile(n,e,i,t)}_fetchData(n){var e=this;return(0,M.Z)(function*(){const{data:i}=yield e.request(e.url,{responseType:"array-buffer",signal:n?.signal}),t=(0,lt.y)(i).toUpperCase();if("JPG"!==t&&"PNG"!==t&&"GIF"!==t&&"BMP"!==t)throw new k.Z("image-aux-raster:open","the data is not a supported format");e._set("datasetFormat",t);const r=t.toLowerCase(),a="gif"===r||"bmp"===r||!(0,Tt.Z)("ios"),s=yield e.decodePixelBlock(i,{format:r,useCanvas:a,hasNoZlibMask:!0});if(null==s)throw new k.Z("image-aux-raster:open","the data cannot be decoded");return s})()}_fetchAuxiliaryData(n){var e=this;return(0,M.Z)(function*(){const i=n?.signal,{skipExtensions:t=[],skipMapInfo:r}=e.ioConfig,a=r||t.includes("aux.xml")?null:e.request(e.url+".aux.xml",{responseType:"xml",signal:i}),s=e.datasetFormat,o="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,l=o&&t.includes(o)?null:e.request(e.url.slice(0,e.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),c=yield(0,ve.as)([a,l]);if(i?.aborted)throw(0,ve.zE)();const f=qe(c[0].value?.data);if(!f.transform){const u=c[1].value?c[1].value.data.split("\n").slice(0,6).map(d=>Number(d)):null;f.transform=6===u?.length?new Qe.Z({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return f})()}};(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),ke=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ke);const Be=ke;var gn=I(62208),xn=I(21726),vn=I(14946),In=I(76671),vt=I(99208);let Me=class extends le{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const i=n?.signal,t=e.sourceJSON?{data:e.sourceJSON}:yield e.request(e.url,{query:{f:"json"},signal:i});t.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));const r=t.data;if(e.sourceJSON=r,!r)throw new k.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new k.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");e._fixScaleInServiceInfo(),e.tileType=r.cacheType,null==e.tileType&&(e.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(r.tileInfo.format.toLowerCase())?"Map":"lerc"===r.tileInfo.format.toLowerCase()?"Elevation":"Raster"),e.datasetName=r.name?.slice(r.name.indexOf("/")+1)??"";const s=yield e._fetchRasterInfo({signal:i});if(null==s)throw new k.Z("image-server-raster:open","cannot initialize image service");(0,vt.n$)(s,r);const o="Map"===e.tileType?function bn(n,e){if(!n)return null;const{minScale:i,maxScale:t,minLOD:r,maxLOD:a}=e;if(null!=r&&null!=a)return re.Z.fromJSON({...n,lods:n.lods.filter(({level:s})=>null!=s&&s>=r&&s<=a)});if(0!==i&&0!==t){const s=c=>Math.round(1e4*c)/1e4,o=i?s(i):1/0,l=t?s(t):-1/0;return re.Z.fromJSON({...n,lods:n.lods.filter(c=>{const f=s(c.scale);return f<=o&&f>=l})})}return re.Z.fromJSON(n)}(r.tileInfo,r):re.Z.fromJSON(r.tileInfo);(0,gn.O3)(o);const[l,c]=e._computeMinMaxLOD(s,o),{extent:f,pixelSize:u}=s,d=.5/s.width*u.x,m=Math.max(u.x,u.y),{lods:h}=o;("Map"!==e.tileType&&0!==r.maxScale||Math.abs(u.x-u.y)>d||!h.some(T=>Math.abs(T.resolution-m)<d))&&(u.x=u.y=l.resolution,s.width=Math.ceil((f.xmax-f.xmin)/u.x-.1),s.height=Math.ceil((f.ymax-f.ymin)/u.y-.1));const g=l.level-c.level,[y,p]=o.size,x=[],v=[];h.forEach((T,O)=>{T.level>=c.level&&T.level<=l.level&&x.push({x:T.resolution,y:T.resolution}),O<h.length-1&&v.push(Math.round(10*T.resolution/h[O+1].resolution)/10)}),x.sort((T,O)=>T.x-O.x);const R=e.computeBlockBoundary(f,y,p,o.origin,x,g),S=x.length>1?x.slice(1):null;let F;r.transposeInfo&&(F={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:s.keyProperties?._yxs.PacketSize??0});const C=v.length<=1||v.length>=3&&v.slice(0,-1).every(T=>T===v[0])?v[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/g))/10;if(s.storageInfo=new we.Z({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:S,pyramidScalingFactor:C,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:F,blockBoundary:R}),e._fixGCSShift(s),e._set("rasterInfo",s),r.capabilities.toLowerCase().includes("tilemap")){const T={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,xn.mN)(e.url),url:e.url,tileServers:[]};e._tilemapCache=new vn.y({layer:T})}})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){const{storageInfo:a,extent:s}=r.rasterInfo,{transposeInfo:o}=a,l=null!=o&&!!t.transposedVariableName;if(r._slices&&!l&&null==t.sliceId)return null;const f=`${r.url}/tile/${l?0:a.maximumPyramidLevel-n+r._levelOffset}/${e}/${i}`,u=r._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:d}=yield r.request(f,{query:u,responseType:"array-buffer",signal:t.signal});if(!d)return null;const m=l?o.tileSize:a.tileInfo.size,h=yield r.decodePixelBlock(d,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:"Elevation"===r.tileType,returnInterleaved:l,noDataValue:r.rasterInfo.noDataValue});if(null==h)return null;const g=a.blockBoundary[n];if("jpg"!==a.compression||i>g.minCol&&i<g.maxCol&&e>g.minRow&&e<g.maxRow)return h;const{origin:y,blockWidth:p,blockHeight:x}=a,{x:v,y:R}=r.getPyramidPixelSize(n),S=Math.round((s.xmin-y.x)/v)%p,F=Math.round((s.xmax-y.x)/v)%p||p,C=Math.round((y.y-s.ymax)/R)%x,T=Math.round((y.y-s.ymin)/R)%x||x,O=i===g.minCol?S:0,P=e===g.minRow?C:0;return(0,ie.pW)(h,{x:O,y:P},{width:(i===g.maxCol?F:p)-O,height:(e===g.maxRow?T:x)-P}),h})()}getSliceIndex(n){if(!this._slices||null==n||0===n.length)return null;const e=n;for(let i=0;i<this._slices.length;i++){const t=this._slices[i].multidimensionalDefinition;if(t.length===e.length&&!t.some(r=>{const a=e.find(s=>r.variableName===s.variableName&&s.dimensionName===r.dimensionName);return!a||(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])}))return i}return null}fetchVariableStatisticsHistograms(n,e){var i=this;return(0,M.Z)(function*(){const t=i.request(i.url+"/statistics",{query:{variable:n,f:"json"},signal:e}).then(s=>s.data?.statistics),r=i.request(i.url+"/histograms",{query:{variable:n,f:"json"},signal:e}).then(s=>s.data?.histograms),a=yield Promise.all([t,r]);return a[0]&&a[0].forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),a[1]?.[0]?.counts?.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}})()}computeBestPyramidLevelForLocation(n,e={}){var i=this;return(0,M.Z)(function*(){if(!i._tilemapCache)return 0;let t=i.identifyPixelLocation(n,0,e.datumTransformation);if(null===t)return null;let r=0;const{maximumPyramidLevel:a}=i.rasterInfo.storageInfo;let s=a-r+i._levelOffset;const o=t.srcLocation;for(;s>=0;){try{if("available"===(yield i._tilemapCache.fetchAvailability(s,t.row,t.col,e)))break}catch{}if(s--,r++,t=i.identifyPixelLocation(o,r,e.datumTransformation),null===t)return null}return-1===s||null==t?null:r})()}_fetchRasterInfo(n){var e=this;return(0,M.Z)(function*(){const i=e.sourceJSON;if("Map"===e.tileType){const o=i.fullExtent||i.extent,l=Math.ceil((o.xmax-o.xmin)/i.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/i.pixelSizeY-.1),f=j.Z.fromJSON(i.spatialReference||o.spatialReference),u=new W.Z({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:f});return new Te.Z({width:l,height:c,bandCount:3,extent:U.Z.fromJSON(o),spatialReference:f,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=n,r=(0,vt.gh)(e.url,e.sourceJSON,{signal:t,query:e.ioConfig.customFetchParameters}),a=i.hasMultidimensions?e.request(`${e.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data?.slices).catch(()=>null):null,s=yield Promise.all([r,a]);return e._slices=s[1],s[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:n}=this;n.minScale&&n.minScale<0&&(n.minScale=0),n.maxScale&&n.maxScale<0&&(n.maxScale=0)}_fixGCSShift(n){const{extent:e,spatialReference:i}=n;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(n.nativeExtent=n.extent,n.transform=new In.Z,n.extent=n.transform.forwardTransform(e))}_computeMinMaxLOD(n,e){const{pixelSize:i}=n,t=.5/n.width*i.x,{lods:r}=e,a=e.lodAt(Math.max.apply(null,r.map(d=>d.level))),s=e.lodAt(Math.min.apply(null,r.map(d=>d.level))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,s];if("Raster"===o)return[r.find(d=>d.resolution===i.x)??a,s];const{minScale:l,maxScale:c}=this.sourceJSON;let f=a;c>0&&(f=r.find(d=>Math.abs(d.scale-c)<t),f||(f=r.filter(d=>d.scale>c).sort((d,m)=>d.scale>m.scale?1:-1)[0]??a));let u=s;return l>0&&(u=r.find(d=>Math.abs(d.scale-l)<t)??s,this._levelOffset=u.level-s.level),[f,u]}};(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],Me.prototype,"datasetFormat",void 0),(0,b._)([(0,w.Cb)()],Me.prototype,"tileType",void 0),Me=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Me);const Rn=Me;var Sn=I(44853);const te=new Map;te.set("Int8","s8"),te.set("UInt8","u8"),te.set("Int16","s16"),te.set("UInt16","u16"),te.set("Int32","s32"),te.set("UInt32","u32"),te.set("Float32","f32"),te.set("Float64","f32"),te.set("Double64","f32");const ue=new Map;ue.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ue.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ue.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ue.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Se=class extends le{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(n){var e=this;return(0,M.Z)(function*(){yield e.init(),e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const i=n?n.signal:null,t=yield e.request(e.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:a}=e._parseHeader(t.data),{skipMapInfo:s,skipExtensions:o=[]}=e.ioConfig;if(!o.includes("aux.xml")&&!s){const x=yield e._fetchAuxiliaryData(n);null!=x&&(r.statistics=x.statistics??r.statistics,r.histograms=x.histograms,x.histograms&&null==r.statistics&&(r.statistics=(0,me.Oh)(x.histograms)))}s&&e.updateImageSpaceRasterInfo(r),e._set("rasterInfo",r),e._files=a;const l=yield e.request(a.index,{responseType:"array-buffer",signal:i});e._storageIndex=e._parseIndex(l.data);const{blockWidth:c,blockHeight:f}=e.rasterInfo.storageInfo,u=e.rasterInfo.storageInfo.pyramidScalingFactor,{width:d,height:m}=e.rasterInfo,h=[],g=e._getBandSegmentCount();let y=0,p=-1;for(;y<e._storageIndex.length;){p++;const x=Math.ceil(d/c/u**p)-1,v=Math.ceil(m/f/u**p)-1;y+=(x+1)*(v+1)*g*4,h.push({maxRow:v,maxCol:x,minCol:0,minRow:0})}e.rasterInfo.storageInfo.blockBoundary=h,p>0&&(e.rasterInfo.storageInfo.firstPyramidLevel=1,e.rasterInfo.storageInfo.maximumPyramidLevel=p),e.updateTileInfo()})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){const{blockWidth:a,blockHeight:s,blockBoundary:o}=r.rasterInfo.storageInfo,l=o[n];if(!l||l.maxRow<e||l.maxCol<i||l.minRow>e||l.minCol>i)return null;const{bandCount:c,pixelType:f}=r.rasterInfo,{ranges:u,actualTileWidth:d,actualTileHeight:m}=r._getTileLocation(n,e,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const Z=new Uint8Array(a*s);return new K.Z({width:a,height:s,pixels:null,mask:Z,validPixelCount:0})}const{bandIds:h}=r.ioConfig,g=r._getBandSegmentCount(),y=[];let p=0;for(p=0;p<g;p++)h&&!h.includes(p)||y.push(r.request(r._files.data,{range:{from:u[p].from,to:u[p].to},responseType:"array-buffer",signal:t.signal}));const x=yield Promise.all(y),v=x.map(Z=>Z.data.byteLength).reduce((Z,D)=>Z+D),R=new Uint8Array(v),S=[];let F=0;for(p=0;p<g;p++)S.push(F),R.set(new Uint8Array(x[p].data),F),F+=x[p].data.byteLength;const C=ue.get(r.rasterInfo.storageInfo.compression).decoderFormat,T=yield r.decodePixelBlock(R.buffer,{width:a,height:s,format:C,planes:h?.length||c,offsets:S,pixelType:f});if(null==T)return null;let{noDataValue:O}=r.rasterInfo;if(null!=O&&"lerc"!==C&&!T.mask&&(O=O[0],null!=O)){const Z=T.width*T.height,D=new Uint8Array(Z);if(Math.abs(O)>1e24)for(p=0;p<Z;p++)Math.abs((T.pixels[0][p]-O)/O)>1e-6&&(D[p]=1);else for(p=0;p<Z;p++)T.pixels[0][p]!==O&&(D[p]=1);T.mask=D}let P=0,N=0;if(d!==a||m!==s){let Z=T.mask;if(Z)for(p=0;p<s;p++)if(N=p*a,p<m)for(P=d;P<a;P++)Z[N+P]=0;else for(P=0;P<a;P++)Z[N+P]=0;else for(Z=new Uint8Array(a*s),T.mask=Z,p=0;p<m;p++)for(N=p*a,P=0;P<d;P++)Z[N+P]=1}return T})()}_parseIndex(n){if(n.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,t,r,a,s;if(Sn.f){for(i=new Uint8Array(n),r=new ArrayBuffer(n.byteLength),t=new Uint8Array(r),a=0;a<n.byteLength/4;a++)for(s=0;s<4;s++)t[4*a+s]=i[4*a+3-s];e=new Uint32Array(r)}else e=new Uint32Array(n);return e}_getBandSegmentCount(){return ue.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(n,e,i){const{blockWidth:t,blockHeight:r,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:s,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,f,u,d=0,m=0;for(u=0;u<n;u++)m=a**u,c=Math.ceil(s/t/m),f=Math.ceil(o/r/m),d+=c*f;m=a**n,c=Math.ceil(s/t/m),f=Math.ceil(o/r/m),d+=e*c+i,d*=4*l;const h=this._storageIndex.subarray(d,d+4*l);let g=0,y=0;const p=[];for(let x=0;x<l;x++)g=h[4*x]*2**32+h[4*x+1],y=g+h[4*x+2]*2**32+h[4*x+3],p.push({from:g,to:y});return{ranges:p,actualTileWidth:i<c-1?t:Math.ceil(s/m)-t*(c-1),actualTileHeight:e<f-1?r:Math.ceil(o/m)-r*(f-1)}}_parseHeader(n){const e=Y(n,"MRF_META/Raster");if(!e)throw new k.Z("mrf:open","not a valid MRF format");const i=Y(e,"Size"),t=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(q(e,"Compression")||"none").toLowerCase();if(!ue.has(s))throw new k.Z("mrf:open","currently does not support compression "+s);const o=q(e,"DataType")||"UInt8",l=te.get(o);if(null==l)throw new k.Z("mrf:open","currently does not support pixel type "+o);const c=Y(e,"PageSize"),f=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),d=Y(e,"DataValues");let m,h;if(d&&(h=d.getAttribute("NoData"),null!=h&&(m=h.trim().split(" ").map(N=>parseFloat(N)))),Y(n,"MRF_META/CachedSource"))throw new k.Z("mrf:open","currently does not support MRF referencing other data files");const g=Y(n,"MRF_META/GeoTags"),y=Y(g,"BoundingBox");let p,x=!1;if(null!=y){const N=parseFloat(y.getAttribute("minx")),Z=parseFloat(y.getAttribute("miny")),D=parseFloat(y.getAttribute("maxx")),z=parseFloat(y.getAttribute("maxy")),J=q(g,"Projection")||"";let E=j.Z.WGS84;if("LOCAL_CS[]"!==J)if(J.toLowerCase().startsWith("epsg:")){const A=Number(J.slice(5));isNaN(A)||0===A||(E=new j.Z({wkid:A}))}else E=De(J)??j.Z.WGS84;else x=!0,E=new j.Z({wkid:3857});p=new U.Z(N,Z,D,z),p.spatialReference=E}else x=!0,p=new U.Z({xmin:-.5,ymin:.5-r,xmax:t-.5,ymax:.5,spatialReference:new j.Z({wkid:3857})});const v=Y(n,"MRF_META/Rsets"),R=parseInt(v?.getAttribute("scale")||"2",10),S=p.spatialReference,F=new we.Z({origin:new W.Z({x:p.xmin,y:p.ymax,spatialReference:S}),blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,compression:s,pyramidScalingFactor:R}),C=new W.Z({x:p.width/t,y:p.height/r,spatialReference:S}),T=new Te.Z({width:t,height:r,extent:p,isPseudoSpatialReference:x,spatialReference:S,bandCount:a,pixelType:l,pixelSize:C,noDataValue:m,storageInfo:F}),O=q(n,"datafile"),P=q(n,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:P||this.url.replace(".mrf",".idx"),data:O||this.url.replace(".mrf",ue.get(s).blobExtension)}}}_fetchAuxiliaryData(n){var e=this;return(0,M.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:n?.signal});return qe(i)}catch{return null}})()}};(0,b._)([(0,w.Cb)()],Se.prototype,"_files",void 0),(0,b._)([(0,w.Cb)()],Se.prototype,"_storageIndex",void 0),(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=(0,b._)([(0,Q.j)("esri.layers.support.rasterIO.MRFRaster")],Se);const wn=Se;var ye=I(93122),Je=I(635);const et=(n,e)=>n.get(e)?.values,Pe=(n,e)=>n.get(e)?.values?.[0];let ge=class extends le{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(n){var e=this;return(0,M.Z)(function*(){yield e.init();const i=n?n.signal:null,{data:t}=yield e.request(e.url,{range:{from:0,to:e._bufferSize},responseType:"array-buffer",signal:i});if(!t)throw new k.Z("tiffraster:open","failed to open url "+e.url);e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1,e.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:a,isBigTiff:s}=(0,ye.cK)(t),o=[];yield e._readIFDs(o,t,r,a,0,s?8:4,i);const{imageInfo:l,rasterInfo:c}=e._parseIFDs(o),f=(0,ye.ee)(o),u=(0,ye.I7)(o);if(e._headerInfo={littleEndian:r,isBigTiff:s,ifds:o,pyramidIFDs:f,maskIFDs:u,...l},e._set("rasterInfo",c),!l.isSupported)throw new k.Z("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new k.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");c.isPseudoSpatialReference&&fe.Z.getLogger(e).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const d=o[0].get("PREDICTOR")?.values?.[0];if(3===o[0].get("SAMPLEFORMAT")?.values?.[0]&&2===d)throw new k.Z("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:h,skipExtensions:g=[]}=e.ioConfig;if(!g.includes("aux.xml")&&!h){const y=yield e._fetchAuxiliaryMetaData(n);null!=y&&e._processPAMInfo(y,c)}g.includes("vat.dbf")||1!==c.bandCount||"u8"!==c.pixelType||h||(c.attributeTable=yield e._fetchAuxiliaryTable(n),null!=c.attributeTable&&(c.keyProperties.DataType="thematic")),h&&e.updateImageSpaceRasterInfo(c),e.updateTileInfo()})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.Z)(function*(){if(!r._headerInfo?.isSupported||r.isBlockOutside(n,e,i))return null;const a=yield r._fetchRawTiffTile(n,e,i,!1,t);if(null!=a&&r._headerInfo.hasMaskBand){const s=yield r._fetchRawTiffTile(n,e,i,!0,t);null!=s&&s.pixels[0]instanceof Uint8Array&&(a.mask=s.pixels[0])}return a})()}_parseIFDs(n){const e=(0,ye.FI)(n),{width:i,height:t,tileWidth:r,tileHeight:a,planes:s,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:f,pyramidBlockWidth:u,pyramidBlockHeight:d,tileBoundary:m,affine:h,metadata:g}=e;let p=De(e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid),x=!!e.isPseudoGeographic;null==p&&(x=!0,p=new j.Z({wkid:3857}));const v=new U.Z({...e.extent,spatialReference:p}),R=new W.Z(v?{x:v.xmin,y:v.ymax,spatialReference:p}:{x:0,y:0}),S=new we.Z({blockWidth:r,blockHeight:a,pyramidBlockWidth:u,pyramidBlockHeight:d,compression:l,origin:R,firstPyramidLevel:c,maximumPyramidLevel:f,blockBoundary:m}),F=new W.Z({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/t,spatialReference:p}),C=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let T=null;const O=Pe(n[0],"PHOTOMETRICINTERPRETATION"),P=et(n[0],"COLORMAP");if(O<=3&&P?.length>3&&P.length%3==0){T=[];const Z=P.length/3;for(let D=0;D<Z;D++)T.push([D,P[D]>>>8,P[D+Z]>>>8,P[D+2*Z]>>>8])}const N=new Te.Z({width:i,height:t,bandCount:s,pixelType:o,pixelSize:F,storageInfo:S,spatialReference:p,isPseudoSpatialReference:x,keyProperties:C,extent:v,colormap:T,statistics:g?g.statistics:null});return h?.length&&(N.nativeExtent=new U.Z({xmin:-.5,ymin:.5-t,xmax:i-.5,ymax:.5,spatialReference:p}),N.transform=new Qe.Z({polynomialOrder:1,forwardCoefficients:[h[2]+h[0]/2,h[5]-h[3]/2,h[0],h[3],-h[1],-h[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new W.Z({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/t,spatialReference:p}),S.origin.x=-.5,S.origin.y=.5),{imageInfo:e,rasterInfo:N}}_processPAMInfo(n,e){if(e.statistics=n.statistics??e.statistics,e.histograms=n.histograms,n.histograms&&null==e.statistics&&(e.statistics=(0,me.Oh)(n.histograms)),n.transform&&null==e.transform){e.transform=n.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W.Z({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&n.spatialReference&&(e.spatialReference=n.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}_readIFDs(n,e,i,t,r,a=4,s){var o=this;return(0,M.Z)(function*(){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(yield o.request(o.url,{range:{from:t+r,to:t+r+o._bufferSize},responseType:"array-buffer",signal:s})).data,r=t+r,t=0);const l=yield o._readIFD(e,i,t,r,Je.Z.tiffTags,a,s);if(n.push(l.ifd),!l.nextIFD)return null;yield o._readIFDs(n,e,i,l.nextIFD-r,r,a,s)})()}_readIFD(n,e,i,t,r=Je.Z.tiffTags,a=4,s){var o=this;return(0,M.Z)(function*(){if(!n)return null;const l=(0,ye.vr)(n,e,i,t,r,a);if(l.success){const c=[];if(l.ifd?.forEach(f=>{f.values||c.push(f)}),c.length>0){const f=c.map(d=>d.offlineOffsetSize).filter(Xe.pC),u=Math.min.apply(null,f.map(d=>d[0]));if(Math.min.apply(null,f.map(d=>d[0]+d[1]))-u<=o._bufferSize){const{data:d}=yield o.request(o.url,{range:{from:u,to:u+o._bufferSize},responseType:"array-buffer",signal:s});n=d,t=u,c.forEach(m=>(0,ye.Dq)(n,e,m,t))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const f=l.ifd.get("GEOKEYDIRECTORY"),u=f?.values;if(u&&u.length>4){const d=u[0]+"."+u[1]+"."+u[2],m=yield o._readIFD(n,e,f.valueOffset+6-t,t,Je.Z.geoKeys,2,s);f.data=m.ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return l}return l.requiredBufferSize&&l.requiredBufferSize!==n.byteLength?(n=(yield o.request(o.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<l.requiredBufferSize?null:o._readIFD(n,e,0,t,Je.Z.tiffTags,4,s):void 0})()}_fetchRawTiffTile(n,e,i,t,r={}){var a=this;return(0,M.Z)(function*(){const s=a._getTileLocation(n,e,i,t);if(!s)return null;const{ranges:o,actualTileWidth:l,actualTileHeight:c,ifd:f}=s,u=o.map(C=>a.request(a.url,{range:C,responseType:"array-buffer",signal:r.signal})),d=yield Promise.all(u),m=d.map(C=>C.data.byteLength).reduce((C,T)=>C+T),h=1===d.length?d[0].data:new ArrayBuffer(m),g=[0],y=[0];if(d.length>1){const C=new Uint8Array(h);for(let T=0,O=0;T<d.length;T++){const P=d[T].data;C.set(new Uint8Array(P),O),g[T]=O,O+=P.byteLength,y[T]=P.byteLength}}const{blockWidth:p,blockHeight:x}=a.getBlockWidthHeight(n),v=yield a.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:a._headerInfo,ifd:f,offsets:g,sizes:y},width:p,height:x,planes:null,pixelType:null});if(null==v)return null;let R,S,F;if(l!==p||c!==x){let C=v.mask;if(C)for(R=0;R<x;R++)if(F=R*p,R<c)for(S=l;S<p;S++)C[F+S]=0;else for(S=0;S<p;S++)C[F+S]=0;else for(C=new Uint8Array(p*x),v.mask=C,R=0;R<c;R++)for(F=R*p,S=0;S<l;S++)C[F+S]=1}return v})()}_getTileLocation(n,e,i,t=!1){const{firstPyramidLevel:r,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===n?0:n-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[s]:0===s?o?.ifds[0]:o?.pyramidIFDs[s-1];if(!l)return null;const c=(0,ye.If)(l,o),f=et(l,"TILEOFFSETS");if(void 0===f)return null;const u=et(l,"TILEBYTECOUNTS"),{minRow:d,minCol:m,maxRow:h,maxCol:g}=a[s];if(e>h||i>g||e<d||i<m)return null;const y=Pe(l,"IMAGEWIDTH"),p=Pe(l,"IMAGELENGTH"),x=Pe(l,"TILEWIDTH"),v=Pe(l,"TILELENGTH"),R=[];if(c){const{bandCount:S}=this.rasterInfo;for(let F=0;F<S;F++){const C=F*(h+1)*(g+1)+e*(g+1)+i;R[F]={from:f[C],to:f[C]+u[C]-1}}}else{const S=e*(g+1)+i;R.push({from:f[S],to:f[S]+u[S]-1})}for(let S=0;S<R.length;S++)if(null==R[S].from||!R[S].to||R[S].to<0)return null;return{ranges:R,ifd:l,actualTileWidth:i===g&&y%x||x,actualTileHeight:e===h&&p%v||v}}_fetchAuxiliaryMetaData(n){var e=this;return(0,M.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:n?.signal});return qe(i)}catch{return null}})()}_fetchAuxiliaryTable(n){var e=this;return(0,M.Z)(function*(){try{const{data:i}=yield e.request(e.url+".vat.dbf",{responseType:"array-buffer",signal:n?.signal}),t=mt.parse(i);return t?.recordSet?Ze.Z.fromJSON(t.recordSet):null}catch{return null}})()}};(0,b._)([(0,w.Cb)()],ge.prototype,"_files",void 0),(0,b._)([(0,w.Cb)()],ge.prototype,"_headerInfo",void 0),(0,b._)([(0,w.Cb)()],ge.prototype,"_bufferSize",void 0),(0,b._)([(0,w.Cb)({type:String,json:{write:!0}})],ge.prototype,"datasetFormat",void 0),ge=(0,b._)([(0,Q.j)("esri.layers.support.rasterDatasets.TIFFRaster")],ge);const Tn=ge,V=new Map;V.set("CRF",{desc:"Cloud Raster Format",constructor:sn}),V.set("MRF",{desc:"Meta Raster Format",constructor:wn}),V.set("TIFF",{desc:"GeoTIFF",constructor:Tn}),V.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Rn}),V.set("JPG",{desc:"JPG Raster Format",constructor:Be}),V.set("PNG",{desc:"PNG Raster Format",constructor:Be}),V.set("GIF",{desc:"GIF Raster Format",constructor:Be}),V.set("BMP",{desc:"BMP Raster Format",constructor:Be}),V.set("CovJSON",{desc:"COVJSON Raster Format",constructor:mn}),V.set("MEMORY",{desc:"In Memory Raster Format",constructor:$e});class tt{static get supportedFormats(){const e=new Set;return V.forEach((i,t)=>e.add(t)),e}static open(e){var i=this;return(0,M.Z)(function*(){const{url:t,ioConfig:r,source:a,sourceJSON:s}=e;let o=e.datasetFormat??r?.datasetFormat;null==o&&(t.includes(".")?o=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===a?.type?.toLowerCase()?o="CovJSON":a?.extent&&a.pixelblocks&&(o="MEMORY")),"OVR"===o||"TIF"===o?o="TIFF":"JPG"===o||"JPEG"===o||"JFIF"===o?o="JPG":"COVJSON"===o&&(o="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(o="RasterTileServer");const l={url:t,source:a,sourceJSON:s,datasetFormat:o,ioConfig:r??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(d=>{null==l[d]&&delete l[d]}),o){if(!i.supportedFormats.has(o))throw new k.Z("rasterfactory:open","not a supported format "+o);if("CRF"===o&&!r?.enableCRF)throw new k.Z("rasterfactory:open",`cannot open raster: ${t}`);const d=new(V.get(o).constructor)(l);return yield d.open({signal:e.signal}),d}const c=Array.from(V.keys()).filter(d=>"CovJSON"!==d&&"Memory"!==d);let f=0;const u=()=>{if(o=c[f++],!o||"CRF"===o&&!r?.enableCRF)return null;const d=new(V.get(o).constructor)(l);return d.open({signal:e.signal}).then(()=>d).catch(()=>u())};return u()})()}static register(e,i,t){V.has(e.toUpperCase())||V.set(e.toUpperCase(),{desc:i,constructor:t})}}var Cn=I(49430),Ee=I(20885);let H=class extends((0,Pt.h)((0,en.M)((0,Qt.q)((0,Kt.I)((0,Ot.N)(Yt((0,tn.n)((0,Mt.Y)((0,qt.Q)((0,St.R)((0,Rt.J)(Ft.Z)))))))))))){constructor(...n){var e;super(...n),e=this,this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,ve.Ds)(function(){var i=(0,M.Z)(function*(t,r,a){const{save:s,saveAs:o}=yield Promise.all([I.e(8592),I.e(5398)]).then(I.bind(I,97452));switch(t){case Ee.x.SAVE:return s(e,r);case Ee.x.SAVE_AS:return o(e,a,r)}});return function(t,r,a){return i.apply(this,arguments)}}())}normalizeCtorArgs(n,e){return"string"==typeof n?{url:n,...e}:n}load(n){const e=null!=n?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(ve.r9).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const n=[new Ie.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new Ie.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{serviceRasterInfo:e}=this,i=e?.attributeTable,t=null!=i?i.fields:null;if(t){const o=t.filter(l=>"oid"!==l.type&&"value"!==l.name.toLowerCase()).map(l=>{const c=l.clone();return c.name="Raster."+l.name,c});n.push(...o)}const a=e?.dataType,s=e?.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=s){const o=s.variables[0].unit?.trim();n.push(new Ie.Z({name:"Raster.Magnitude",alias:"Magnitude"+(o?` (${o})`:""),domain:null,editable:!1,type:"double"})),n.push(new Ie.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return n}createPopupTemplate(n){const{rasterFields:e}=this,i=new Set(e.map(({name:t})=>t).filter(t=>"raster.servicepixelvalue.raw"!==t.toLowerCase()));return(0,Cn.eZ)({fields:e,title:this.title},{...n,visibleFieldNames:i})}generateRasterInfo(n,e){var i=this;return(0,M.Z)(function*(){if(!(n=(0,Oe.TJ)(He.Z,n)))return i.serviceRasterInfo;try{const{rasterInfo:t}=yield i._openFunctionRaster(n,e);return t}catch(t){throw t instanceof k.Z?t:new k.Z("imagery-tile-layer","the given raster function is not supported")}})()}save(n){var e=this;return(0,M.Z)(function*(){return e._debouncedSaveOperations(Ee.x.SAVE,n)})()}saveAs(n,e){var i=this;return(0,M.Z)(function*(){return i._debouncedSaveOperations(Ee.x.SAVE_AS,e,n)})()}write(n,e){const i=this._primaryRasters[0]??this.raster;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(n,e):(e?.messages&&e.messages.push(new k.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(n){var e=this;return(0,M.Z)(function*(){let i=!1;if(e.raster)yield e._openFromRaster(e.raster,n),i="Function"===e.raster.datasetFormat;else{const{url:r,rasterFunction:a,source:s}=e;if(!r&&!s)throw new k.Z("imagery-tile-layer:open","missing url or source parameter");s?yield e._openFromSource(s,n):a?yield e._openFromUrlWithRasterFunction(r,a,n):yield e._openFromUrl(r,n)}const t=e.raster.rasterInfo;if(!t)throw new k.Z("imagery-tile-layer:load","cannot load resources on "+e.url);if(e._set("serviceRasterInfo",i?t:e._primaryRasters[0].rasterInfo),e._set("spatialReference",t.spatialReference),e.sourceJSON=e.sourceJSON||e.raster.sourceJSON,null!=e.sourceJSON){const r="Map"===e.raster.tileType&&null!=e.sourceJSON.minLOD&&null!=e.sourceJSON.maxLOD?e.sourceJSON:{...e.sourceJSON,minScale:0,maxScale:0};e.read(r,{origin:"service"})}else e.read({tileInfo:e.serviceRasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});e.title||(e.title=e.raster.datasetName),"Map"===e.raster.tileType&&(e.popupEnabled=!1),e._configDefaultSettings(),e.addHandles((0,wt.YP)(()=>e.customParameters,r=>{e.raster&&(e.raster.ioConfig.customFetchParameters=r)}))})()}_openFromRaster(n,e){var i=this;return(0,M.Z)(function*(){n.rasterInfo||(yield n.open({signal:e})),i._primaryRasters="Function"===n.datasetFormat?n.primaryRasters.rasters:[n],i.url||(i.url=i._primaryRasters[0].url)})()}_openFromUrlWithRasterFunction(n,e,i){var t=this;return(0,M.Z)(function*(){const r=[n];e&&(0,Ge.G8)(e.toJSON(),r);const a=yield Promise.all(r.map(o=>tt.open({url:o,sourceJSON:t.sourceJSON,ioConfig:{sampling:"closest",...t.ioConfig,customFetchParameters:t.customParameters},signal:i}))),s=a.findIndex(o=>null==o);if(s>-1)throw new k.Z("imagery-tile-layer:open",`cannot open raster: ${r[s]}`);return t._primaryRasters=a,t._initializeWithFunctionRaster(e)})()}_openFromUrl(n,e){var i=this;return(0,M.Z)(function*(){const t=yield tt.open({url:n,sourceJSON:i.sourceJSON,ioConfig:{sampling:"closest",...i.ioConfig,customFetchParameters:i.customParameters},signal:e});if(null==t)throw new k.Z("imagery-tile-layer:open",`cannot open raster: ${n}`);i._primaryRasters=[t],i.raster=t})()}_openFromSource(n,e){var i=this;return(0,M.Z)(function*(){const t="the tiled imagery data source is not supported",r="coverage"===n.type?.toLowerCase()?"CovJSON":n.extent&&n.pixelBlock?"MEMORY":null;if(!r)throw new k.Z("imagery-tile-layer:open",t);"MEMORY"===r&&(n={extent:n.extent,pixelBlocks:[n.pixelBlock]});const a=yield tt.open({url:"",source:n,datasetFormat:r,ioConfig:{sampling:"closest",...i.ioConfig,customFetchParameters:i.customParameters},signal:e});if(null==a)throw new k.Z("imagery-tile-layer:open",t);i._primaryRasters=[a],i.rasterFunction?yield i._initializeWithFunctionRaster(i.rasterFunction):i.raster=a})()}_openFunctionRaster(n,e){var i=this;return(0,M.Z)(function*(){const t={raster:i._primaryRasters[0]};i._primaryRasters.length>1&&i._primaryRasters.forEach(s=>t[s.url]=s);const r=(0,Ge.Ue)(n.functionDefinition?.toJSON()??n.toJSON(),t),a=new ft({rasterFunction:r});return yield a.open(e),a})()}_initializeWithFunctionRaster(n,e){var i=this;return(0,M.Z)(function*(){try{i.raster=yield i._openFunctionRaster(n,e)}catch(t){t instanceof k.Z&&fe.Z.getLogger(i).error("imagery-tile-layer:open",t.message),fe.Z.getLogger(i).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),i._set("rasterFunction",null),i.raster=i._primaryRasters[0]}})()}};(0,b._)([(0,w.Cb)({clonable:!1})],H.prototype,"_primaryRasters",void 0),(0,b._)([(0,w.Cb)({type:[Oe.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],H.prototype,"bandIds",void 0),(0,b._)([(0,w.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,Ct.J)(nn.cl)],H.prototype,"interpolation",void 0),(0,b._)([(0,w.Cb)(Ae.rn)],H.prototype,"legendEnabled",void 0),(0,b._)([(0,w.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],H.prototype,"isReference",void 0),(0,b._)([(0,w.Cb)({type:["show","hide"]})],H.prototype,"listMode",void 0),(0,b._)([(0,w.Cb)({json:{read:!0,write:!0}})],H.prototype,"blendMode",void 0),(0,b._)([(0,w.Cb)()],H.prototype,"sourceJSON",void 0),(0,b._)([(0,w.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],H.prototype,"version",void 0),(0,b._)([(0,w.Cb)({readOnly:!0,json:{read:!1}})],H.prototype,"type",void 0),(0,b._)([(0,w.Cb)({type:["ArcGISTiledImageServiceLayer"]})],H.prototype,"operationalLayerType",void 0),(0,b._)([(0,w.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(n,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(n,e,i){e[i]=!n}}}})],H.prototype,"popupEnabled",void 0),(0,b._)([(0,w.Cb)({type:bt.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],H.prototype,"popupTemplate",void 0),(0,b._)([(0,w.Cb)({readOnly:!0})],H.prototype,"defaultPopupTemplate",null),(0,b._)([(0,w.Cb)({readOnly:!0,type:[Ie.Z]})],H.prototype,"fields",void 0),(0,b._)([(0,w.Cb)({readOnly:!0,type:[Ie.Z]})],H.prototype,"rasterFields",null),(0,b._)([(0,w.Cb)({constructOnly:!0})],H.prototype,"source",void 0),H=(0,b._)([(0,Q.j)("esri.layers.ImageryTileLayer")],H);const Fn=H}}]);