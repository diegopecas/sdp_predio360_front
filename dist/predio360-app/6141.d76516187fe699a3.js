"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[6141,5919,5994],{25919:(re,J,v)=>{var I,f;v.d(J,{Hy:()=>U,OF:()=>p,TD:()=>P,Tu:()=>S,VO:()=>M,aV:()=>C,kq:()=>D,rH:()=>I}),(f=I||(I={})).AsyncNotEnabled="AsyncNotEnabled",f.ModulesNotSupported="ModulesNotSupported",f.CircularModules="CircularModules",f.NeverReach="NeverReach",f.UnsupportedHashType="UnsupportedHashType",f.InvalidParameter="InvalidParameter",f.UnexpectedToken="UnexpectedToken",f.Unrecognised="Unrecognised",f.UnrecognisedType="UnrecognisedType",f.MaximumCallDepth="MaximumCallDepth",f.BooleanConditionRequired="BooleanConditionRequired",f.TypeNotAllowedInFeature="TypeNotAllowedInFeature",f.KeyMustBeString="KeyMustBeString",f.WrongNumberOfParameters="WrongNumberOfParameters",f.CallNonFunction="CallNonFunction",f.NoFunctionInTemplateLiteral="NoFunctionInTemplateLiteral",f.NoFunctionInDictionary="NoFunctionInDictionary",f.NoFunctionInArray="NoFunctionInArray",f.AssignModuleFunction="AssignModuleFunction",f.LogicExpressionOrAnd="LogicExpressionOrAnd",f.LogicalExpressionOnlyBoolean="LogicalExpressionOnlyBoolean",f.FuncionNotFound="FunctionNotFound",f.InvalidMemberAccessKey="InvalidMemberAccessKey",f.UnsupportedUnaryOperator="UnsupportUnaryOperator",f.InvalidIdentifier="InvalidIdentifier",f.MemberOfNull="MemberOfNull",f.UnsupportedOperator="UnsupportedOperator",f.Cancelled="Cancelled",f.ModuleAccessorMustBeString="ModuleAccessorMustBeString",f.ModuleExportNotFound="ModuleExportNotFound",f.Immutable="Immutable",f.OutOfBounds="OutOfBounds",f.IllegalResult="IllegalResult",f.FieldNotFound="FieldNotFound",f.PortalRequired="PortalRequired",f.LogicError="LogicError",f.ArrayAccessorMustBeNumber="ArrayAccessMustBeNumber",f.KeyAccessorMustBeString="KeyAccessorMustBeString",f.WrongSpatialReference="WrongSpatialReference";const K={[I.TypeNotAllowedInFeature]:"Feature attributes only support dates, numbers, strings, guids.",[I.LogicError]:"Logic error - {reason}",[I.NeverReach]:"Encountered unreachable logic",[I.AsyncNotEnabled]:"Async Arcade must be enabled for this script",[I.ModuleAccessorMustBeString]:"Module accessor must be a string",[I.ModuleExportNotFound]:"Module has no export with provided identifier",[I.ModulesNotSupported]:"Current profile does not support modules",[I.ArrayAccessorMustBeNumber]:"Array accessor must be a number",[I.FuncionNotFound]:"Function not found",[I.FieldNotFound]:"Key not found - {key}",[I.CircularModules]:"Circular module dependencies are not allowed",[I.Cancelled]:"Execution cancelled",[I.UnsupportedHashType]:"Type not supported in hash function",[I.IllegalResult]:"Value is not a supported return type",[I.PortalRequired]:"Portal is required",[I.InvalidParameter]:"Invalid parameter",[I.WrongNumberOfParameters]:"Call with wrong number of parameters",[I.Unrecognised]:"Unrecognised code structure",[I.UnrecognisedType]:"Unrecognised type",[I.WrongSpatialReference]:"Cannot work with geometry in this spatial reference. It is different to the execution spatial reference",[I.BooleanConditionRequired]:"Conditions must use booleans",[I.NoFunctionInDictionary]:"Dictionaries cannot contain functions.",[I.NoFunctionInArray]:"Arrays cannot contain functions.",[I.NoFunctionInTemplateLiteral]:"Template Literals do not expect functions by value.",[I.KeyAccessorMustBeString]:"Accessor must be a string",[I.KeyMustBeString]:"Object keys must be a string",[I.Immutable]:"Object is immutable",[I.InvalidParameter]:"Invalid parameter",[I.UnexpectedToken]:"Unexpected token",[I.MemberOfNull]:"Cannot access property of null object",[I.MaximumCallDepth]:"Exceeded maximum function depth",[I.OutOfBounds]:"Out of bounds",[I.InvalidIdentifier]:"Identifier not recognised",[I.FuncionNotFound]:"Function not found",[I.CallNonFunction]:"Expression is not a function",[I.InvalidMemberAccessKey]:"Cannot access value using a key of this type",[I.AssignModuleFunction]:"Cannot assign function to module variable",[I.UnsupportedUnaryOperator]:"Unsupported unary operator",[I.UnsupportedOperator]:"Unsupported operator",[I.LogicalExpressionOnlyBoolean]:"Logical expressions must be boolean",[I.LogicExpressionOrAnd]:"Logical expression can only be combined with || or &&"};class W extends Error{constructor(...R){super(...R)}}class Y extends W{constructor(R,b){super(Z(b)+R.message,{cause:R}),this.loc=null,Error.captureStackTrace&&Error.captureStackTrace(this,Y),b&&b.loc&&(this.loc=b.loc)}}class C extends Error{constructor(R,b,F,u){super("Execution error - "+Z(F)+U(K[b],u)),this.loc=null,this.declaredRootClass="esri.arcade.arcadeexecutionerror",Error.captureStackTrace&&Error.captureStackTrace(this,C),F&&F.loc&&(this.loc=F.loc)}}function Z(f){return f&&f.loc?`Line : ${f.loc.start?.line}, ${f.loc.start?.column}: `:""}class p extends Error{constructor(R,b,F,u){super("Compilation error - "+Z(F)+U(K[b],u)),this.loc=null,this.declaredRootClass="esri.arcade.arcadecompilationerror",Error.captureStackTrace&&Error.captureStackTrace(this,p),F&&F.loc&&(this.loc=F.loc)}}class D extends Error{constructor(){super("Uncompilable code structures"),this.declaredRootClass="esri.arcade.arcadeuncompilableerror",Error.captureStackTrace&&Error.captureStackTrace(this,D)}}function U(f,R){try{if(!R)return f;for(const b in R){let F=R[b];F||(F=""),f=f.replace("{"+b+"}",R[b])}}catch{}return f}function M(f,R,b){return"esri.arcade.arcadeexecutionerror"===b.declaredRootClass||"esri.arcade.arcadecompilationerror"===b.declaredRootClass?null===b.loc&&R&&R.loc?new Y(b,{cause:b}):b:R&&R.loc?new Y(b,{cause:b}):b}var P;!function(f){f.UnrecognisedUri="UnrecognisedUri",f.UnsupportedUriProtocol="UnsupportedUriProtocol"}(P||(P={}));const z={[P.UnrecognisedUri]:"Unrecognised uri - {uri}",[P.UnsupportedUriProtocol]:"Unrecognised uri protocol"};class S extends Error{constructor(R,b){super(U(z[R],b)),this.declaredRootClass="esri.arcade.arcademoduleerror",Error.captureStackTrace&&Error.captureStackTrace(this,S)}}},15994:(re,J,v)=>{v.d(J,{N:()=>I});const I={convertToGEGeometry:function K(S,B){return null==B?null:S.convertJSONToGeometry(B)},exportPoint:function Y(S,B,f){const R=new W(S.getPointX(B),S.getPointY(B),f),b=S.hasZ(B),F=S.hasM(B);return b&&(R.z=S.getPointZ(B)),F&&(R.m=S.getPointM(B)),R},exportPolygon:function Z(S,B,f){return new C(S.exportPaths(B),f,S.hasZ(B),S.hasM(B))},exportPolyline:function D(S,B,f){return new p(S.exportPaths(B),f,S.hasZ(B),S.hasM(B))},exportMultipoint:function M(S,B,f){return new U(S.exportPoints(B),f,S.hasZ(B),S.hasM(B))},exportExtent:function z(S,B,f){const R=S.hasZ(B),b=S.hasM(B),F=new P(S.getXMin(B),S.getYMin(B),S.getXMax(B),S.getYMax(B),f);if(R){const u=S.getZExtent(B);F.zmin=u.vmin,F.zmax=u.vmax}if(b){const u=S.getMExtent(B);F.mmin=u.vmin,F.mmax=u.vmax}return F}};class W{constructor(B,f,R){this.x=B,this.y=f,this.spatialReference=R,this.z=void 0,this.m=void 0}}class C{constructor(B,f,R,b){this.rings=B,this.spatialReference=f,this.hasZ=void 0,this.hasM=void 0,R&&(this.hasZ=R),b&&(this.hasM=b)}}class p{constructor(B,f,R,b){this.paths=B,this.spatialReference=f,this.hasZ=void 0,this.hasM=void 0,R&&(this.hasZ=R),b&&(this.hasM=b)}}class U{constructor(B,f,R,b){this.points=B,this.spatialReference=f,this.hasZ=void 0,this.hasM=void 0,R&&(this.hasZ=R),b&&(this.hasM=b)}}class P{constructor(B,f,R,b,F){this.xmin=B,this.ymin=f,this.xmax=R,this.ymax=b,this.spatialReference=F,this.zmin=void 0,this.zmax=void 0,this.mmin=void 0,this.mmax=void 0}}},65629:(re,J,v)=>{v.d(J,{SR:()=>U,Ui:()=>D});var I=v(62208),K=v(65401),W=v(32442),Y=v(25748),C=v(91179),Z=v(74618),p=v(37053);function D(h){return M(h,!0)}function U(h){return M(h,!1)}function M(h,l){if((0,I.Wi)(h))return null;const d=h.spatialReference,_=(0,p.C5)(d),g="toJSON"in h?h.toJSON():h;if(!_)return g;const w=(0,p.sS)(d)?102100:4326,k=Z.UZ[w].maxX,N=Z.UZ[w].minX;if((0,C.wp)(g))return z(g,k,N);if((0,C.aW)(g))return g.points=g.points.map(A=>z(A,k,N)),g;if((0,C.YX)(g))return function P(h,l){if(!l)return h;const d=function S(h,l){const d=[],{ymin:_,ymax:g,xmin:w,xmax:k}=h,N=h.xmax-h.xmin,[A,G]=l.valid,{x:V,frameId:H}=B(h.xmin,l),{x:$,frameId:Q}=B(h.xmax,l),ge=V===$&&N>0;if(N>2*G){const oe={xmin:w<k?V:$,ymin:_,xmax:G,ymax:g},xe={xmin:A,ymin:_,xmax:w<k?$:V,ymax:g},ve={xmin:0,ymin:_,xmax:G,ymax:g},Te={xmin:A,ymin:_,xmax:0,ymax:g},he=[],ae=[];f(oe,ve)&&he.push(H),f(oe,Te)&&ae.push(H),f(xe,ve)&&he.push(Q),f(xe,Te)&&ae.push(Q);for(let ee=H+1;ee<Q;ee++)he.push(ee),ae.push(ee);d.push(new F(oe,[H]),new F(xe,[Q]),new F(ve,he),new F(Te,ae))}else V>$||ge?d.push(new F({xmin:V,ymin:_,xmax:G,ymax:g},[H]),new F({xmin:A,ymin:_,xmax:$,ymax:g},[Q])):d.push(new F({xmin:V,ymin:_,xmax:$,ymax:g},[H]));return d}(h,l).map(_=>_.extent);return d.length<2?d[0]||h:d.length>2?(h.xmin=l.valid[0],h.xmax=l.valid[1],h):{rings:d.map(_=>[[_.xmin,_.ymin],[_.xmin,_.ymax],[_.xmax,_.ymax],[_.xmax,_.ymin],[_.xmin,_.ymin]])}}(g,_);if((0,C.oU)(g)||(0,C.l9)(g)){const A=(0,W.$P)(u,g),G={xmin:A[0],ymin:A[1],xmax:A[2],ymax:A[3]},V=(0,Z.XZ)(G.xmin,N)*(2*k),H=0===V?g:(0,Z.Sy)(g,V);return G.xmin+=V,G.xmax+=V,G.xmax>k?b(H,k,l):G.xmin<N?b(H,N,l):H}return g}function z(h,l,d){if(Array.isArray(h)){const _=h[0];if(_>l){const g=(0,Z.XZ)(_,l);h[0]=_+g*(-2*l)}else if(_<d){const g=(0,Z.XZ)(_,d);h[0]=_+g*(-2*d)}}else{const _=h.x;if(_>l){const g=(0,Z.XZ)(_,l);h.x+=g*(-2*l)}else if(_<d){const g=(0,Z.XZ)(_,d);h.x+=g*(-2*d)}}return h}function B(h,l){const[d,_]=l.valid,g=2*_;let w,k=0;return h>_?(w=Math.ceil(Math.abs(h-_)/g),h-=w*g,k=w):h<d&&(w=Math.ceil(Math.abs(h-d)/g),h+=w*g,k=-w),{x:h,frameId:k}}function f(h,l){const{xmin:d,ymin:_,xmax:g,ymax:w}=l;return R(h,d,_)&&R(h,d,w)&&R(h,g,w)&&R(h,g,_)}function R(h,l,d){return l>=h.xmin&&l<=h.xmax&&d>=h.ymin&&d<=h.ymax}function b(h,l,d=!0){const _=!(0,C.l9)(h);if(_&&(0,Y.Zy)(h),d)return(new m).cut(h,l);const g=_?h.rings:h.paths,w=_?4:2,k=g.length,N=-2*l;for(let A=0;A<k;A++){const G=g[A];if(G&&G.length>=w){const V=[];for(const H of G)V.push([H[0]+N,H[1]]);g.push(V)}}return _?h.rings=g:h.paths=g,h}class F{constructor(l,d){this.extent=l,this.frameIds=d}}const u=(0,K.Ue)();class m{constructor(){this._linesIn=[],this._linesOut=[]}cut(l,d){let _;if(this._xCut=d,l.rings)this._closed=!0,_=l.rings,this._minPts=4;else{if(!l.paths)return null;this._closed=!1,_=l.paths,this._minPts=2}for(const w of _){if(!w||w.length<this._minPts)continue;let k=!0;for(const N of w)k?(this.moveTo(N),k=!1):this.lineTo(N);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),_=[];for(const w of this._linesIn)w&&w.length>=this._minPts&&_.push(w);const g=-2*this._xCut;for(const w of this._linesOut)if(w&&w.length>=this._minPts){for(const k of w)k[0]+=g;_.push(w)}return this._closed?l.rings=_:l.paths=_,l}moveTo(l){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(l[0]),this._moveTo(l[0],l[1],this._prevSide),this._prevPt=l,this._firstPt=l}lineTo(l){const d=this._side(l[0]);if(d*this._prevSide==-1){const _=this._intersect(this._prevPt,l);this._lineTo(this._xCut,_,0),this._prevSide=0,this._lineTo(l[0],l[1],d)}else this._lineTo(l[0],l[1],d);this._prevSide=d,this._prevPt=l}close(){const l=this._firstPt,d=this._prevPt;l[0]===d[0]&&l[1]===d[1]||this.lineTo(l),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(l,d,_){this._closed?(this._lineIn.push([_<=0?l:this._xCut,d]),this._lineOut.push([_>=0?l:this._xCut,d])):(_<=0&&this._lineIn.push([l,d]),_>=0&&this._lineOut.push([l,d]))}_lineTo(l,d,_){this._closed?(this._addPolyVertex(this._lineIn,_<=0?l:this._xCut,d),this._addPolyVertex(this._lineOut,_>=0?l:this._xCut,d)):_<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([l,d])):_>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([l,d])):this._prevSide<0?(this._lineIn.push([l,d]),this._lineOut.push([l,d])):this._prevSide>0&&(this._lineOut.push([l,d]),this._lineIn.push([l,d]))}_addPolyVertex(l,d,_){const g=l.length;g>1&&l[g-1][0]===d&&l[g-2][0]===d?l[g-1][1]=_:l.push([d,_])}_checkClosingPt(l){const d=l.length;d>3&&l[0][0]===this._xCut&&l[d-2][0]===this._xCut&&l[1][0]===this._xCut&&(l[0][1]=l[d-2][1],l.pop())}_side(l){return l<this._xCut?-1:l>this._xCut?1:0}_intersect(l,d){return l[1]+(this._xCut-l[0])/(d[0]-l[0])*(d[1]-l[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}},77044:(re,J,v)=>{v.d(J,{Y:()=>W});var I=v(62208);function K(M,P){return M?P?4:3:P?3:2}function W(M,P,z,S,B){if((0,I.Wi)(P)||!P.lengths.length)return null;const f="upperLeft"===B?.originPosition?-1:1;M.lengths.length&&(M.lengths.length=0),M.coords.length&&(M.coords.length=0);const R=M.coords,b=[],F=z?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:u,coords:m}=P,h=K(z,S);let l=0;for(const d of u){const _=Y(F,m,l,d,z,S,f);_&&b.push(_),l+=d*h}if(b.sort((d,_)=>{let g=f*d[2]-f*_[2];return 0===g&&z&&(g=d[4]-_[4]),g}),b.length){let d=6*b[0][2];R[0]=b[0][0]/d,R[1]=b[0][1]/d,z&&(d=6*b[0][4],R[2]=0!==d?b[0][3]/d:0),(R[0]<F[0]||R[0]>F[1]||R[1]<F[2]||R[1]>F[3]||z&&(R[2]<F[4]||R[2]>F[5]))&&(R.length=0)}if(!R.length){const d=P.lengths[0]?function C(M,P,z,S,B){const f=K(S,B);let R=P,b=P+f,F=0,u=0,m=0,h=0;for(let l=0,d=z-1;l<d;l++,R+=f,b+=f){const _=M[R],g=M[R+1],w=M[R+2],k=M[b],N=M[b+1],A=M[b+2],G=S?p(_,g,w,k,N,A):Z(_,g,k,N);if(G)if(F+=G,S){const V=U(_,g,w,k,N,A);u+=G*V[0],m+=G*V[1],h+=G*V[2]}else{const V=D(_,g,k,N);u+=G*V[0],m+=G*V[1]}}return F>0?S?[u/F,m/F,h/F]:[u/F,m/F]:z>0?S?[M[P],M[P+1],M[P+2]]:[M[P],M[P+1]]:null}(m,0,u[0],z,S):null;if(!d)return null;R[0]=d[0],R[1]=d[1],z&&d.length>2&&(R[2]=d[2])}return M}function Y(M,P,z,S,B,f,R=1){const b=K(B,f);let F=z,u=z+b,m=0,h=0,l=0,d=0,_=0;for(let w=0,k=S-1;w<k;w++,F+=b,u+=b){const N=P[F],A=P[F+1],G=P[F+2],V=P[u],H=P[u+1],$=P[u+2];let Q=N*H-V*A;d+=Q,m+=(N+V)*Q,h+=(A+H)*Q,B&&(Q=N*$-V*G,l+=(G+$)*Q,_+=Q),N<M[0]&&(M[0]=N),N>M[1]&&(M[1]=N),A<M[2]&&(M[2]=A),A>M[3]&&(M[3]=A),B&&(G<M[4]&&(M[4]=G),G>M[5]&&(M[5]=G))}if(d*R>0&&(d*=-1),_*R>0&&(_*=-1),!d)return null;const g=[m,h,.5*d];return B&&(g[3]=l,g[4]=.5*_),g}function Z(M,P,z,S){const B=z-M,f=S-P;return Math.sqrt(B*B+f*f)}function p(M,P,z,S,B,f){const R=S-M,b=B-P,F=f-z;return Math.sqrt(R*R+b*b+F*F)}function D(M,P,z,S){return[M+.5*(z-M),P+.5*(S-P)]}function U(M,P,z,S,B,f){return[M+.5*(S-M),P+.5*(B-P),z+.5*(f-z)]}},82959:(re,J,v)=>{v.d(J,{_W:()=>P,iV:()=>f,oj:()=>F});var I=v(15861),K=v(62208),W=v(55915),Y=v(15994),C=v(37053),Z=v(46367);const p=[0,0];function D(u,m){if(!m)return null;if("x"in m){const h={x:0,y:0};return[h.x,h.y]=u(m.x,m.y,p),null!=m.z&&(h.z=m.z),null!=m.m&&(h.m=m.m),h}if("xmin"in m){const h={xmin:0,ymin:0,xmax:0,ymax:0};return[h.xmin,h.ymin]=u(m.xmin,m.ymin,p),[h.xmax,h.ymax]=u(m.xmax,m.ymax,p),m.hasZ&&(h.zmin=m.zmin,h.zmax=m.zmax,h.hasZ=!0),m.hasM&&(h.mmin=m.mmin,h.mmax=m.mmax,h.hasM=!0),h}return"rings"in m?{rings:U(m.rings,u),hasM:m.hasM,hasZ:m.hasZ}:"paths"in m?{paths:U(m.paths,u),hasM:m.hasM,hasZ:m.hasZ}:"points"in m?{points:M(m.points,u),hasM:m.hasM,hasZ:m.hasZ}:null}function U(u,m){const h=[];for(const l of u)h.push(M(l,m));return h}function M(u,m){const h=[];for(const l of u){const d=m(l[0],l[1],[0,0]);h.push(d),l.length>2&&d.push(l[2]),l.length>3&&d.push(l[3])}return h}function P(u,m){return z.apply(this,arguments)}function z(){return(z=(0,I.Z)(function*(u,m){if(!u||!m)return;const h=Array.isArray(u)?u.map(l=>(0,K.pC)(l.geometry)?l.geometry.spatialReference:null).filter(K.pC):[u];yield(0,W.iQ)(h.map(l=>({source:l,dest:m})))})).apply(this,arguments)}const S=D.bind(null,Z.hG),B=D.bind(null,Z.R6);function f(u,m,h,l){if(!u||(h||(h=m,m=u.spatialReference),!(0,C.JY)(m)||!(0,C.JY)(h)||(0,C.fS)(m,h)))return u;if((0,Z.Q8)(m,h)){const d=(0,C.sS)(h)?S(u):B(u);return d.spatialReference=h,d}return(0,W.oj)(Y.N,[u],m,h,null,l)[0]}const b=new class R{constructor(){this._jobs=[],this._timer=null,this._process=this._process.bind(this)}push(m,h,l){var d=this;return(0,I.Z)(function*(){if(!m||!m.length||!h||!l||(0,C.fS)(h,l))return m;const _={geometries:m,inSpatialReference:h,outSpatialReference:l,resolve:null};return d._jobs.push(_),new Promise(g=>{_.resolve=g,null===d._timer&&(d._timer=setTimeout(d._process,10))})})()}_process(){this._timer=null;const m=this._jobs.shift();if(!m)return;const{geometries:h,inSpatialReference:l,outSpatialReference:d,resolve:_}=m;(0,Z.Q8)(l,d)?(0,C.sS)(d)?_(h.map(S)):_(h.map(B)):_((0,W.oj)(Y.N,h,l,d,null,null)),this._jobs.length>0&&(this._timer=setTimeout(this._process,10))}};function F(u,m,h){return b.push(u,m,h)}},28082:(re,J,v)=>{v.d(J,{H:()=>b});var I=v(15861),K=v(26584),W=v(8314),Y=v(63290),C=v(62208),Z=v(10699),p=v(39351),D=v(99666),U=v(87526),M=v(31982),P=v(67969),z=v(85775),S=v(55086);const B=Y.Z.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),f=(0,M.g)(M.J,B);class R{constructor(u,m,h){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:l,pixelType:d,textureOnly:_}=u,g=(0,U.UK)(d);this.shared=h,this.pixelType=d,this.size=m,this.textureOnly=_,_||(this.data=new g((0,C.Wg)(l))),this._resetRange()}destroy(){(0,C.yw)(this._texture,u=>u.dispose());for(const u in this._fbos)(0,C.yw)(this._fbos[u],m=>{"0"===u&&m.detachColorTexture(),m.dispose()}),this._fbos[u]=null;this._texture=null}get _textureDesc(){return{target:P.No.TEXTURE_2D,wrapMode:P.e8.CLAMP_TO_EDGE,pixelFormat:P.VI.RGBA,dataType:this.pixelType,samplingMode:P.cw.NEAREST,width:this.size,height:this.size}}setData(u,m,h){const l=(0,D.jL)(u),d=(0,C.Wg)(this.data),_=l*this.texelSize+m;!d||_>=d.length||(d[_]=h,this.dirtyStart=Math.min(this.dirtyStart,l),this.dirtyEnd=Math.max(this.dirtyEnd,l))}getData(u,m){if((0,C.Wi)(this.data))return null;const h=(0,D.jL)(u)*this.texelSize+m;return!this.data||h>=this.data.length?null:this.data[h]}getTexture(u){return(0,C.Pt)(this._texture,()=>this._initTexture(u))}getFBO(u,m=0){if((0,C.Wi)(this._fbos[m])){const h={colorTarget:P.Lm.TEXTURE,depthStencilTarget:P.OU.NONE},l=0===m?this.getTexture(u):this._textureDesc;this._fbos[m]=new z.X(u,h,l)}return this._fbos[m]}get locked(){return!(this.pixelType!==P.Br.UNSIGNED_BYTE||!this.shared||this.textureOnly||!(0,W.Z)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){return this.dirtyEnd>=this.dirtyStart}updateTexture(u,m){if(!this.locked){try{const h=this.dirtyStart,l=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const d=(0,C.Wg)(this.data).buffer,_=this.getTexture(u),g=4,w=(h-h%this.size)/this.size,N=w,G=(l-l%this.size)/this.size,V=w*this.size*g,H=(this.size+G*this.size)*g-V,$=(0,U.UK)(this.pixelType),Q=new $(d,V*$.BYTES_PER_ELEMENT,H),ge=this.size,oe=G-N+1;if(oe>this.size)return void B.error(new K.Z("mapview-webgl","Out-of-bounds index when updating AttributeData"));_.updateData(0,0,N,ge,oe,Q)}catch{}m()}}update(u){const{data:m,start:h,end:l}=u;if((0,C.pC)(m)&&(0,C.pC)(this.data)){const d=this.data,_=h*this.texelSize;for(let g=0;g<m.length;g++)u.layout&1<<g%this.texelSize&&(d[_+g]=m[g])}this.dirtyStart=Math.min(this.dirtyStart,h),this.dirtyEnd=Math.max(this.dirtyEnd,l)}resize(u,m){const h=this.size;if(this.size=m,this.textureOnly)return void(h!==this.size&&(this._lastTexture=this._texture,this._texture=null));const l=(0,U.UK)(this.pixelType);this.destroy(),this.data=new l((0,C.Wg)(u.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(u){const m=new S.x(u,this._textureDesc,(0,C.Pt)(this.data,void 0));if((0,C.pC)(this._lastTexture)&&this._fbos[0]){const h=this._lastTexture.descriptor.width,l=this._lastTexture.descriptor.height,d=this._lastTexture.descriptor.dataType,_=this._lastTexture.descriptor.pixelFormat,g=this.getFBO(u),w=(0,U.Yw)(d),k=new((0,U.UK)(d))(new ArrayBuffer(h*l*w*this.texelSize)),N=u.getBoundFramebufferObject(),{x:A,y:G,width:V,height:H}=u.getViewport();u.bindFramebuffer(g),g.readPixels(0,0,h,l,_,d,k),m.updateData(0,0,0,2*h,l/2,k),u.setViewport(A,G,V,H),u.bindFramebuffer(N)}return this.destroy(),this._texture=m,this._texture}}class b{constructor(u){this._onUpdate=u,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(u){const{blocks:m,shared:h,size:l}=u;if(this.shared=h,this.size=l,f("Initializing AttributeStoreView",u),(0,C.Wi)(this._data))this._data=(0,C.Fd)(m,d=>new R(d,l,h));else for(let d=0;d<this._data.length;d++){const _=this._data[d],g=m[d];(0,C.pC)(g)&&((0,C.Wi)(_)?this._data[d]=new R(g,l,h):_.resize(g,l))}this._initialized=!0}destroy(){(0,C.yw)(this._data,u=>(0,C.Fd)(u,m=>m.destroy())),(0,C.yw)(this._defaultTexture,u=>u.dispose())}isEmpty(){return(0,C.Wi)(this._data)}isUpdating(){const u=(0,C.pC)(this._pendingAttributeUpdate),m=u;return(0,W.Z)("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${m}\n  -> hasPendingUpdate ${u}`),m}getBlock(u){return(0,C.Wi)(this._data)?null:this._data[u]}setLabelMinZoom(u,m){this.setData(u,0,1,m)}getLabelMinZoom(u){return this.getData(u,0,1,255)}getFilterFlags(u){return this.getData(u,0,0,0)}getVVSize(u){return this.getData(u,p.aK,0,0)}getData(u,m,h,l){if(!this._data)return 0;const d=(0,C.Wg)(this._data)[m];if((0,C.Wi)(d))return 0;const _=d.getData(u,h);return(0,C.pC)(_)?_:l}setData(u,m,h,l){const d=(0,C.Wg)(this._data)[m];(0,C.Wg)(d).setData(u,h,l)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}requestUpdate(u){var m=this;return(0,I.Z)(function*(){if(m._pendingAttributeUpdate)return void B.error(new K.Z("mapview-webgl","Tried to update attribute data with a pending update"));const h=(0,Z.hh)();return f("AttributeStoreView Update Requested",u),m._pendingAttributeUpdate={data:u,resolver:h},m._onUpdate(),h.promise})()}update(){if(this._initialized&&(0,C.pC)(this._pendingAttributeUpdate)){(0,W.Z)("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:u,resolver:m}=this._pendingAttributeUpdate,h=(0,C.Wg)(this._data);for(let l=0;l<u.blocks.length;l++){const d=u.blocks[l];(0,C.yw)(h[l],g=>(0,C.yw)(d,w=>{f(`Updating block ${l}`,w),g.update(w)}))}this._pendingAttributeUpdate=null,m(),this._onUpdate()}}bindTextures(u,m=!0){const h=this._getDefaultTexture(u);if(!this._initialized)return u.bindTexture(h,p.iJ),void(m&&(u.bindTexture(h,p.nM),u.bindTexture(h,p.Ij),u.bindTexture(h,p.f2),u.bindTexture(h,p.By),u.bindTexture(h,p.mx),u.bindTexture(h,p.Xj)));const l=(0,C.Wg)(this._data);this._locked&&!this._forceNextUpload||((0,C.JR)(l,d=>d.updateTexture(u,()=>this._onUpdate())),this._forceNextUpload=!1),u.bindTexture((0,C.R2)(l[p._5],h,d=>d.getTexture(u)),p.iJ),m&&(u.bindTexture((0,C.R2)(l[p.pU],h,d=>d.getTexture(u)),p.Xj),u.bindTexture((0,C.R2)(l[p.xl],h,d=>d.getTexture(u)),p.nM),u.bindTexture((0,C.R2)(l[p.aK],h,d=>d.getTexture(u)),p.Ij),u.bindTexture((0,C.R2)(l[p.lK],h,d=>d.getTexture(u)),p.f2),u.bindTexture((0,C.R2)(l[p.By],h,d=>d.getTexture(u)),p.By),u.bindTexture((0,C.R2)(l[p.mx],h,d=>d.getTexture(u)),p.mx))}_getDefaultTexture(u){return(0,C.Wi)(this._defaultTexture)&&(this._defaultTexture=new S.x(u,{wrapMode:P.e8.CLAMP_TO_EDGE,pixelFormat:P.VI.RGBA,dataType:P.Br.UNSIGNED_BYTE,samplingMode:P.cw.NEAREST,width:1,height:1},new Uint8Array(4))),this._defaultTexture}}},29443:(re,J,v)=>{v.d(J,{o:()=>D});var I=v(31478),K=v(12225),W=v(30217),Y=v(49966),C=v(39351),Z=v(43783);class D extends Z.I{constructor(M,P,z,S){super(M,P,z,S,C.I_,C.I_)}destroy(){super.destroy(),this._transforms&&D.TransformCache.release(this.key.hash)}setTransform(M){const P=this.resolution/M.resolution,z=this.transforms.tileMat3,[S,B]=M.toScreenNoRotation([0,0],[this.x,this.y]),f=this.width/this.rangeX*P,R=this.height/this.rangeY*P;(0,W.s)(z,f,0,0,0,R,0,S,B,1),(0,W.m)(this.transforms.dvs,M.displayViewMat3,z);const b=this.transforms.labelMat2d,F=window.devicePixelRatio,u=(0,I.d)((0,K.c)(),f*F,0,0,R*F,S*F,B*F);(0,I.m)(b,M.viewMat2d,u)}_createTransforms(){return D.TransformCache.acquire(this.key.hash)}}D.TransformCache=new class p{acquire(M){return{refCount:1,version:-1,labelMat2d:(0,K.c)(),tileMat3:(0,Y.c)(),dvs:(0,Y.c)()}}release(M){}}},37633:(re,J,v)=>{v.d(J,{$:()=>Y});var I=v(62208),K=v(39351);const W=2147483647;class Y{constructor(p){this._head=p,this._cursor=p}static from(p,D=0,U=p.byteLength/C.BYTES_PER_RECORD-D){const M=new C(new Int32Array(p,D*C.BYTES_PER_RECORD,U*C.ELEMENTS_PER_RECORD));return new Y(M)}size(){let p=this._cursor,D=0;for(;p;)D+=p.size(),p=p._link;return D}get id(){return this._cursor.id}set id(p){this._cursor.id=p}get materialKey(){return this._cursor.materialKey}set materialKey(p){this._cursor.materialKey=p}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(p){this._cursor.indexFrom=p}get indexCount(){return this._cursor.indexCount}set indexCount(p){this._cursor.indexCount=p}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(p){this._cursor.vertexFrom=p}get vertexCount(){return this._cursor.vertexCount}set vertexCount(p){this._cursor.vertexCount=p}get sortKey(){return this._cursor.sortKey}set sortKey(p){this._cursor.sortKey=p}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(p){let D=p;for(this._cursor=this._head;this._cursor;){const U=this._cursor.size();if(D<U)return this._cursor._index=D,!0;D-=U,this._cursor=this._cursor._link}return!1}forEach(p){const D=this.getCursor();for(;D.next();)p(D)}link(p){if(!this._head)return void(this._head=p._head);let D=this._head;for(;D._link;)D=D._link;D._link=p._head,D._link._indexStart=D._indexStart+D.size()}getCursor(){return this.copy()}lookup(p){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(p);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){const p=new Y(this._head?.copy());if(!p._head)return p;let D=p._head,U=p._head._link;for(;U;)D._link=U.copy(),D=U,U=D._link;return p}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(p){let D=this._head,U=null;for(;D;){if(D.delete(p))return D.isEmpty()&&((0,I.pC)(U)&&(U._link=D._link),D===this._head&&(this._head=D._link),D===this._cursor&&(this._cursor=D._link)),!0;U=D,D=D._link}return!1}}Y.ELEMENTS_PER_RECORD=K.XJ,Y.BYTES_PER_RECORD=Y.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class C{constructor(p){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=p}static from(p,D=0,U=p.byteLength/this.BYTES_PER_RECORD-D){return new C(new Int32Array(p,D*this.BYTES_PER_RECORD,U*this.ELEMENTS_PER_RECORD))}delete(p){const D=this._index,U=this.lookup(p);if(U)for(this.id=W,++this._deletedCount;this.next()&&this.id===p;)this.id=W,++this._deletedCount;return this._index=D,U}isEmpty(){return this._deletedCount===this.size()}link(p){this._link?this._link.link(p):this._link=p}lookup(p){if((0,I.Wi)(this._offsets.instance)){this._offsets.instance=new Map;const U=this.copy();U._index=-1;let M=0;for(;U.next();)U.id!==M&&(this._offsets.instance.set(U.id,U._index),M=U.id)}if(!this._offsets.instance.has(p))return!1;const D=this._index;return this._index=this._offsets.instance.get(p),this.id!==W||(this._index=D,!1)}get id(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD]}set id(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD]=p}get materialKey(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+1]}set materialKey(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+1]=p}get insertAfter(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+3]}set indexFrom(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+3]=p}get indexCount(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+4]}set indexCount(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+4]=p}get vertexFrom(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+5]}set vertexFrom(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+5]=p}get vertexCount(){return this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+6]}set vertexCount(p){this._packedRecords[this._index*C.ELEMENTS_PER_RECORD+6]=p}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*C.ELEMENTS_PER_RECORD+7]}set sortKey(p){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*C.ELEMENTS_PER_RECORD+7]=p}get index(){return this._index}size(){return this._packedRecords.length/C.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===W;);return this._index<this.size()}peekId(){const p=(this._index+1)*C.ELEMENTS_PER_RECORD;return p>=this._packedRecords.length?0:this._packedRecords[p]}getCursor(){return this.copy()}copy(){const p=new C(this._packedRecords);return p._indexStart=this._indexStart,p._link=this._link,p._index=this._index,p._offsets=this._offsets,p._deletedCount=this._deletedCount,p}}C.ELEMENTS_PER_RECORD=K.XJ,C.BYTES_PER_RECORD=C.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT},78209:(re,J,v)=>{v.d(J,{Z:()=>Et});var I=v(15861),K=v(17626),W=v(14517),Y=v(986),C=v(80542),Z=v(8314),p=v(62208),D=v(10699),U=v(32917),M=v(77712),S=(v(90912),v(85931),v(76898)),B=v(65234),f=v(65401),R=v(25748),b=v(91179),F=v(65629),u=v(37053),m=v(82959),h=v(35909),l=v(8080),d=v(39351),_=v(39406);const g=-1;class w{constructor(){this._dirties=[{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==g||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=g,e.indexCount=g,e.vertexFrom=g,e.vertexCount=g,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],c={};let y,E=!1;(o||n!==g&&r>0)&&(c.geometry={count:r,from:n,allDirty:o},E=!0),(o||i!==g&&s>0)&&(y={count:s,from:i,allDirty:o},E=!0),E&&e({indices:y,vertices:c},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==g){const o=Math.min(i.indexFrom,r),c=Math.max(i.indexFrom+i.indexCount,r+n)-o;i.indexFrom=o,i.indexCount=c}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,o=i;if(!r.allDirty)if(r.vertexCount!==g){const c=Math.min(r.vertexFrom,n),y=Math.max(r.vertexFrom+r.vertexCount,n+o)-c;r.vertexFrom=c,r.vertexCount=y}else r.vertexFrom=n,r.vertexCount=o}}class k{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;)e>=(null!==r?r.from+r.count:0)&&e+t<=(null!==n?n.from:this._parent._size)?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1;return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class N{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new k(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null==t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;N._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s??null,next:i??null};if(null!=s&&(s.next=r),null!=i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!=i&&r.from+r.count===i.from){const n=r.from,o=r.count;N._fuse(r,i),N._removeRange(i),this._bookKeeper.rangeResized(r,n,o),this._bookKeeper.rangeResized(i,void 0,0)}if(null!=s&&s.from+s.count===r.from){const n=s.from,o=s.count;N._fuse(s,r),N._removeRange(r),this._bookKeeper.rangeResized(s,n,o),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var A=v(87526);const G=["FILL","LINE","MARKER","TEXT","LABEL"];class ${constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new N(i):null,idxFreeList:i?new N(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const n in e[r])this._freeListsAndStorage[r].vertexBuffers[n]={data:i?(0,A.C$)(i,e[r][n]):null,stride:e[r][n]}}}static fromTileData(e,t){const s=function V(a){const e=a.getStrides(),t={};for(let s=0;s<e.length;s++)t[G[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0];for(const c of e.tileDisplayData.displayObjects)for(const y of c.displayRecords)i[y.geometryType]=Math.max(i[y.geometryType],y.vertexFrom+y.vertexCount),r[y.geometryType]=Math.max(r[y.geometryType],y.indexFrom+y.indexCount);const n=new $(s,e.tileDisplayData.displayList,t,void 0),o=e.tileBufferData?.geometries??[];for(let c=0;c<o.length;++c){const y=i[c],E=r[c],x=o[c],O=n._storageFor(G[c]),L=o[c].indexBuffer;O.indexBuffer=L,O.idxFreeList=new N(L.length),O.idxFreeList.allocate(E);let j=0;for(const q in x.vertexBuffer){const te=o[c].vertexBuffer[q];O.vertexBuffers[q].data=te.data,O.vertexBuffers[q].stride=te.stride;const le=(0,A.Y8)(te.stride);j||(j=te.data.length*le/te.stride)}O.vtxFreeList=new N(j),O.vtxFreeList.allocate(y)}return n}delete(e){const t=G[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=G[e.geometryType];let o,c;e.meshData=null,void 0===e.vertexFrom?(c=t.vertexCount,o=this._allocateVertices(n,c)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),c=t.vertexCount,o=this._allocateVertices(n,c)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,c=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,c=t.vertexCount);let y,E,x,T=!0;if(void 0===e.indexFrom?(y=r,x=t.indexCount,E=this._allocateIndices(n,x)):t.indexCount>e.indexCount?(y=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),x=t.indexCount,E=this._allocateIndices(n,x)):t.indexCount===e.indexCount?(T=!1,E=e.indexFrom,x=e.indexCount):(y=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),E=e.indexFrom,x=t.indexCount),-1!==o&&-1!==E){const O=this._storageFor(n);if((0,A.wO)(o,E,O.vertexBuffers,O.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=E,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const L in s)this._dirtyMap.markDirtyVertices(e.geometryType,L,e.vertexFrom,e.vertexCount)}return T&&this._displayList.addToList(e,y),!0}return-1!==o&&this._freeVertices(n,o,c),-1!==E&&this._freeIndices(n,E,x),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=G[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const c=this._storageFor(r);if((0,A.wO)(n,o,c.vertexBuffers,c.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const y in s)this._dirtyMap.markDirtyVertices(e.geometryType,y,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.vtxFreeList?.fragmentation;return null==r||r>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList?.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList?.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.idxFreeList?.fragmentation;return null==r||r>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var Q=v(83994),ge=v(67969),oe=v(49353);class xe{constructor(e){this.geometryMap=(0,A.Mk)(()=>({indexBuffer:Q.f.createIndex(e,ge.l1.STATIC_DRAW),vao:null}),(t,s)=>({vertexBuffer:Q.f.createVertex(e,A.mR[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const s in t.buffers)t.buffers[s]&&t.buffers[s].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(s,i,r){if(!t.data.vao){const n={};for(const o in t.buffers)n[o]=t.buffers[o].data.vertexBuffer;t.data.vao=new oe.U(s,r,i,n,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const n=i[r];n.allDirty?this._uploadVertices(s,t,r):null!=n.from&&null!=n.count&&this._uploadVertices(s,t,r,n.from,n.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const{data:c,stride:y}=o;if(n.buffers[s]&&c.length>0){const E=y/c.BYTES_PER_ELEMENT;null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(c,i*E,i*E,(i+r)*E):n.buffers[s].data.vertexBuffer.setData(c)}}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer;r.data.indexBuffer&&n.length>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,s,s,s+i):r.data.indexBuffer.setData(n))}}var ve=v(29443);class Te extends ve.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new w}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData?.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new w,this._dispRecStore=$.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData?.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new xe(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=$.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const o of s)null!=o.insertAfter&&i.push(o.id);let r;i.length>0&&(r=new Set(i));const n=this._data.tileDisplayData;for(const o of i){const c=n.displayObjectRegistry.get(o);if(c){n.displayList.removeFromList(c.displayRecords);for(const y of c.displayRecords)this._dispRecStore.delete(y);n.displayObjectRegistry.delete(o)}}r?.size&&(n.displayObjects=n.displayObjects.filter(o=>!r.has(o.id)));for(const o of s){let c,y=n.displayObjectRegistry.get(o.id);if(y){const x=y.displayRecords;y.set(o),y.displayRecords=x;const T=y.displayRecords.length;for(let O=0;O<T;++O){const L=y.displayRecords[O],j=o.displayRecords[O];(O>=o.displayRecords.length||L.geometryType!==j.geometryType||L.symbolLevel!==j.symbolLevel||L.zOrder!==j.zOrder||L.materialKey!==j.materialKey)&&(this._dispRecStore.delete(y.displayRecords[O]),O<o.displayRecords.length&&(y.displayRecords[O]=void 0))}y.displayRecords.length=o.displayRecords.length}else{let x;y=o.copy(),y.displayRecords=[],n.displayObjectRegistry.set(o.id,y);const T=n.displayObjects;if(null!=y.insertAfter)if(c={},y.insertAfter>=0){const O=n.displayObjectRegistry.get(y.insertAfter);O?(x=T.indexOf(O)+1,x<T.length?T.splice(x,0,y):(T.push(y),x=T.length)):(T.push(y),x=T.length)}else T.unshift(y),x=0;else T.push(y),x=T.length;if(c){const O=o.displayRecords.length>0?1:0;let L=0;for(let j=x-1;j>=0&&L<O;--j)for(let q=T[j].displayRecords.length-1;q>=0&&L<O;--q){const te=T[j].displayRecords[q],le=n.displayList.getDPInfoType();c[le]||(c[le]=te,++L)}}}const E=o.displayRecords.length;for(let x=0;x<E;++x){const T=o.displayRecords[x];let O=y.displayRecords[x];O?(O.meshData=T.meshData,O.materialKey=T.materialKey):(O=T.copy(),O.vertexFrom=void 0,O.indexFrom=void 0,y.displayRecords[x]=O);const L=T.geometryType,j=n.displayList.getDPInfoType(),q=e.addOrUpdate.tileBufferData.geometries[L],te=q.vertexBuffer,le=q.indexBuffer;let de;c&&(de=c[j]?n.displayList.splitAfter(c[j]):-1),t=this._dispRecStore.setMeshData(O,T,te,le,de)&&t,c&&null!=O.indexFrom&&null!=O.indexFrom&&(c[j]=O)}}return t}}class he{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class ee{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new ee;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:n,stride:o}=s.vertexBuffer[r];i.vertexBuffer[r]={data:n.slice(),stride:o}}}return e}static deserialize(e){const t=new ee;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,A.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var Ye=v(18716);function Me(a,e,t,...s){e<a.length?a.splice(e,t,...s):a.push(...s)}class Ue{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const n=r.geometryDPInfo.unified;if(n)for(const o of n){const{geometryType:c,materialKey:y,indexFrom:E,indexCount:x}=o,T=Ye.m2.load(y).symbologyType,O=e.painter.getBrush(c,T),L={geometryType:c,materialKey:y,indexFrom:E,indexCount:x,target:t.getGeometry(c)};O.prepareState(e),O.drawGeometry(e,t,L,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Ue;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const o=new Ce;o.geometryType=n.geometryType,o.materialKey=n.materialKey,o.indexFrom=i,o.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,o),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),n=t??r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const c=new Ce;c.indexFrom=e.indexFrom,c.indexCount=e.indexCount,c.materialKey=e.materialKey,c.geometryType=e.geometryType,Me(r,n+1,0,c)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let n;for(let o=0;o<r;++o){const c=i[o];if(e.indexFrom+e.indexCount>c.indexFrom&&e.indexFrom<c.indexFrom+c.indexCount&&c.geometryType===e.geometryType){n=o;break}}if(void 0!==n){const o=i[n];if(e.indexFrom===o.indexFrom)return o.indexCount-=e.indexCount,o.indexFrom+=e.indexCount,0===o.indexCount&&Me(i,n,1),n-1;if(e.indexFrom+e.indexCount===o.indexFrom+o.indexCount)return o.indexCount-=e.indexCount,0===o.indexCount?(Me(i,n,1),n-1):n;{const c=o.indexFrom,y=e.indexFrom-o.indexFrom,E=e.indexCount,x=o.indexFrom+o.indexCount-(e.indexFrom+e.indexCount);o.indexCount=y;const T=new Ce;return T.geometryType=o.geometryType,T.materialKey=o.materialKey,T.indexFrom=c+y+E,T.indexCount=x,Me(i,n+1,0,T),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let o=0;o<i;o++)if(this.symbolLevels[o].symbolLevel===e){s=this.symbolLevels[o];break}let r;s||(s=new we,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let o=0;o<n;o++)if(s.zLevels[o].zLevel===t){r=s.zLevels[o];break}return r||(r=new Le,r.geometryDPInfo=new Ie,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class Ce{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new Ce;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Ie{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Ie;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class Le{constructor(){this.geometryDPInfo=new Ie}clone(){const e=new Le;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class we{constructor(){this.zLevels=[]}clone(){const e=new we;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Ge{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class ue{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new ue(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Ge;for(const r in t){const n=t[r].stride,o=t[r].data;if(!o)continue;const c=[],y=(0,A.Y8)(n);for(let E=0;E<n*e.vertexCount/y;++E)c[E]=o[E+n*e.vertexFrom/y];i.vertexData.set(r,c)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Ge;for(const s in e){const i=e[s].stride,r=e[s].data,n=[],o=(0,A.Y8)(i);for(let c=0;c<i*this.vertexCount/o;++c)n[c]=r[c+i*this.vertexFrom/o];this.meshData.vertexData.set(s,n)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){if(this.meshData){for(const r in t){const n=t[r].stride,o=this.meshData.vertexData.get(r),c=t[r].data,y=(0,A.Y8)(n);for(let E=0;E<n*this.meshData.vertexCount/y;++E)c[E+n*e/y]=o[E]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new ue(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function je(a,e){if(null!==e){a.push(e.length);for(const t of e)t.serialize(a);return a}a.push(0)}class ce{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new ce(this.id);return e.set(this),e}clone(){const e=new ce(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),je(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new ce(t);return s.displayRecords=function He(a,e,t){const s=a.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(a,t);return i}(e,ue,{id:t})??[],s}}class Ee{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new Ue;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new Ee;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return je(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const n=ce.deserialize(e);s[r]=n,i.set(n.id,n)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new Ee;return t._deserializeObjects(e),t}}var Xe=v(37633);class pe{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,A.e2)(e.data,e.stride);return new pe(t,e.stride)}static fromVertexVector(e){const t=(0,A.e2)(e.data.buffer(),e.stride);return new pe(t,e.stride)}}class fe{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=pe.decode(e.namedBuffers[r]);return new fe(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,A.e2)(e.vertices,e.stride),n={geometry:new pe(i,e.stride)};return new fe(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=pe.fromVertexVector(e.namedVectors[r]);return new fe(t,s,i)}}var Se=v(75734);class Je{get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}constructor(e,t){this.data=e,this.stride=t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class $e{constructor(e,t,s){this.geometryType=e,this.indexVector=new Se.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,A.$_)(e,s);for(const r in i){const n=i[r];let o;switch(n%4){case 0:case 2:o=new Se.Z(Uint32Array,n*t);break;case 1:case 3:o=new Se.Z(Uint8Array,n*t)}this.namedVectors[r]=new Je(o,n)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const n=this.namedVectors[r];i[r]={},n.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=fe.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const Be=new he,me=new he;function qe(a,e){const t={};for(const s in a){const i={data:(0,A.C$)(e,a[s]),stride:a[s]};t[s]=i}return t}class se{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(Be.reset(),!this.tileDisplayData)return;const e=function tt(a){const e=[[],[],[],[],[]],t=a;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const n of e)for(const o of n)o&&Be.needMore(o.geometryType,o.meshData?o.meshData.vertexCount:o.vertexCount,o.meshData?o.meshData.indexData.length:o.indexCount);const t=e.length,s=new ee;for(let n=0;n<t;++n){s.geometries[n].indexBuffer=new Uint32Array(Math.round(1.5*Be.indicesFor(n)));const o=[],c=this.tileBufferData?.geometries[n].vertexBuffer;if(!c)continue;for(const T in c)o.push(c[T].stride);const y=se._computeVertexAlignment(o),E=Math.round(1.5*Be.verticesFor(n)),x=se._align(E,y);for(const T in c){const O=c[T].stride;s.geometries[n].vertexBuffer[T]={stride:O,data:(0,A.C$)(x,O)}}}me.reset(),this.tileDisplayData.displayList?.clear();for(let n=0;n<t;++n){const o=e[n];for(const c of o){if(c.meshData)c.writeMeshDataToBuffers(me.verticesFor(n),s.geometries[n].vertexBuffer,me.indicesFor(n),s.geometries[n].indexBuffer),c.meshData=null;else{const y=this.tileBufferData?.geometries[n];if(y){const E=y.vertexBuffer,x=y.indexBuffer,T=s.geometries[n].vertexBuffer,O=s.geometries[n].indexBuffer,L=me.verticesFor(n),j=me.indicesFor(n);(0,A.wO)(L,j,T,O,c,E,x),c.vertexFrom=L,c.indexFrom=j}}me.needMore(n,c.vertexCount,c.indexCount)}}const{displayList:i,displayObjects:r}=this.tileDisplayData;if(i)for(const n of r)i.addToList(n.displayRecords);this.tileBufferData=s}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let s=0;s<t.length;++s){const i=t[s];e[s]={};for(const r in i.vertexBuffer)e[s][r]=i.vertexBuffer[r].stride}return e}clone(){const e=new se;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4);let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new Se.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,A.Z_)(r=>{const n=e.data[r];if((0,p.pC)(n)){const o=Xe.$.from(n.records).getCursor();for(;o.next();){const c=o.id,y=o.materialKey,E=o.indexFrom,x=o.indexCount,T=o.vertexFrom,O=o.vertexCount,L=i.get(c),j=new ue(c,r,y);j.indexFrom=E,j.indexCount=x,j.vertexFrom=T,j.vertexCount=O,L.displayRecords.push(j)}s[r]=fe.fromVertexData(n,r)}else s[r]=new $e(r,0,_.mD.DEFAULT).intoBuffers()}),se.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new se,s=new Ee,i=new ee;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const n=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=n.indexBuffer,i.geometries[r].vertexBuffer=n.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new se;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new se;s.tileDisplayData=new Ee,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const y of e)for(const E of y.displayRecords)n[E.geometryType].push(E),i[E.geometryType]+=E.meshData.vertexCount,r[E.geometryType]+=E.meshData.indexData.length;const o=new ee,c=function et(a){return[a.fill||{},a.line||{},a.icon||{},a.text||{},a.label||{}]}(t);for(let y=0;y<5;y++){const E=new Uint32Array(r[y]),x=qe(c[y],i[y]);ue.writeAllMeshDataToBuffers(n[y],x,E),o.geometries[y]={indexBuffer:E,vertexBuffer:x}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var st=v(55130),it=v(246),rt=v(1825),nt=v(32940),Ae=v(49391),ot=v(36682),at=v(93872),be=v(82054),lt=v(25208),ht=v(64822);class Oe extends ht.i{static from(e,t,s){const i=lt.s.createInstance(),r=[],n=e.filter(o=>!!o.geometry);for(const o of n){const c=(0,b.Ji)(o.geometry);(0,be.E7)(r,[o],c,!1,!1,t)}return new Oe(i,r,s)}constructor(e,t,s){super(e,t,null),this._transform=s}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Oe(this.instance,this._features,this._transform);return this.copyInto(e),e}}var Fe=v(23841),dt=v(76279),ut=v(32442),ct=v(93555),pt=v(26933),ft=v(27105),_e=v(7848),ke=v(88071);const De=new ke.Z,ze=new ke.Z,Ve="esriGeometryPolyline";function We(a){a.coords.length=0,a.lengths.length=0}class ne{constructor(){this.bounds=(0,f.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===ne._pool.length?n=new ne:(n=ne._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,b.oU)(e.geometry)){const s=e.symbol;if((0,p.Wi)(s))return null;if(s?.layers.length>0&&s.layers.some(i=>"text"===i.type||"marker"===i.type)){const i=(0,ft.tO)(e.geometry);return null!==i?(0,_e.RF)(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry,n=(0,b.Ji)(r);if((0,p.Wi)(n))return null;switch(n){case"esriGeometryPolygon":{const o=r,{rings:c}=o;if(!c||0===c.length)return null;let y;if(y=(0,_e.ym)(e,1===c.length&&2===c[0].length?{paths:[[c[0][0],c[0][1]]]}:this.geometry),!y&&(y=(0,_e.ym)(e,{x:c[0][0][0],y:c[0][0][1]}),y)){const{x,y:T}=y;return{rings:[[[x-1,T],[1,-1],[1,1],[-1,1],[-1,-1]]]}}return y}case"esriGeometryPolyline":{const o=r;We(De),We(ze);const c=o.hasZ??!1,y=o.hasM??!1;return(0,be.u0)(De,o),(0,be.zj)(ze,De,c,y,Ve,e.scale[0]),(0,be.Nh)(De,ze,c,y,Ve,e),(0,be.J6)(De,o.hasZ??!1,o.hasM??!1)}case"esriGeometryMultipoint":{const o=r,c=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),y=(0,u.C5)(s);let E=o.points;if(y){const[x,T]=y.valid,O=T-x;E=E.filter(L=>{if(L[0]+c>T||L[0]-c<x){const j=[...L];return L[0]+c>T?j[0]-=O:j[0]+=O,(0,f.Zm)(t,L,c)||(0,f.Zm)(t,j,c)}return(0,f.Zm)(t,L,c)})}return 0===E.length?{points:E}:(0,_e.ym)(e,{points:E})}}return(0,_e.ym)(e,this.geometry)}}ne._pool=[],ne._set=new Set;var X=v(64596);const Re={minX:0,minY:0,maxX:0,maxY:0},ye=(0,f.Ue)();function Pe(a,e,t,s,i){return Re.minX=e,Re.minY=t,Re.maxX=s,Re.maxY=i,a.search(Re)}function mt(a){return{minX:a.bounds[0],minY:a.bounds[1],maxX:a.bounds[2],maxY:a.bounds[3]}}class _t{constructor(e,t,s,i,r,n,o){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,dt.r)(9,mt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new h.bP,this._tileInfoView=e,this._uidFieldName=s;const c=e.getClosestInfoForScale(t);c&&(this._resolution=this._tileInfoView.getTileResolution(c.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new pt.Tu(e)}hitTest(e,t,s,i,r){e=(0,ct.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;ye[0]=e-n,ye[1]=t-n,ye[2]=e+n,ye[3]=t+n;const o=.5*i*(s+X.y1),c=Pe(this._index,e-o,t-o,e+o,t+o);if(!c||0===c.length)return[];const y=[],E=(0,f.Ue)(),x=(0,f.Ue)();for(const L of c){const{geometry:j,symbolResource:q}=L;this._getSymbolBounds(E,q,j,x,r),x[3]=x[2]=x[1]=x[0]=0,(0,f.kK)(E,ye)&&L.graphic?.visible&&y.push(L)}if(0===y.length)return[];const T=this._hittestDrawHelper,O=[];for(const L of y){const{geometry:j,symbolResource:q}=L,{hash:te,textInfo:le}=q,de=this._hashToCIM.get(te);de&&T.hitTest(ye,de.symbol,j,le,r,i)&&O.push(L)}return O.sort(yt),O.map(L=>L.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((x,T)=>x.zorder-T.zorder),i[0].insertAfter=-1;for(let x=1;x<i.length;x++)i[x].insertAfter=i[x-1].graphic.uid;i.sort((x,T)=>x.graphic.uid-T.graphic.uid),s.sort((x,T)=>x.uid-T.uid);let r,n=0,o=0;const c=t.resolution,y=[],E={originPosition:"upperLeft",scale:[c,c],translate:[t.bounds[0],t.bounds[3]]};for(const x of s){for(o=-2;n<i.length;)if(r=i[n],n++,x.uid===r.graphic.uid){o=r.insertAfter;break}if(!r?.geometry||-2===o)continue;const T=r.getGeometryQuantized(E,t.bounds,this._tileInfoView.spatialReference,c),O={...r.graphic.attributes};O[this._uidFieldName]=x.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),y.push({centroid:ne.getCentroidQuantized(r,E),geometry:T,attributes:O,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return y.sort((x,T)=>x.zorder-T.zorder),y}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,s){if(!e||(0,p.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=ne.acquire(e,t,s,(0,p.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,f.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,p.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const n=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,p.pC)(n)&&(r.bounds=n,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:c,resolution:y}=r;let E,x,T,O;s.sort((L,j)=>L.zorder-j.zorder);for(let L=0;L<s.length;L++){T=s[L],E=T.graphic,x=T.getGeometryQuantized(i,c,o,y),O=0===L?-1:s[L-1].graphic.uid;const j={...T.graphic.attributes};j[n]=E.uid,null==T.groupId&&(T.groupId=t.createTemplateGroup(T.symbol,null)),e.push({centroid:ne.getCentroidQuantized(T,i),geometry:x,attributes:j,symbol:T.symbol,groupId:T.groupId,insertAfter:O,zorder:T.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds,i=(0,u.C5)(t);if(i&&t.isWrappable){const[r,n]=i.valid,o=Math.abs(s[2]-n)<1e-5,c=Math.abs(s[0]-r)<1e-5;if((!o||!c)&&(o||c)){const y=e.resolution;let E;E=(0,f.Ue)(o?[r,s[1],r+y*X.y1,s[3]]:[n-y*X.y1,s[1],n,s[3]]);const x=Pe(this._index,s[0],s[1],s[2],s[3]),T=Pe(this._index,E[0],E[1],E[2],E[3]);return[...new Set([...x,...T])]}}return Pe(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,f.Ue)()),(0,ut.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:c,textInfo:y}=t,E=this._hashToCIM.get(c);if(!E)return null;i||(i=[0,0,0,0]);const x=this._inflatedSizeHelper.getSymbolInflateSize(i,E.symbol,this._cimResourceManager,r,y);i[0]=(0,Fe.F2)(x[0]),i[1]=(0,Fe.F2)(x[1]),i[2]=(0,Fe.F2)(x[2]),i[3]=(0,Fe.F2)(x[3])}const n=this._resolution,o=h.bP.safeSize(i);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const yt=(a,e)=>{const t=(0,X.eT)(a.graphic),s=(0,X.eT)(e.graphic);return t===s?e.zorder-a.zorder:t-s};var gt=v(11263),xt=v(76441),vt=v(31637),Tt=v(3250);const Ct=(0,Z.Z)("esri-2d-graphic-debug");function Ne(a,e,t){let s=t.get(a);return s||(s={tile:e,addedOrModified:[],removed:[]},t.set(a,s)),s}let ie=class extends((0,xt.I)((0,C.p)(W.Z))){constructor(a){super(a),this._storage=new at.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(a,e,t){if(a){const s=(0,Ae.q5)(a),i=(0,Ae.MD)({indexCount:0,fields:{}},"feature",a,s);this._matcher=(0,nt.fL)(i,e,null,t)}}_createDisplayId(a){let e=this._displayIds.get(a);return e||(e=this._storage.createDisplayId(),this._displayIds.set(a,e)),e}initialize(){this._attributeStore=new ot.Z({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,vt.hc)("2d"),()=>this.notifyChange("updating")),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const t=new rt.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new _t(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)},this._hashToCIM),this._meshFactory=new it.j(null,this.uid,t),this._templateStore=t,this.handles.add([(0,U.YP)(()=>this.renderer,i=>{this._createMatcher(i,t,this.container.stage.resourceManager);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{Ct&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",r=>this._graphicsChangeHandler(r)),"graphics");const i=this.container.stage.resourceManager;this._createMatcher(this.renderer,t,i),this._graphicStore.setResourceManager(i),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore.isUpdating()}hitTest(a){if(!this.view||!this.view.position)return[];const{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(a.x,a.y,2,e,t)}update(a){(0,D.k_)(this._controller.signal);const e=a.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(a){this.updateRequested&&(this.updateRequested=!1,this.update(a))}graphicUpdateHandler(a){const{graphic:e,property:t}=a;switch(t){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,e.visible),this._attributeStore.sendUpdates()}}setHighlight(a){const e=a.map(t=>this._displayIds.get(t)).filter(p.pC);this._attributeStore.setHighlight(a,e)}_getIntersectingTiles(a){const e=this._graphicStore.getBounds(a);if(!e||0===(0,f.bf)(e)||0===(0,f.Cb)(e))return[];const t=(0,X.Zu)(e,this.view.spatialReference);return(0,p.pC)(t)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(a){var e=this;return(0,I.Z)(function*(){(0,D.k_)(e._controller.signal);const t=a.tile,s=e._getGraphicsData(e._templateStore,t,a.addedOrModified),i=yield e._processGraphics(t,s);return(0,D.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:a.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(a,e){const t=this._tiles.get(a);t&&(this.container.onTileData(t,e),this.container.requestRender())}_graphicsChangeHandler(a){const e=this._pendingUpdate;for(const t of a.added)e.added.add(t);for(const t of a.moved)e.updated.add(t);for(const t of a.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const a={added:[],removed:[],updated:[]};if(!this.graphics)return a;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?a.added.push(t):e.updated.has(t)&&a.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&a.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),a}_updateGraphics(){var a=this;return(0,I.Z)(function*(){a._processing=!0;const{added:e,removed:t,updated:s}=a._getGraphicsToUpdate(),i=a._tilesToUpdate;let r;try{if(!a._graphicStoreUpdate){const x=a.view.state,{resolution:T}=x;a._graphicStore.updateLevel(T)}const n=[],o=new Array(e.length+t.length);for(let x=0;x<s.length;x++){const T=s[x],O=a._getIntersectingTiles(T);for(const L of O)r=L.id,Ne(r,L,i).removed.push(a._displayIds.get(T.uid));n.push(a._updateGraphic(T,null)),o[x]=T}const c=s.length;for(let x=0;x<e.length;x++){const T=e[x];o[c+x]=T,a._graphicsSet.add(T),n.push(a._addGraphic(T))}for(const x of t){a._abortProcessingGraphic(x.uid);const T=a._getIntersectingTiles(x);for(const O of T)r=O.id,Ne(r,O,i).removed.push(a._displayIds.get(x.uid));a._graphicsSet.delete(x),a._graphicStore.remove(x)}let y;a._flipUpdatingGraphics(),yield Promise.all(n);for(let x=0;x<o.length;x++){y=o[x];const T=a._getIntersectingTiles(y);for(const O of T)r=O.id,Ne(r,O,i).addedOrModified.push(y)}a._graphicStore.updateZ();const E=[];for(const[x,T]of i)E.push(a._updateTile(T));yield Promise.all(E)}catch(n){(0,D.D_)(n)}for(const n of t)try{const o=yield a._getSymbolForGraphic(n,null);if(o){const c=o.hash();a._hashToExpandedSymbol.delete(c)}}catch(o){(0,D.D_)(o)}i.clear(),a.notifyChange("updating"),a._processing=!1,a._needsProcessing&&(a._needsProcessing=!1,a._updateGraphics())})()}_getArcadeInfo(a){const e=(a.attributes?Object.keys(a.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof a.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,p.Wi)(a.geometry)?null:{geometryType:(0,b.Ji)(a.geometry),spatialReference:B.Z.fromJSON(a.geometry.spatialReference),fields:e}}_getSymbolForGraphic(a,e){return(0,D.k_)(this._controller.signal),(0,p.pC)(a.symbol)?Promise.resolve(a.symbol):(0,p.pC)(this.renderer)?this.renderer.getSymbolAsync(a,{scale:this.view.scale,signal:(0,p.pC)(e)?e.signal:null}):Promise.resolve(this._getNullSymbol(a))}_getCIMSymbol(a,e,t){let s=this._hashToCIM.get(e);if(s)return Promise.resolve(s);const i=(0,h.rW)(a);if((0,p.pC)(i)){if("CIMSymbolReference"===i.type)return s=i,this._hashToCIM.set(e,s),Promise.resolve(s);let r=this._hashToCIMSymbolPromise.get(e);return r||(r=i.fetchCIMSymbol(t).then(n=>(this._hashToCIM.set(e,n.data),this._hashToCIMSymbolPromise.delete(e),n)).catch(n=>(this._hashToCIMSymbolPromise.delete(e),(0,D.r9)(n),null)),this._hashToCIMSymbolPromise.set(e,r),r)}return Promise.resolve(null)}_expandCIMSymbol(a,e,t,s){const i=this._hashToExpandedSymbol.get(t);if(i)return Promise.resolve(i);let r=this._hashToExpandedSymbolPromise.get(t);if(r)return r;const n=this.container.stage,o=this._getArcadeInfo(e),c=(0,Ae.q5)(null),y=(0,Tt.createSymbolSchema)(a,c);return r=(0,gt.B)(y,o,n.resourceManager,s),this._hashToExpandedSymbolPromise.set(t,r),r.then(E=>(this._hashToExpandedSymbol.set(t,E),this._hashToExpandedSymbolPromise.delete(t),E)),r}_getSymbolResources(a,e){var t=this;return(0,I.Z)(function*(){return(0,D.k_)(t._controller.signal),t.container.stage?t._getSymbolForGraphic(a,e).then(s=>{if(!s)return null;const i=s.hash();return t._getCIMSymbol(s,i,e).then(r=>(0,p.Wi)(r)?null:t._expandCIMSymbol(r,a,i,e).then(n=>{const o=n.layers.filter(c=>"text"===c.type&&"string"==typeof c.text);if(o&&o.length>0){const c=new Array(o.length);for(let E=0;E<o.length;E++){const x=o[E],T=[],[O]=(0,Y.E)(x.text);x.text=O;for(let L=0;L<O.length;L++)T.push(O.charCodeAt(L));c[E]={symbol:x,id:E,glyphIds:T}}const y=new Map;return t.container.getMaterialItems(c).then(E=>{(0,p.O3)(E);for(let x=0;x<o.length;x++){const T=o[x];y.set(T.cim,{text:T.text,mosaicItem:E[x].mosaicItem})}return{symbol:n,textInfo:y,hash:i}})}return{symbol:n,hash:i}}))}).catch(s=>((0,D.r9)(s),null)):null})()}_projectAndNormalizeGeometry(a,e){var t=this;return(0,I.Z)(function*(){if((0,D.k_)(t._controller.signal),(0,p.Wi)(a.geometry)||"mesh"===a.geometry.type)return null;let s=a.geometry;if((0,b.oU)(s))s.rings=s.rings;else if((0,b.l9)(s))s.paths=s.paths;else if((0,b.YX)(s)){const n=yield t._getSymbolForGraphic(a,e);(0,D.k_)(t._controller.signal),s=n&&((0,X.yA)(n.type)||(0,X.ab)(n.type))?s.center:(0,X.XA)(s)}yield(0,m._W)(s.spatialReference,t.view.spatialReference);const i=(0,F.SR)(s),r=(0,m.iV)(i,s.spatialReference,t.view.spatialReference);return r&&(0,R.pW)(r),r})()}_onTileUpdate(a){const e=(0,u.C5)(this.view.spatialReference);if(a.added&&a.added.length>0)for(const t of a.added)this._addNewTile(t,e);if(a.removed&&a.removed.length>0)for(const t of a.removed)this._removeTile(t.key)}_addGraphic(a){var e=this;return(0,I.Z)(function*(){e._abortProcessingGraphic(a.uid),(0,D.k_)(e._controller.signal);const t=new AbortController;e._graphicIdToAbortController.set(a.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(a,s),(0,D.k_)(e._controller.signal),e._graphicIdToAbortController.delete(a.uid)}catch(i){if(e._graphicIdToAbortController.delete(a.uid),!(0,D.D_)(i))throw i}})()}_updateGraphic(a,e){(0,D.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(a,e),s=this._getSymbolResources(a,e);return Promise.all([t,s]).then(([i,r])=>{(0,D.k_)(this._controller.signal),this._graphicStore.addOrModify(a,r,i)})}_addOrUpdateGraphic(a,e){(0,D.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(a,e),s=this._getSymbolResources(a,e);return Promise.all([t,s]).then(([i,r])=>{(0,D.k_)(this._controller.signal),this._graphicsSet.has(a)&&this._graphicStore.addOrModify(a,r,i)})}_addTile(a){const e=this.view.featuresTilingScheme.getTileBounds((0,f.Ue)(),a),t=this.view.featuresTilingScheme.getTileResolution(a.level),s=new Te(a,t,e[0],e[3]);return this._tiles.set(a,s),this.container.addChild(s),s}_addNewTile(a,e){var t=this;return(0,I.Z)(function*(){const s=t._addTile(a.key),i=t._graphicStore.queryTileData(t._templateStore,a);if(0===i.length)return;if(e){const n=Math.round((e.valid[1]-e.valid[0])/a.resolution);for(const o of i)o.geometry&&((0,b.wp)(o.geometry)||(0,b.aW)(o.geometry))&&t._wrapPoints(o,n)}const r=a.key;t._tileUpdateSet.add(a.key),t.notifyChange("updating");try{const n={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(a,i),remove:[],end:!0,sort:!1};s.patch(n),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(n){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,D.D_)(n))throw n}})()}_removeTile(a){if(!this._tiles.has(a))return;const e=this._tiles.get(a);this.container.removeChild(e),e.destroy(),this._tiles.delete(a)}_setFilterState(a,e){const t=this._displayIds.get(a),s=this._attributeStore.getHighlightFlag(a);this._attributeStore.setData(t,0,0,s|(e?d.Zd:0))}_getGraphicsData(a,e,t){const i=(0,u.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(a,e,t);if(i){const n=Math.round((i.valid[1]-i.valid[0])/e.resolution);for(const o of r)o.geometry&&((0,b.wp)(o.geometry)||(0,b.aW)(o.geometry))&&this._wrapPoints(o,n)}return r}_wrapPoints(a,e){const t=a.geometry;(0,b.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(a,e)}_wrapMultipoint(a,e){const t=a.points,s=[];let i=0,r=0;for(const[n,o]of t){if(s.push([n+i,o]),i=0,e===X.I_){const c=5*X.y1;n+r<c?(s.push([e,0]),i=-e):n+r>X.I_-c&&(s.push([-e,0]),i=e)}else n+r<-X.y1?(s.push([e,0]),i=-e):n+r>X.I_+X.y1&&(s.push([-e,0]),i=e);r+=n}a.points=s}_wrapPoint(a,e){const t=a.geometry;if(e===X.I_){const s=5*X.y1;t.x<s?a.geometry={points:[[t.x,t.y],[e,0]]}:t.x>X.I_-s&&(a.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-X.y1?a.geometry={points:[[t.x,t.y],[e,0]]}:t.x>X.I_+X.y1&&(a.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(a,e,t){if(!e||!e.length||!this._meshFactory)return Promise.resolve(null);const s=Oe.from(e,this.uid,a.transform),i=this._meshFactory;return this._matcher.then(r=>i.analyzeGraphics(s,this.container.stage.resourceManager,r,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(a,s))))}_processAnalyzedGraphics(a,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),n=new st._(a.key.id,{features:s,records:s,metrics:0},_.mD.DEFAULT,!1,!1),o=[];for(;i.next();){const x=i.readGraphic();x.insertAfter=-1===x.insertAfter?-1:this._displayIds.get(x.insertAfter),x.displayId=this._displayIds.get(x.attributes[this.uid]);const T=new ce(x.displayId);T.insertAfter=x.insertAfter,o.push(T),t.writeGraphic(n,i,a.level,this.container.stage.resourceManager)}const y=n.serialize(a.tileInfoView.tileInfo.isWrappable);return 1!==y.length?new se:se.fromVertexData(y[0].message,o)}_abortProcessingGraphic(a){this._graphicIdToAbortController.get(a)?.abort()}_getNullSymbol(a){const e=a.geometry;return(0,b.l9)(e)?l.mW:(0,b.oU)(e)||(0,b.YX)(e)?l.kD:this.defaultPointSymbolEnabled?l.G:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,K._)([(0,M.Cb)({constructOnly:!0})],ie.prototype,"requestUpdateCallback",void 0),(0,K._)([(0,M.Cb)()],ie.prototype,"container",void 0),(0,K._)([(0,M.Cb)({constructOnly:!0})],ie.prototype,"graphics",void 0),(0,K._)([(0,M.Cb)()],ie.prototype,"updating",null),(0,K._)([(0,M.Cb)()],ie.prototype,"view",void 0),(0,K._)([(0,M.Cb)()],ie.prototype,"updateRequested",void 0),(0,K._)([(0,M.Cb)()],ie.prototype,"defaultPointSymbolEnabled",void 0),ie=(0,K._)([(0,S.j)("esri.views.2d.layers.support.GraphicsView2D")],ie);const Et=ie},76441:(re,J,v)=>{v.d(J,{I:()=>p});var I=v(17626),K=v(61996),W=v(77712),Z=(v(90912),v(85931),v(76898));const p=D=>{let U=class extends((0,K.IG)(D)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,I._)([(0,W.Cb)()],U.prototype,"graphics",void 0),(0,I._)([(0,W.Cb)()],U.prototype,"renderer",void 0),(0,I._)([(0,W.Cb)()],U.prototype,"updating",void 0),(0,I._)([(0,W.Cb)()],U.prototype,"view",void 0),U=(0,I._)([(0,Z.j)("esri.views.layers.GraphicsView")],U),U}}}]);