"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[5810],{75810:(R,c,e)=>{e.r(c),e.d(c,{default:()=>j});var _=e(15861),a=e(17626),y=e(84792),E=e(26584),u=e(62208),O=e(99959),p=e(10699),D=e(21726),l=e(77712),h=(e(8314),e(63290),e(4619),e(68653)),M=e(76898),P=e(79334),T=e(44917),C=e(5143),m=e(65088),I=e(49286),g=e(6647),L=e(13812),U=e(91314),S=e(36596);let s=class extends((0,C.Z)((0,m.Y)((0,I.q)((0,g.I)((0,O.R)(T.Z)))))){constructor(...r){super(...r),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,S.w)()}normalizeCtorArgs(r,t){return"string"==typeof r?{url:r,...t}:r}destroy(){this._lercDecoder=(0,u.RY)(this._lercDecoder)}readCapabilities(r,t){const i=t.capabilities&&t.capabilities.split(",").map(o=>o.toLowerCase().trim());return i?{operations:{supportsTileMap:i.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(r,t){let i=t.currentVersion;return i||(i=9.3),i}load(r){const t=null!=r?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:i=>{if(i.typeKeywords)for(let o=0;o<i.typeKeywords.length;o++)if("elevation 3d layer"===i.typeKeywords[o].toLowerCase())return!0;throw new E.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(p.r9).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(r,t,i,o){const n=null!=(o=o||{signal:null}).signal?o.signal:o.signal=(new AbortController).signal,A={responseType:"array-buffer",signal:n},f={noDataValue:o.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,t,i,o)).then(()=>(0,y.Z)(this.getTileUrl(r,t,i),A)).then(d=>this._lercDecoder.decode(d.data,f,n)).then(d=>new U.v(d))}getTileUrl(r,t,i){const n=(0,D.B7)({...this.parsedUrl.query,blankTile:!(!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile)&&null});return`${this.parsedUrl.path}/tile/${r}/${t}/${i}${n?"?"+n:""}`}queryElevation(r,t){var i=this;return(0,_.Z)(function*(){const{ElevationQuery:o}=yield e.e(2493).then(e.bind(e,42493));return(0,p.k_)(t),(new o).query(i,r,t)})()}createElevationSampler(r,t){var i=this;return(0,_.Z)(function*(){const{ElevationQuery:o}=yield e.e(2493).then(e.bind(e,42493));return(0,p.k_)(t),(new o).createSampler(i,r,t)})()}_fetchTileAvailability(r,t,i,o){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,t,i,o):Promise.resolve("unknown")}_fetchImageService(r){var t=this;return(0,_.Z)(function*(){if(t.sourceJSON)return t.sourceJSON;const i={query:{f:"json",...t.parsedUrl.query},responseType:"json",signal:r},o=yield(0,y.Z)(t.parsedUrl.path,i);o.ssl&&(t.url=t.url?.replace(/^http:/i,"https:")),t.sourceJSON=o.data,t.read(o.data,{origin:"service",url:t.parsedUrl})})()}get hasOverriddenFetchTile(){return!this.fetchTile[v]}};(0,a._)([(0,l.Cb)({readOnly:!0})],s.prototype,"capabilities",void 0),(0,a._)([(0,h.r)("service","capabilities",["capabilities"])],s.prototype,"readCapabilities",null),(0,a._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),(0,a._)([(0,l.Cb)({readOnly:!0,type:P.Z})],s.prototype,"heightModelInfo",void 0),(0,a._)([(0,l.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),(0,a._)([(0,l.Cb)({type:["show","hide"]})],s.prototype,"listMode",void 0),(0,a._)([(0,l.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],s.prototype,"minScale",void 0),(0,a._)([(0,l.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],s.prototype,"maxScale",void 0),(0,a._)([(0,l.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],s.prototype,"opacity",void 0),(0,a._)([(0,l.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],s.prototype,"operationalLayerType",void 0),(0,a._)([(0,l.Cb)()],s.prototype,"sourceJSON",void 0),(0,a._)([(0,l.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],s.prototype,"type",void 0),(0,a._)([(0,l.Cb)(L.HQ)],s.prototype,"url",void 0),(0,a._)([(0,l.Cb)()],s.prototype,"version",void 0),(0,a._)([(0,h.r)("version",["currentVersion"])],s.prototype,"readVersion",null),s=(0,a._)([(0,M.j)("esri.layers.ElevationLayer")],s);const v=Symbol("default-fetch-tile");s.prototype.fetchTile[v]=!0;const j=s}}]);