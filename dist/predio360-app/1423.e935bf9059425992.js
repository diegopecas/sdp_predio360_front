"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[1423],{47444:(ae,ht,g)=>{g.d(ht,{Ue:()=>zr,G8:()=>fn});var Z=g(78260),st=g(26584),H=g(58817),l=g(17626),p=g(77712),x=(g(8314),g(63290),g(4619),g(76898)),D=g(67313),ut=g(86810);let S=class extends ut.wq{constructor(){super(...arguments),this.raster=void 0}};(0,l._)([(0,p.Cb)({json:{write:!0}})],S.prototype,"raster",void 0),S=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],S);const G=S;var pt;let it=pt=class extends G{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new pt({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],it.prototype,"operation",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],it.prototype,"raster2",void 0),(0,l._)([(0,p.Cb)({readOnly:!0})],it.prototype,"rasters",null),it=pt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],it);const Ot=it;var Ut=g(66656),f=g(25688),Gt=g(84727);const y=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let C=class extends ut.wq{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const r=[];for(let u=0;u<n.length;u++){const{parameters:c}=n[u],m=c.rasters||c.raster&&[c.raster];m?.length&&r.push(...m)}n=r}for(let r=e.length-1;r>=0;r--)e[r].isNoopProcess&&e.splice(r,1);let o=!1;for(let r=0;r<e.length;r++){const u=e[r];u.id=e.length-r-1;const{rasters:c}=u.parameters;o=o||null!=c&&c.length>1}const a=e.some(({name:r})=>y.has(r.toLowerCase())),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:o,hasFocalFunction:a,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let a=0;a<n.length;a++){const i=n[a];if(null!=i&&this._isRasterFunctionValue(i)){const r=i.bind(t,e,this.id+a);if(!r.success)return this._bindingResult=r,r;o=o&&r.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const o=t.map(i=>i.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((i,r)=>i!==r);const a=t.filter(i=>"ExtractBand"===i.functionName);return a.length&&a.forEach((i,r)=>{i.isInputBandIdsSwizzled=!0,i.swizzledBandSelection=[r,r,r]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let a=0;a<o;a++)e.push(a)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some((o,a)=>o!==a),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():"number"==typeof n?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>null!=n)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const o=n.getClippingGeometries();t.push(...o)}});else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const o=e.map(i=>i&&"object"==typeof i&&"bind"in i&&i.rasterInfo?i.rasterInfo:"string"==typeof i&&n.includes(i)?s[n.indexOf(i)]:"number"!=typeof i?s[0]:void 0),a=o.find(i=>i)??s[0];return o.forEach((i,r)=>{void 0===i&&(o[r]=a)}),o}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const o=t.sourceRasters[n];if("number"!=typeof o)if("bind"in o)this._getPrimaryRasters(o,e,s);else{const a=o,i=this._getPrimaryRasterId(a);if(null==i)continue;s.includes(i)||(this.mainPrimaryRasterId===i?(e.unshift(a),s.unshift(i)):(e.push(a),s.push(i)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const n=s[0];return null==n?null:n.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const n=s[0];if(null==n)return null;const{width:o,height:a,pixelType:i}=n,r=new Float32Array(o*a);r.fill(t);const c=new Array(this.sourceRasterInfos[0].bandCount).fill(r);return new f.Z({width:o,height:a,pixelType:i,pixels:c})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:o}=t,a=s.BandProperties;a&&a.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),o&&o.length!==e&&(t.histograms=o.length>e?o.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}}),(0,Ut.p)(t=>t?.toLowerCase())],C.prototype,"outputPixelType",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"mainPrimaryRasterId",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"sourceRasters",void 0),(0,l._)([(0,p.Cb)({type:[Gt.Z],json:{write:!0}})],C.prototype,"sourceRasterInfos",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"rasterInfo",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"readingBufferSize",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],C.prototype,"id",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"isNoopProcess",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"supportsGPU",null),(0,l._)([(0,p.Cb)()],C.prototype,"rawInputBandIds",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"rawSourceRasterInfos",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"isInputBandIdsSwizzled",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"swizzledBandSelection",void 0),(0,l._)([(0,p.Cb)()],C.prototype,"isBranch",void 0),(0,l._)([(0,p.Cb)({readOnly:!0})],C.prototype,"flatWebGLFunctionChain",null),(0,l._)([(0,p.Cb)()],C.prototype,"_bindingResult",void 0),C=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.BaseRasterFunction")],C);const I=C,B={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},tt={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},lt={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Le={setNull:50,conditional:78},Ve={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65,...tt,...lt,majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75,...Le},ze=new Map([[lt.acos,{domain:[0,Math.PI],isInteger:!1}],[lt.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[lt.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[lt.cos,{domain:[-1,1],isInteger:!1}],[lt.sin,{domain:[-1,1],isInteger:!1}],[tt.booleanAnd,{domain:[0,1],isInteger:!0}],[tt.booleanNot,{domain:[0,1],isInteger:!0}],[tt.booleanOr,{domain:[0,1],isInteger:!0}],[tt.booleanXOr,{domain:[0,1],isInteger:!0}],[tt.equalTo,{domain:[0,1],isInteger:!0}],[tt.notEqual,{domain:[0,1],isInteger:!0}],[tt.greaterThan,{domain:[0,1],isInteger:!0}],[tt.greaterThanEqual,{domain:[0,1],isInteger:!0}],[tt.lessThan,{domain:[0,1],isInteger:!0}],[tt.lessThanEqual,{domain:[0,1],isInteger:!0}],[tt.isNull,{domain:[0,1],isInteger:!0}]]);function We(t){return ze.get(t)}const Ze=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function wn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]+o[r]);return i}function Fn(t,e,s){const[n]=t,a=f.Z.createEmptyBand("f32",n.length);return a.set(n),a}function Tn(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]*n[i]);return a}function Pn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]-o[r]);return i}function In(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]*o[r]);return i}function Bn(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=Math.sign(n[i])*Math.floor(Math.abs(n[i])));return a}function He(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]/o[r]);return i}function Rn(t,e,s){return He(t,e,"f32")}function Nn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=Math.floor(n[r]/o[r]));return i}function Dn(t,e,s,n){const o=t[0],a=o.length,i=f.Z.createEmptyBand(s,a);if(n===lt.atanh){for(let u=0;u<a;u++)if(e[u]){const c=o[u];Math.abs(c)>=1?e[u]=0:i[u]=Math.atanh(c)}return i}const r=n===lt.asin?Math.asin:Math.acos;for(let u=0;u<a;u++)if(e[u]){const c=o[u];Math.abs(c)>1?e[u]=0:i[u]=r(c)}return i}function jn(t,e,s,n){const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n(o[r]));return i}function Sn(t,e,s,n){const[o,a]=t,i=o.length,r=f.Z.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(r[u]=n(o[u],a[u]));return r}function Mn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]&o[r]);return i}function kn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<<o[r]);return i}function En(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=~n[i]);return a}function On(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]|o[r]);return i}function Un(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>>o[r]);return i}function Gn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]^o[r]);return i}function Ln(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]&&o[r]?1:0);return i}function Vn(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]?0:1);return a}function zn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]||o[r]?1:0);return i}function Wn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=(n[r]?1:0)^(o[r]?1:0));return i}function Zn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]===o[r]?1:0);return i}function de(t,e,s,n){const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a),r=n===Math.E;for(let u=0;u<a;u++)e&&!e[u]||(i[u]=r?Math.exp(o[u]):n**o[u]);return i}function Hn(t,e,s){return de(t,e,s,10)}function Kn(t,e,s){return de(t,e,s,2)}function Xn(t,e,s){return de(t,e,s,Math.E)}function fe(t,e,s,n){const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(o[r]<=0?e[r]=0:i[r]=n(o[r]));return i}function Jn(t,e,s){return fe(t,e,s,Math.log10)}function $n(t,e,s){return fe(t,e,s,Math.log2)}function Yn(t,e,s){return fe(t,e,s,Math.log)}function Qn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>o[r]?1:0);return i}function qn(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>=o[r]?1:0);return i}function ts(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<o[r]?1:0);return i}function es(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<=o[r]?1:0);return i}function ns(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);if(!e)return a;for(let i=0;i<o;i++)a[i]=e[i]?0:1;return a}function ss(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]%o[r]);return i}function rs(t,e,s){const[n]=t,o=n.length,a=f.Z.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=-n[i]);return a}function os(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]===o[r]?0:1);return i}function is(t,e,s){const[n,o]=t,a=n.length,i=f.Z.createEmptyBand(s,a),r=new Uint8Array(a);for(let u=0;u<a;u++)null!=e&&!e[u]||0!==n[u]||(i[u]=o[u],r[u]=255);return{band:i,mask:r}}function Ke(t,e,s){const[n,o,a]=t,i=n.length,r=f.Z.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(r[u]=n[u]?o[u]:a[u]);return r}function Xe(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r];for(let c=1;c<n;c++){const m=t[c][r];u<m&&(u=m)}i[r]=u}return i}function Je(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r];for(let c=1;c<n;c++){const m=t[c][r];u>m&&(u=m)}i[r]=u}return i}function $e(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r],c=u;for(let m=1;m<n;m++){const h=t[m][r];c<h?c=h:u>h&&(u=h)}i[r]=c-u}return i}function Ye(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=0;for(let c=0;c<n;c++)u+=t[c][r];i[r]=u/n}return i}function Qe(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r])for(let u=0;u<n;u++)i[r]+=t[u][r];return i}function qe(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){const u=new Float32Array(n);let c=0;for(let h=0;h<n;h++){const d=t[h];c+=d[r],u[h]=d[r]}c/=n;let m=0;for(let h=0;h<n;h++)m+=(u[h]-c)**2;i[r]=Math.sqrt(m/n)}return i}function tn(t,e,s){const n=t.length;if(n<2)return t[0];const o=Math.floor(n/2),[a]=t,i=a.length,r=f.Z.createEmptyBand(s,i),u=new Float32Array(n),c=n%2==1;for(let m=0;m<i;m++)if(!e||e[m]){for(let h=0;h<n;h++)u[h]=t[h][m];u.sort(),r[m]=c?u[o]:(u[o]+u[o-1])/2}return r}function en(t,e,s){const[n,o]=t;if(null==o)return n;const a=n.length,i=f.Z.createEmptyBand(s,a);for(let r=0;r<a;r++)e[r]&&(n[r]===o[r]?i[r]=n[r]:e[r]=0);return i}function nn(t,e,s){const n=t.length;if(n<=2)return en(t,e,s);const o=t[0].length,a=f.Z.createEmptyBand(s,o),i=new Map;for(let r=0;r<o;r++)if(!e||e[r]){let u;i.clear();for(let h=0;h<n;h++)u=t[h][r],i.set(u,i.has(u)?i.get(u)+1:1);let c=0,m=0;for(const h of i.keys())c=i.get(h),c>m&&(m=c,u=h);a[r]=u}return a}function sn(t,e,s){const n=t.length;if(n<=2)return en(t,e,s);const o=t[0].length,a=f.Z.createEmptyBand(s,o),i=new Map;for(let r=0;r<o;r++)if(!e||e[r]){let u;i.clear();for(let h=0;h<n;h++)u=t[h][r],i.set(u,i.has(u)?i.get(u)+1:1);let c=0,m=t.length;for(const h of i.keys())c=i.get(h),c<m&&(m=c,u=h);a[r]=u}return a}function rn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=f.Z.createEmptyBand(s,a),r=new Set;for(let u=0;u<a;u++)if(!e||e[u]){let c;r.clear();for(let m=0;m<n;m++)c=t[m][u],r.add(c);i[u]=r.size}return i}const $=new Map,le=new Map,N=new Map,L=new Map;function us(t,e,s,n){let[o,a]=(0,D.rL)(s);const i=(0,D.DV)(s);i&&(o-=1e-5,a+=1e-5);for(let r=0;r<e.length;r++)if(e[r]){const u=t[r];isNaN(u)||u<o||u>a?e[r]=0:n[r]=i?Math.round(u):u}}function on(t,e,s={}){!function as(){$.size||($.set(4,Math.sqrt),$.set(6,Math.acos),$.set(7,Math.asin),$.set(8,Math.atan),$.set(9,Math.atanh),$.set(10,Math.abs),$.set(21,Math.cos),$.set(22,Math.cosh),$.set(48,Math.floor),$.set(49,Math.ceil),$.set(51,Math.sin),$.set(52,Math.sinh),$.set(56,Math.tan),$.set(57,Math.tanh),$.set(59,Math.acosh),$.set(60,Math.asinh),$.set(65,Math.floor),le.set(5,Math.pow),le.set(61,Math.atan2),N.set(1,wn),N.set(2,Pn),N.set(3,In),N.set(11,Mn),N.set(12,kn),N.set(13,En),N.set(14,On),N.set(15,Un),N.set(16,Gn),N.set(17,Ln),N.set(18,Vn),N.set(19,zn),N.set(20,Wn),N.set(23,He),N.set(24,Zn),N.set(25,Xn),N.set(26,Hn),N.set(27,Kn),N.set(28,Qn),N.set(29,qn),N.set(30,Bn),N.set(31,ns),N.set(32,Fn),N.set(33,ts),N.set(34,es),N.set(35,Yn),N.set(36,Jn),N.set(37,$n),N.set(44,ss),N.set(45,rs),N.set(46,os),N.set(53,Tn),N.set(64,Rn),N.set(65,Nn),N.set(76,Ke),N.set(78,Ke),L.set(38,nn),L.set(39,Xe),L.set(40,Ye),L.set(41,tn),L.set(42,Je),L.set(43,sn),L.set(47,$e),L.set(54,qe),L.set(55,Qe),L.set(58,rn),L.set(66,nn),L.set(67,Xe),L.set(68,Ye),L.set(69,tn),L.set(70,Je),L.set(71,sn),L.set(72,$e),L.set(73,qe),L.set(74,Qe),L.set(75,rn))}();let n=function Cn(t,e=!1){const s=t.map(r=>r.mask),n=s.filter(r=>null!=r);if(0===n.length||e&&n.length!==s.length)return new Uint8Array(t[0].pixels[0].length).fill(255);const i=new Uint8Array(n[0]);if(1===n.length)return i;if(!e){for(let r=1;r<n.length;r++){const u=n[r];for(let c=0;c<i.length;c++)i[c]&&(i[c]=u[c]?255:0)}return i}for(let r=1;r<n.length;r++){const u=n[r];for(let c=0;c<i.length;c++)0===i[c]&&(i[c]=u[c]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:o="f32"}=s,a=!L.has(e)||s.processAsMultiband,i=a?t[0].pixels.length:1,r=[];for(let c=0;c<i;c++){const m=L.has(e)&&!a?t.flatMap(_=>_.pixels):t.map(_=>_.pixels[c]);let h,d=!0;if(e===Le.setNull){const _=is(m,n,o);h=_.band,n=_.mask,d=!1}else N.has(e)?h=N.get(e)(m,n,"f64"):$.has(e)?h=e===lt.asin||e===lt.acos||e===lt.atanh?Dn(m,n,"f64",e):jn(m,n,"f64",$.get(e)):le.has(e)?h=Sn(m,n,"f64",le.get(e)):L.has(e)?h=L.get(e)(m,n,"f64"):(h=m[0],d=!1);if(d&&e!==tt.isNull&&!ze.has(e)){const _=f.Z.createEmptyBand(o,h.length);n||(n=new Uint8Array(h.length).fill(255)),us(h,n,o,_),h=_}r.push(h)}const u=t[0];return new f.Z({width:u.width,height:u.height,pixelType:o,mask:e===tt.isNull?null:n,pixels:r})}let Vt=class extends I{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function ls(t,e,s){return on(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,o]=(0,D.rL)(s);const a=(0,D.DV)(s);return a&&(n-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[n,o],isOutputRounded:a}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Vt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Ot,json:{write:!0,name:"rasterFunctionArguments"}})],Vt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Vt.prototype,"rasterArgumentNames",void 0),Vt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ArithmeticFunction")],Vt);const cs=Vt;var ge;let ye=ge=class extends G{clone(){return new ge({raster:this.raster})}};ye=ge=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],ye);const ps=ye;var zt=g(67845);let xt=class extends I{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,o=n?.[0];return(0,zt.M_)(e,{resolution:o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1})})}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:ps,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],xt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],xt.prototype,"isGCS",void 0),xt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.AspectFunction")],xt);const ms=xt;var Wt=g(55342),Zt=g(2076);const hs=new Set(["+","-","*","/","(",")"]);function an(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function fs(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let o,a,i;"number"==typeof s?(i=n,o=i.length,a=new Float32Array(o),a.fill(s)):(o=s.length,a=s,n.constructor===Number?(i=new Float32Array(o),i.fill(n)):i=n);const r=new Float32Array(o);switch(e){case"+":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]+i[u]);break;case"-":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]-i[u]);break;case"*":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]*i[u]);break;case"/":for(let u=0;u<o;u++)(null==t||t[u])&&i[u]&&(r[u]=a[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function gs(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let o=0;o<t.length;o++)if("("===t[o])s=o;else if(")"===t[o]){n=o;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function ys(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){s=i;break}const n=0===s?t:t.slice(e+1,s);let o=-1;for(let i=0;i<n.length;i++)if("*"===n[i]||"/"===n[i]){o=i;break}if(o>-1)s>0&&(o+=e+1);else{for(let i=0;i<n.length;i++)if("+"===n[i]||"-"===n[i]){o=i;break}s>0&&(o+=e+1)}let a=0;for(let i=0;i<o;i++)"("===t[i]&&a++;return{opIndex:o,numIndex:o-a}}var K=g(79751);const bs=new Zt.X({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function vs(t,e){if(!(0,K.nk)(t))return t;const{equation:s,method:n}=e,o=e.bandIndexes.map(m=>m-1),{pixels:a,mask:i}=t;let r;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=un(i,a[o[0]],a[o[1]]);break;case"ndwi":r=un(i,a[o[1]],a[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=function xs(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=s[a];r&&(o[a]=e[a]/r)}return[o]}(i,a[o[0]],a[o[1]]);break;case"ci-g":case"ci-re":r=function Cs(t,e,s){const n=e.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=s[a];r&&(o[a]=e[a]/r-1)}return[o]}(i,a[o[0]],a[o[1]]);break;case"savi":r=function ws(t,e,s,n){const o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(null==t||t[i]){const r=s[i],u=e[i],c=u+r+n;c&&(a[i]=(u-r)/c*(1+n))}return[a]}(i,a[o[0]],a[o[1]],o[2]+1);break;case"tsavi":r=function Fs(t,e,s,n,o,a){const i=s.length,r=new Float32Array(i),u=-o*n+a*(1+n*n);for(let c=0;c<i;c++)if(null==t||t[c]){const m=s[c],h=e[c],d=o*h+m+u;d&&(r[c]=n*(h-n*m-o)/d)}return[r]}(i,a[o[0]],a[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":r=function Ts(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=e[a],u=2*r+1;o[a]=.5*(u-Math.sqrt(u*u-8*(r-s[a])))}return[o]}(i,a[o[0]],a[o[1]]);break;case"gemi":r=function Ps(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const i=s[a],r=e[a];if(1!==i&&r+i+.5!==0){const u=(2*(r*r-i*i)+1.5*r+.5*i)/(r+i+.5);o[a]=u*(1-.25*u)-(i-.125)/(1-i)}}return[o]}(i,a[o[0]],a[o[1]]);break;case"pvi":r=function Is(t,e,s,n,o){const a=s.length,i=new Float32Array(a),r=1/Math.sqrt(1+n*n);for(let u=0;u<a;u++)(null==t||t[u])&&(i[u]=(e[u]-n*s[u]-o)*r);return[i]}(i,a[o[0]],a[o[1]],o[2]+1,o[3]+1);break;case"gvitm":r=function Bs(t,e){const[s,n,o,a,i,r]=e,u=s.length,c=new Float32Array(u);for(let m=0;m<u;m++)(null==t||t[m])&&(c[m]=-.2848*s[m]-.2435*n[m]-.5436*o[m]+.7243*a[m]+.084*i[m]-.18*r[m]);return[c]}(i,[a[o[0]],a[o[1]],a[o[2]],a[o[3]],a[o[4]],a[o[5]]]);break;case"sultan":r=function Rs(t,e){const[s,n,o,a,i]=e,r=s.length,u=new Float32Array(r),c=new Float32Array(r),m=new Float32Array(r);for(let h=0;h<r;h++)(null==t||t[h])&&(u[h]=i[h]?a[h]/i[h]*100:0,c[h]=s[h]?a[h]/s[h]*100:0,m[h]=o[h]?n[h]/o[h]*(a[h]/o[h])*100:0);return[u,c,m]}(i,[a[o[0]],a[o[1]],a[o[2]],a[o[3]],a[o[4]]]);break;case"vari":r=function Ns(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],c=n[r],m=c+u-o[r];m&&(i[r]=(c-u)/m)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"mtvi2":r=function Ds(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],c=n[r],m=o[r],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(c))-.5);h&&(i[r]=1.5*(1.2*(u-m)-2.5*(c-m))/h)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"rtvi-core":r=function js(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r];i[r]=100*(u-n[r])-10*(u-o[r])}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"evi":r=function Ss(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],c=n[r],m=u+6*c-7.5*o[r]+1;m&&(i[r]=2.5*(u-c)/m)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"wndwi":r=function Ms(t,e,s=.5){const[n,o,a]=e,i=o.length,r=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const c=n[u],m=o[u],h=a[u],d=c+s*m+(1-s)*h;d&&(r[u]=(c-s*m-(1-s)*h)/d)}return[r]}(i,[a[o[0]],a[o[1]],a[o[2]]],o[3]?o[3]+1:.5);break;case"bai":r=function ks(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a])for(a=0;a<n;a++){const i=(.1-e[a])**2+(.06-s[a])**2;i&&(o[a]=1/i)}return[o]}(i,a[o[0]],a[o[1]]);break;case"custom":r=function _s(t,e,s){let n,{ops:o,nums:a}=function ds(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],o=[];let a="";for(let i=0;i<s.length;i++){const r=s[i];hs.has(r)?(a.length&&o.push(an(a,e)),n.push(r),a=""):a=a.concat(r)}return a.length&&o.push(an(a,e)),{ops:n,nums:o}}(s,e);if(0===o.length){const i=1===a.length?a[0]:e[0];if(i instanceof Float32Array)return[i];const r=new Float32Array(e[0].length);return"number"==typeof i?r.fill(i):r.set(i),[r]}for(;o.length>0;){const{numIndex:i,opIndex:r}=ys(o);if(n=fs(t,o[r],a[i],a[i+1]),1===o.length)break;o=gs(o,r),a.splice(i,2,n)}return[n]}(i,a,s);break;default:return t}const u=null!=i?new Uint8Array(i.length):null;null!=i&&null!=u&&u.set(i);const c=new f.Z({width:t.width,height:t.height,pixelType:"f32",pixels:r,mask:u});return c.updateStatistics(),c}function Q(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function un(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const i=e[a],r=s[a],u=i+r;u&&(o[a]=(i-r)/u)}return[o]}var _e;let ne=_e=class extends G{constructor(){super(...arguments),this.method="custom"}clone(){return new _e({method:this.method,bandIndexes:this.bandIndexes,raster:(0,H.d9)(this.raster)})}};(0,l._)([(0,p.Cb)({json:{type:String,write:!0}})],ne.prototype,"bandIndexes",void 0),(0,l._)([(0,Wt.J)(bs)],ne.prototype,"method",void 0),ne=_e=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ne);const Es=ne,Os=new Set(["vari","mtvi2","rtvi-core","evi"]);let Ht=class extends I{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments;return vs(e,{method:s,bandIndexes:n.split(" ").map(a=>parseFloat(a)),equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1);2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const o=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Q([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=Q([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=Q([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=Q([e[0],e[1],0]),n="ci";break;case"savi":s=Q([e[0],e[1],0]),n="savi",o[0]=t[2]+1;break;case"tsavi":s=Q([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=Q([e[0],e[1],0]),n="msavi";break;case"gemi":s=Q([e[0],e[1],0]),n="gemi";break;case"pvi":s=Q([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=Q([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=Q([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=Q([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=Q([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=Q([e[0],e[1],0]),n="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=Q([e[1],e[0],0]),n="bai";break;default:s=Q([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:o}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1),s=t.length,n=e.map(i=>i>=s?s-1:i),o=Os.has(this.functionArguments.method)?3:2,a=n.slice(0,o).map(i=>t[i]);return 2===a.length&&a.push(0),a}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Ht.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Es,json:{write:!0,name:"rasterFunctionArguments"}})],Ht.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Ht.prototype,"rasterArgumentNames",void 0),Ht=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Ht);const Us=Ht;var be,Gs=g(29132),Ls=g(91179);const ln=new Zt.X({1:"outside",2:"inside"},{useNumericKeys:!0});let se=be=class extends G{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new be({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,l._)([(0,p.Cb)({types:Gs.qM,json:{read:Ls.im,write:!0}})],se.prototype,"clippingGeometry",void 0),(0,l._)([(0,p.Cb)({json:{read:ln.read,write:ln.write}})],se.prototype,"clippingType",void 0),se=be=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],se);const Vs=se;let Ct=class extends I{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Ct.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)()],Ct.prototype,"isNoopProcess",void 0),Ct=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ClipFunction")],Ct);const zs=Ct;var ve,ce=g(68653),ct=g(70208),cn=g(79023);let mt=ve=class extends G{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return ct.Oi.includes(e)?e:null}readColorRamp(t){return(0,cn.i)(t)}readColorRampName(t,e){if(!t)return null;const s=ct.H0.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return s?ct.H0.fromJSON(s):null}clone(){return new ve({colormap:(0,H.d9)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,l._)([(0,p.Cb)({type:[[Number]],json:{write:!0}})],mt.prototype,"colormap",void 0),(0,l._)([(0,p.Cb)({type:String,json:{write:!0}})],mt.prototype,"colormapName",void 0),(0,l._)([(0,Ut.p)("colormapName")],mt.prototype,"castColormapName",null),(0,l._)([(0,p.Cb)({types:cn.V,json:{write:!0}})],mt.prototype,"colorRamp",void 0),(0,l._)([(0,ce.r)("colorRamp")],mt.prototype,"readColorRamp",null),(0,l._)([(0,p.Cb)({type:ct.H0.apiValues,json:{type:ct.H0.jsonValues,write:ct.H0.write}})],mt.prototype,"colorRampName",void 0),(0,l._)([(0,ce.r)("colorRampName")],mt.prototype,"readColorRampName",null),mt=ve=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],mt);const Ws=mt,Zs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Hs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Ae(t,e){const s=[],n=[];for(let a=0;a<t.length-1;a++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[a].slice(1),toColor:t[a+1].slice(1)}),n.push(t[a+1][0]-t[a][0]);return(0,ct.XL)({type:"multipart",colorRamps:s},{numColors:t[t.length-1][0],weights:e=e??n})}let yt=class extends I{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:o}=this.functionArguments;if(!e?.length)if(n)e=(0,ct.Jw)(n,{interpolateAlpha:!0});else if(o){const r=(0,ct.B4)(o);r&&(e=(0,ct.Jw)(r))}else s&&(e=function Qs(t){let e;switch(t){case"elevation":e=function Ks(){return Ae([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}();break;case"gray":e=function Js(){return(0,ct.XL)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}();break;case"hillshade":e=function Ys(){return Ae([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}();break;case"ndvi":e=Zs;break;case"ndvi2":e=function Xs(){const t=Ae([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=Hs;break;case"random":e=function $s(){const t=[];for(let e=0;e<256;e++){const s=[];for(let n=0;n<3;n++)s.push(Math.round(255*Math.random()));t.push(s)}return t}()}return e?(e=e.map((s,n)=>[n,...s]),e):null}(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,D.DV)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Ws,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],yt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)()],yt.prototype,"isNoopProcess",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],yt.prototype,"indexedColormap",void 0),yt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ColormapFunction")],yt);const qs=yt;var xe,pe=g(99433);let re=xe=class extends G{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(s=>"number"==typeof s||"string"==typeof s?s:s.toJSON())}clone(){return new xe({rasters:(0,H.d9)(this.rasters)})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],re.prototype,"rasters",void 0),(0,l._)([(0,pe.c)("rasters")],re.prototype,"writeRasters",null),re=xe=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],re);const tr=re;let Kt=class extends I{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,a)=>o+a),t.every(({statistics:o})=>null!=o&&o.length)){const o=[];t.forEach(({statistics:a})=>null!=a&&o.push(...a)),s.statistics=o}if(t.every(({histograms:o})=>null!=o&&o.length)){const o=[];t.forEach(({histograms:a})=>null!=a&&o.push(...a)),s.histograms=o}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every(o=>o.keyProperties.BandProperties?.length)?t.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?null==e?.[0]?null:(0,K.Gd)(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Kt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:tr,json:{write:!0,name:"rasterFunctionArguments"}})],Kt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Kt.prototype,"rasterArgumentNames",void 0),Kt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.CompositeBandFunction")],Kt);const er=Kt;var Ce;let oe=Ce=class extends G{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ce({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],oe.prototype,"contrastOffset",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],oe.prototype,"brightnessOffset",void 0),oe=Ce=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],oe);const nr=oe;var wt=g(17057);let Ft=class extends I{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:o}=this.functionArguments;return this.lookup=(0,wt.gI)(n,o),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,K.XV)(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:nr,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Ft.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Ft.prototype,"lookup",void 0),Ft=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],Ft);const sr=Ft;function we(t,e,s,n,o){const a=Math.floor(n/2);for(let r=0;r<a;r++)for(let u=0;u<e;u++)t[r*e+u]=t[(o-1-r)*e+u],t[(s-1-r)*e+u]=t[(s-o+r)*e+u];const i=Math.floor(o/2);for(let r=0;r<s;r++){const u=r*e;for(let c=0;c<i;c++)t[u+c]=t[u+o-1-c],t[u+e-c-1]=t[u+e+c-o]}}const V=new Map;function pn(t,e,s,n,o,a,i){const r=new Float32Array(e*s),u=a.length,c=i?0:n,m=i?n:0,h=i?1:e;for(let d=c;d<s-c;d++){const _=d*e;for(let A=m;A<e-m;A++){if(o&&!o[_+A])continue;let v=0;for(let b=0;b<u;b++)v+=t[_+A+(b-n)*h]*a[b];r[_+A]=v}}return r}function or(t,e,s,n,o,a,i){const r=new Float32Array(e*s),u=Math.floor(n/2),c=Math.floor(o/2);for(let m=u;m<s-u;m++){const h=m*e;for(let d=c;d<e-c;d++){if(a&&!a[h+d])continue;let _=0;for(let A=0;A<n;A++)for(let v=0;v<o;v++)_+=t[h+d+(A-u)*e+v-c]*i[A*o+v];r[h+d]=_}}return r}var Fe;V.set(B.none,[0,0,0,0,1,0,0,0,0]),V.set(B.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),V.set(B.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),V.set(B.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),V.set(B.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),V.set(B.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),V.set(B.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),V.set(B.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),V.set(B.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),V.set(B.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),V.set(B.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),V.set(B.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),V.set(B.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),V.set(B.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),V.set(B.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),V.set(B.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),V.set(B.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),V.set(B.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),V.set(B.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),V.set(B.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),V.set(B.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),V.set(B.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),V.set(B.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Tt=Fe=class extends G{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=V.get(t);if(!e||t===B.userDefined||t===B.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Fe({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,H.d9)(this.raster)})}};(0,l._)([(0,p.Cb)({json:{type:Number,write:!0}})],Tt.prototype,"rows",void 0),(0,l._)([(0,p.Cb)({json:{type:Number,write:!0}})],Tt.prototype,"cols",void 0),(0,l._)([(0,p.Cb)({json:{name:"type",type:Number,write:!0}})],Tt.prototype,"convolutionType",null),(0,l._)([(0,p.Cb)({json:{type:[Number],write:!0}})],Tt.prototype,"kernel",void 0),Tt=Fe=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Tt);const lr=Tt;let Pt=class extends I{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((n,o)=>n+o);return-1===e||0===s||1===s?t:t.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(B).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==B.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const a=o.clone();return a.pixelType=this.outputPixelType,(-1===t||"u8"!==this.outputPixelType&&![B.none,B.sharpen,B.sharpen2,B.sharpening3x3,B.sharpening5x5].includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===B.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:o}=this;return function ur(t,e){const s=function rr(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let o=1;o<e;o++){let a=null;for(let i=0;i<e;i++){const r=t[i+o*e],u=t[i];if(null==a)if(0===u){if(r)return{separable:!1,row:null,col:null}}else a=r/u;else if(r/u!==a)return{separable:!1,row:null,col:null}}if(null==a)return{separable:!1,row:null,col:null};n.push(a)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,o=s.separable?function ar(t,e,s,n=!0){const{pixels:o,width:a,height:i,pixelType:r,mask:u}=t,c=o.length,m=[],h=e.length,d=s.length,_=Math.floor(h/2),A=Math.floor(d/2);for(let v=0;v<c;v++){let b=pn(o[v],a,i,_,u,e,!0);b=pn(b,a,i,A,u,s,!1),n&&we(b,a,i,h,d),m.push(b)}return new f.Z({width:a,height:i,pixelType:r,pixels:m,mask:u})}(t,s.row,s.col,n):function ir(t,e,s=!0){const{pixels:n,width:o,height:a,pixelType:i,mask:r}=t,u=n.length,c=[],{kernel:m,rows:h,cols:d}=e;for(let _=0;_<u;_++){const A=or(n[_],o,a,h,d,r,m);s&&we(A,o,a,h,d),c.push(A)}return new f.Z({width:o,height:a,pixelType:i,pixels:c,mask:r})}(t,e,n),{outputPixelType:a}=e;return a&&o.clamp(a),o}(e,{kernel:o,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:(0,D.rL)(this.outputPixelType)}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:lr,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Pt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)()],Pt.prototype,"_normalizedKernel",null),Pt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ConvolutionFunction")],Pt);const cr=Pt;var Te;const hn=new Zt.X({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Xt=Te=class extends G{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return hn.fromJSON(e.type??e.curvatureType??0)}clone(){return new Te({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,l._)([(0,p.Cb)({json:{write:{target:"type"}}}),(0,Wt.J)(hn)],Xt.prototype,"curvatureType",void 0),(0,l._)([(0,ce.r)("curvatureType",["type","curvatureType"])],Xt.prototype,"readCurvatureType",null),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],Xt.prototype,"zFactor",void 0),Xt=Te=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Xt);const pr=Xt;let It=class extends I{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:o,primaryPixelSizes:a}=t,i=a?.[0];return(0,zt.Ne)(e,{zFactor:this.isGCS&&s>=1?s*zt._p:s,curvatureType:n,resolution:i??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1})})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*zt._p:t}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],It.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:pr,json:{write:!0,name:"rasterFunctionArguments"}})],It.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],It.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],It.prototype,"isGCS",void 0),It=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.CurvatureFunction")],It);const mr=It;var Pe;let ft=Pe=class extends G{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=K.CD.bestMatch}clone(){return new Pe({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],ft.prototype,"bandIds",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],ft.prototype,"bandNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],ft.prototype,"bandWavelengths",void 0),(0,l._)([(0,Wt.J)({0:"name",1:"wavelength",2:"id"})],ft.prototype,"method",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],ft.prototype,"missingBandAction",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],ft.prototype,"wavelengthMatchTolerance",void 0),ft=Pe=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],ft);const hr=ft;let Jt=class extends I{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:o,bandWavelengths:a,bandIds:i,missingBandAction:r}=t,u=o?.length&&("name"===n||"id"!==n&&!i?.length),c=a?.length&&("wavelength"===n||"id"!==n&&!i?.length),m=r===K.CD.fail,h=u?this._matchBandNames(s,o):c?this._matchBandWavelengths(s,a,m):this._matchBandIds(s,i,m);if(null==h)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":c?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=h.length;const{statistics:_,histograms:A}=d;null!=_&&_.length&&(d.statistics=h.map(b=>_[b]||_[_.length-1])),null!=A&&A.length&&(d.histograms=h.map(b=>A[b]||A[A.length-1]));let v=d.keyProperties?.BandProperties;return v?.length&&(v=h.map(b=>b>=v.length?v[v.length-1]:v[b]),d.keyProperties={...d.keyProperties,BandProperties:v}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=s?s-1:o);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Q(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}_matchBandNames(t,e){const s=t.bandInfos.map(({name:o})=>o.toLowerCase()),n=[];for(let o=0;o<e.length;o++){const a=e[o].toLowerCase();let i=s.indexOf(a);if(-1===i&&"nearinfrared"===a&&(i=s.findIndex(r=>r.startsWith("nearinfrared_1")),-1===i&&(i=s.findIndex(r=>r.startsWith("nearinfrared")))),-1===i)return null;n.push(i)}return n}_matchBandIds(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some(o=>o<0||o>=n)?null:e}_matchBandWavelengths(t,e,s){const{bandInfos:n}=t,o=[];for(let r=0;r<n.length;r++){const{minWavelength:u,maxWavelength:c}=n[r];if(!u||!c)return null;o.push({minWavelength:u,maxWavelength:c})}const{wavelengthMatchTolerance:a}=this.functionArguments,i=[];for(let r=0;r<e.length;r++){const u=e[r];let c=!1,m=-1,h=Number.MAX_VALUE;for(let d=0;d<o.length;d++){const _=o[d],A=u>=_.minWavelength&&u<=_.maxWavelength,v=Math.abs(u-(_.minWavelength+_.maxWavelength)/2);A?v<h&&(c=!0,m=d,h=v):!c&&v<h&&(m=d,h=v)}if(!c&&a&&h<a&&(c=!0),!c&&s)return null;i.push(m)}return i}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Jt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:hr,json:{write:!0,name:"rasterFunctionArguments"}})],Jt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Jt.prototype,"rasterArgumentNames",void 0),Jt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.ExtractBandFunction")],Jt);const dr=Jt;var Ie;let me=Ie=class extends G{clone(){return new Ie({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,l._)([(0,p.Cb)({type:[Number],json:{write:!0}})],me.prototype,"conversionParameters",void 0),me=Ie=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],me);const gr=me;let Bt=class extends I{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,n)=>s+n);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function fr(t,e,s){const{pixels:n,width:o,height:a,mask:i,bandMasks:r}=t,u=o*a,c=r?.length?f.Z.combineBandMasks(r):i,m=Math.min(e.length,n.length),h=s.startsWith("f"),d=!h&&s!==t.pixelType,[_,A]=(0,D.rL)(s),v=f.Z.createEmptyBand(s,u);for(let F=0;F<a;F++){let w=F*o;for(let O=0;O<o;O++,w++)if(!c||c[w]){let k=0;for(let Y=0;Y<m;Y++)k+=e[Y]*n[Y][w];h||(k=Math.round(k),d&&(k=k>A?A:k<_?_:k)),v[w]=k}}const b=new f.Z({width:o,height:a,pixels:[v],pixelType:s,mask:c});return b.updateStatistics(),b}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:gr,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Bt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)()],Bt.prototype,"_normalizedWeights",null),Bt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.GrayscaleFunction")],Bt);const yr=Bt;var Be;let Rt=Be=class extends G{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(s=>"number"==typeof s||"string"==typeof s?s:s.toJSON())}clone(){return new Be({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,H.d9)(this.rasters)})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],Rt.prototype,"operation",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Rt.prototype,"rasters",void 0),(0,l._)([(0,pe.c)("rasters")],Rt.prototype,"writeRasters",null),(0,l._)([(0,p.Cb)({json:{write:!0}})],Rt.prototype,"processAsMultiband",void 0),Rt=Be=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Rt);const _r=Rt;let $t=class extends I{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(u=>u.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:a}=this.functionArguments,i=Ze[o];if(!(999===i||a.length===i||a.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const r=e.clone();return r.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(r),this._updateStatistics(r),this._updatePixelType(r),this.rasterInfo=r,{success:!0,supportsGPU:1===r.bandCount&&i<=3&&(o<11||o>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some(s=>null==s)?null:on(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Ze[t],s=Object.keys(Ve).find(r=>Ve[r]===t)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,a]=(0,D.rL)(n);const i=(0,D.DV)(n);return i&&(o-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[o,a],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=We(s)?.domain;if(n){t.statistics=[];for(let o=0;o<t.bandCount;o++)t.statistics[o]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map(o=>({min:-o.max,max:-o.min,avg:null!=o.avg?-o.avg:void 0,stddev:null!=o.stddev?-o.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:o,isInteger:a}=We(n)??{domain:null,isInteger:!1};let i="f32";if(o&&a)i=(0,D.JQ)(o[0],o[1]);else if(30===n){const r=e?.[0];i=r?(0,D.JQ)(r.min,r.max):(0,D.DV)(s)?s:"s32"}else if(45===n&&(0,D.DV)(s)){const r=e?.map(({max:h})=>-h),u=e?.map(({min:h})=>-h),c=r?.length?Math.min(...r):null,m=u?.length?Math.min(...u):null;i=null!=c&&null!=m?(0,D.JQ)(c,m):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],$t.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],$t.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],$t.prototype,"rasterArgumentNames",void 0),$t=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.LocalFunction")],$t);const br=$t;var Re,Yt=g(21286);let Nt=Re=class extends G{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=K.DX.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map(n=>{if("number"==typeof n)return e=!0,[n];if("string"==typeof n){const o=n.trim().split(" ").filter(a=>""!==a.trim()).map(a=>Number(a));return e=e||o.length>0,0===o.length?null:o}return null});return e?s:null}clone(){return new Re({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],Nt.prototype,"includedRanges",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Nt.prototype,"noDataValues",void 0),(0,l._)([(0,p.Cb)()],Nt.prototype,"normalizedNoDataValues",null),(0,l._)([(0,p.Cb)({json:{write:!0}})],Nt.prototype,"noDataInterpretation",void 0),Nt=Re=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Nt);const vr=Nt;let Dt=class extends I{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let i=0;i<t.bandCount;i++){const r=(0,K.nA)(e,s?.slice(2*i,2*i+2),n?.[i]);if(null==r){o=null;break}o.push(r)}this.lookups=o;const a=null!=n&&n.every(i=>i?.length===n[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*K.$f)&&(!n||a&&n[0].length<=K.$f)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:o,noDataInterpretation:a,normalizedNoDataValues:i}=this.functionArguments;return(0,K.sS)(e,{includedRanges:o,noDataValues:i,outputPixelType:s,matchAll:a===K.DX.matchAll,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(K.$f);s.fill(Yt.F3),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(K.$f);for(let o=0;o<n.length;o+=2)n[o]=t?.[o]??-Yt.F3,n[o+1]=t?.[o+1]??Yt.F3;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:vr,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Dt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Dt.prototype,"lookups",void 0),Dt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.MaskFunction")],Dt);const Ar=Dt;var Ne;let Qt=Ne=class extends G{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Ne({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],Qt.prototype,"visibleBandID",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Qt.prototype,"infraredBandID",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Qt.prototype,"scientificOutput",void 0),Qt=Ne=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Qt);const xr=Qt;let qt=class extends I{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],o=Math.max(e,s);if(n.bandCount<2||o>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=n.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[i,r,u,c]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:i,max:r,avg:u,stddev:c}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:o}=this.functionArguments;return function As(t,e,s,n){const{mask:o,pixels:a,width:i,height:r}=t,u=a[s],c=a[e],m=c.length,h=n?new Uint8Array(m):new Float32Array(m),d=n?100:1,_=n?100.5:0;for(let v=0;v<m;v++)if(null==o||o[v]){const b=u[v],F=c[v],w=b+F;w&&(h[v]=(b-F)/w*d+_)}const A=new f.Z({width:i,height:r,mask:o,pixelType:n?"u8":"f32",pixels:[h]});return A.updateStatistics(),A}(e,s,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:Q(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],qt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:xr,json:{write:!0,name:"rasterFunctionArguments"}})],qt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],qt.prototype,"rasterArgumentNames",void 0),qt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.NDVIFunction")],qt);const Cr=qt;var De;let _t=De=class extends G{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new De({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],_t.prototype,"inputRanges",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],_t.prototype,"outputValues",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],_t.prototype,"noDataRanges",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],_t.prototype,"allowUnmatched",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],_t.prototype,"isLastInputRangeInclusive",void 0),_t=De=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],_t);const wr=_t;let jt=class extends I{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:o,inputRanges:a,noDataRanges:i,isLastInputRangeInclusive:r}=this.functionArguments;if(null!=s&&s.length&&o?.length)if(n){const u=Math.min.apply(null,[...o,s[0].min]),c=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:u,max:c}]}else{let u=o[0],c=u;for(let m=0;m<o.length;m++)u=u>o[m]?o[m]:u,c=c>o[m]?c:o[m];t.statistics=[{...s[0],min:u,max:c}]}return this.rasterInfo=t,this.lookup=n?null:(0,K.oB)({srcPixelType:e,inputRanges:a,outputValues:o,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:r,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=K.$f)&&(!i||i.length<=K.$f)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const c=(0,K.XV)(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=c&&s.mask&&(c.mask=(0,K.wV)(e.pixels[0],e.mask,s.mask,s.offset,"u8")),c}const{inputRanges:o,outputValues:a,noDataRanges:i,allowUnmatched:r,isLastInputRangeInclusive:u}=this.functionArguments;return(0,K.a2)(e,{inputRanges:o,outputValues:a,noDataRanges:i,outputPixelType:n,allowUnmatched:r,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*K.$f),o=1e-5,a=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],r=i.length;for(let c=0;c<K.$f;c++)n[3*c]=a[2*c]??Yt.F3-1,n[3*c+1]=a[2*c+1]??Yt.F3,n[3*c+2]=i[c]??0,c<r&&(c>0&&(n[3*c]-=o),(c<r-1||!s)&&(n[3*c+1]-=o));const u=new Float32Array(2*K.$f);return u.fill(Yt.F3),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:(0,D.rL)(this.outputPixelType)}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:wr,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],jt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],jt.prototype,"lookup",void 0),jt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.RemapFunction")],jt);const Fr=jt;var je;const Tr=new Zt.X({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let bt=je=class extends G{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new je({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,l._)([(0,Wt.J)(Tr)],bt.prototype,"slopeType",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],bt.prototype,"zFactor",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{name:"psPower",write:!0}})],bt.prototype,"pixelSizePower",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{name:"psZFactor",write:!0}})],bt.prototype,"pixelSizeFactor",void 0),(0,l._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"removeEdgeEffect",void 0),bt=je=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],bt);const Pr=bt;let St=class extends I{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:a}=this.functionArguments,{isGCS:i}=this,{extent:r,primaryPixelSizes:u}=t,c=u?.[0];return(0,zt.yg)(e,{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:a,isGCS:i,resolution:c??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1})})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*zt._p:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Pr,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],St.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],St.prototype,"isGCS",void 0),St=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.SlopeFunction")],St);const Ir=St,dn=new Zt.X({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Br(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{statisticsType:u,kernelRows:c,kernelCols:m}=e,h="stddev"===u,d=o*a,_=new Float64Array(d),A=new Float64Array(d),v=new Uint32Array(d);for(let M=0;M<a;M++){const j=M*o;let E=0,U=0,z=0;for(let W=0;W<m;W++)i&&!i[j+W]||(E+=n[j+W],h&&(U+=n[j+W]**2),z++);_[j]=E,A[j]=U,v[j]=z;for(let W=1;W<=o-m;W++){const at=j+W-1,ie=at+m;i?(i[at]&&(z--,E-=n[at],h&&(U-=n[at]**2)),i[ie]&&(z++,E+=n[ie],h&&(U+=n[ie]**2))):(E-=n[at],E+=n[ie],h&&(U-=n[at]**2,U+=n[ie]**2)),_[j+W]=E,v[j+W]=z,h&&(A[j+W]=U)}}const b=new Float64Array(d),F=new Float64Array(d),w=new Uint32Array(d),O=c*o;for(let M=0;M<=o-m;M++){let j=0,E=0,U=0;for(let z=0;z<c;z++){const W=z*o+M;j+=_[W],U+=v[W],h&&(E+=A[W])}b[M]=j,F[M]=E,w[M]=U;for(let z=1;z<=a-c;z++){const W=(z-1)*o+M,at=W+O;j-=_[W],j+=_[at],U-=v[W],U+=v[at],h&&(E-=A[W],E+=A[at]),b[z*o+M]=j,F[z*o+M]=E,w[z*o+M]=U}}const k=Math.floor(c/2),Y=Math.floor(m/2);for(let M=k;M<a-k;M++){const j=M*o;for(let E=Y;E<o-Y;E++){const U=(M-k)*o+E-Y,z=w[U];if(0===z||s&&(!i||i[j+E]))continue;const W=b[U]/z,at=h?Math.sqrt((F[U]-b[U]*W)/z):W;r[j+E]=at,i&&(i[j+E]=255)}}}function Rr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:c,statisticsType:m}=e,h=Math.floor(u/2),d=Math.floor(c/2),_="min"===m,A=r.slice(),v=new Uint32Array(o*a);for(let b=h;b<a-h;b++){const F=b*o;for(let w=d;w<o-d;w++){let O=_?Number.MAX_VALUE:-Number.MAX_VALUE,k=0;for(let Y=0;Y<u;Y++)for(let M=0;M<c;M++){const j=F+w+(Y-h)*o+M-d;i&&!i[j]||(O=_?Math.min(O,n[j]):Math.max(O,n[j]),k++)}i?(A[F+w]=0===k?0:O,v[F+w]=k):r[F+w]=0===k?0:O}}if(i)for(let b=h;b<a-h;b++){const F=b*o;for(let w=d;w<o-d;w++)if(v[F+w]){if(s&&i[F+w])continue;r[F+w]=A[F+w],i[F+w]=255}}}function Nr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:c}=e,m=Math.floor(u/2),h=Math.floor(c/2),d=r.slice(),_=new Uint32Array(o*a);for(let A=m;A<a-m;A++){const v=A*o;for(let b=h;b<o-h;b++){if(s&&i&&i[v+b])continue;const F=[];for(let w=0;w<u;w++)for(let O=0;O<c;O++){const k=v+b+(w-m)*o+O-h;i&&!i[k]||F.push(n[k])}F.length&&(F.sort((w,O)=>w-O),i?(d[v+b]=F[Math.floor((F.length-1)/2)],_[v+b]=F.length):r[v+b]=F[Math.floor((F.length-1)/2)])}}if(i)for(let A=m;A<a-m;A++){const v=A*o;for(let b=h;b<o-h;b++)if(_[v+b]){if(s&&i[v+b])continue;r[v+b]=d[v+b],i[v+b]=255}}}function Dr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:c}=e,m=Math.floor(u/2),h=Math.floor(c/2),d="majority"===e.statisticsType,_=u*c,A=r.slice(),v=new Uint32Array(o*a);for(let b=m;b<a-m;b++){const F=b*o;for(let w=h;w<o-h;w++){if(s&&i&&i[F+w])continue;const O=new Map;for(let j=0;j<u;j++)for(let E=0;E<c;E++){const U=F+w+(j-m)*o+E-h;if(i&&!i[U])continue;const z=n[U];O.set(z,O.has(z)?O.get(z)+1:1)}if(0===O.size)continue;let k=0,Y=0,M=d?0:_+1;for(const j of O.keys())Y=O.get(j),d===Y>M&&(M=Y,k=j);i?(A[F+w]=k,v[F+w]=O.size):r[F+w]=k}}if(i)for(let b=m;b<a-m;b++){const F=b*o;for(let w=h;w<o-h;w++)if(v[F+w]){if(s&&i[F+w])continue;r[F+w]=A[F+w],i[F+w]=255}}}var Se;let Mt=Se=class extends G{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Se({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,H.d9)(this.raster)})}};(0,l._)([(0,p.Cb)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Mt.prototype,"rows",void 0),(0,l._)([(0,p.Cb)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Mt.prototype,"cols",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],Mt.prototype,"fillNoDataOnly",void 0),(0,l._)([(0,p.Cb)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>dn.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,Wt.J)(dn)],Mt.prototype,"statisticsType",void 0),Mt=Se=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Mt);const Sr=Mt;let te=class extends I{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:o,fillNoDataOnly:a}=this.functionArguments;return function jr(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:o,width:a,height:i,bandMasks:r,pixelType:u}=t,c=o.length,m=a*i,h=[],{kernelRows:d,kernelCols:_,statisticsType:A,mirrorEdges:v}=e;if(n&&!s)return t;const b=e.outputPixelType??u,F=[];for(let k=0;k<c;k++){const Y=o[k],M=f.Z.createEmptyBand(b,m);n&&M.set(Y);const E=(r?.[k]??s)?.slice()??null,U={band:Y,width:a,height:i,mask:E,outBand:M};switch(A){case"min":case"max":Rr(U,e);break;case"mean":case"stddev":Br(U,e);break;case"median":Nr(U,e);break;case"majority":case"minority":Dr(U,e)}v&&!n&&we(M,a,i,d,_),h.push(M),E&&F.push(E)}let w=F[0]??s;F.length!==c&&(F.length=0),c>1&&r?.length&&(w=f.Z.combineBandMasks(r));const O=new f.Z({pixelType:b,width:a,height:i,pixels:h,bandMasks:r&&F.length?F:null,mask:w});return O.updateStatistics(),O}(e,{kernelRows:n,kernelCols:o,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:(0,D.rL)(this.outputPixelType)}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],te.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Sr,json:{write:!0,name:"rasterFunctionArguments"}})],te.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],te.prototype,"rasterArgumentNames",void 0),te=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StatisticsFunction")],te);const Mr=te;var Me;let kt=Me=class extends G{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach(n=>{s.push({min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation})}),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach(o=>{const a={...o,mean:o.avg,standardDeviation:o.stddev};delete a.avg,delete a.stddev,n.push(a)}),e[s]=n}clone(){return new Me({statistics:(0,H.d9)(this.statistics),histograms:(0,H.d9)(this.histograms)})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],kt.prototype,"statistics",void 0),(0,l._)([(0,ce.r)("statistics")],kt.prototype,"readStatistics",null),(0,l._)([(0,pe.c)("statistics")],kt.prototype,"writeStatistics",null),(0,l._)([(0,p.Cb)({json:{write:!0}})],kt.prototype,"histograms",void 0),kt=Me=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],kt);const kr=kt;let vt=class extends I{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],vt.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:kr,json:{write:!0,name:"rasterFunctionArguments"}})],vt.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],vt.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],vt.prototype,"indexedColormap",void 0),(0,l._)([(0,p.Cb)()],vt.prototype,"isNoopProcess",void 0),vt=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],vt);const Er=vt;var ke;const Or=new Zt.X({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let et=ke=class extends G{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map(n=>[n.min,n.max,n.avg,n.stddev])),e[s]=t)}clone(){return new ke({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,H.d9)(this.statistics),gamma:(0,H.d9)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,H.d9)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,l._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],et.prototype,"computeGamma",void 0),(0,l._)([(0,p.Cb)({type:Boolean,json:{name:"dra",write:!0}})],et.prototype,"dynamicRangeAdjustment",void 0),(0,l._)([(0,p.Cb)({type:[Number],json:{write:!0}})],et.prototype,"gamma",void 0),(0,l._)([(0,p.Cb)()],et.prototype,"histograms",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],et.prototype,"maxPercent",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],et.prototype,"minPercent",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],et.prototype,"numberOfStandardDeviations",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{name:"max",write:!0}})],et.prototype,"outputMax",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{name:"min",write:!0}})],et.prototype,"outputMin",void 0),(0,l._)([(0,p.Cb)({type:Number,json:{write:!0}})],et.prototype,"sigmoidStrengthLevel",void 0),(0,l._)([(0,p.Cb)({json:{type:[[Number]],write:!0}})],et.prototype,"statistics",void 0),(0,l._)([(0,pe.c)("statistics")],et.prototype,"writeStatistics",null),(0,l._)([(0,Wt.J)(Or)],et.prototype,"stretchType",void 0),(0,l._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],et.prototype,"useGamma",void 0),et=ke=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],et);const Ur=et;let At=class extends I{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:a}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const r=(0,wt.AV)(s.toJSON(),{rasterInfo:t}),u=(0,D.DV)(this.outputPixelType)?"round":"float";this.lookup=(0,wt.hE)({pixelType:e,...r,gamma:a?o:null,rounding:u}),this.cutOffs=r}else n||(this.cutOffs=(0,wt.AV)(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();return i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed"),this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return(0,K.XV)(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||(0,wt.AV)(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e});return(0,wt.dy)(e,{...o,gamma:n.useGamma?n.gamma:null,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,a=n&&s?.length?(0,wt.um)(o,s):[1,1,1],{minCutOff:i,maxCutOff:r}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],r[1]=r[2]=r[0]);const u=new Float32Array(o);let c;for(c=0;c<o;c++)u[c]=(e-t)/(r[c]-i[c]);const m=(0,D.DV)(this.outputPixelType);return{bandCount:o,outMin:t,outMax:e,minCutOff:i,maxCutOff:r,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Ur,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],At.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],At.prototype,"lookup",void 0),(0,l._)([(0,p.Cb)({json:{write:!0}})],At.prototype,"cutOffs",void 0),At=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.StretchFunction")],At);const Gr=At;var Ee;let he=Ee=class extends G{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Ee({attributeTableAsRecordSet:(0,H.d9)(this.attributeTableAsRecordSet)})}};(0,l._)([(0,p.Cb)({json:{write:!0}})],he.prototype,"attributeTableAsRecordSet",void 0),he=Ee=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.TableFunctionArguments")],he);const Lr=he;let Et=class extends I{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,l._)([(0,p.Cb)({json:{write:!0,name:"rasterFunction"}})],Et.prototype,"functionName",void 0),(0,l._)([(0,p.Cb)({type:Lr,json:{write:!0,name:"rasterFunctionArguments"}})],Et.prototype,"functionArguments",void 0),(0,l._)([(0,p.Cb)()],Et.prototype,"rasterArgumentNames",void 0),(0,l._)([(0,p.Cb)()],Et.prototype,"isNoopProcess",void 0),Et=(0,l._)([(0,x.j)("esri.layers.support.rasterFunctions.TableFunction")],Et);const Vr=Et,X=new Map;function fn(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster]).forEach(n=>{n&&"number"!=typeof n&&("string"==typeof n?n.startsWith("http")&&(e.includes(n)||e.push(n)):"rasterFunctionArguments"in n&&fn(n,e))})}function zr(t,e){if(e=e??{},"function"in(t=(0,H.d9)(t))&&"arguments"in t&&t.arguments){const s=vn(t,new Map,e);if(Ge(s),!s.renderingRule)throw new st.Z("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return yn(t=Oe(t),e);throw new st.Z("raster-function-helper","unsupported raster function json.")}function gn(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Oe(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const o in s){let a=s[o];const i=o.toLowerCase();if("rasters"===i&&Array.isArray(a))n.rasters=a.map(r=>gn(r)?Oe(r):r);else switch(gn(a)&&(a=Oe(a)),i){case"dra":n.dra=a;break;case"pspower":n.psPower=a;break;case"pszfactor":n.psZFactor=a;break;case"bandids":n.bandIds=a;break;default:n[o[0].toLowerCase()+o.slice(1)]=a}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function yn(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,o=t.outputPixelType?.toLowerCase();if(null==s||!X.has(s))throw new st.Z("raster-function-helper",`unsupported raster function: ${s}`);const a=X.get(s),i=("function"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:r}=i,u=[],c=function Wr(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map(s=>t[s])}(n,r),m="rasters"===r[0],h=[];for(let d=0;d<c.length;d++){const _=c[d];let A;null==_||"string"==typeof _&&_.startsWith("$")?u.push(e?.raster):"string"==typeof _?e[_]&&u.push(e[_]):"number"!=typeof _&&"rasterFunction"in _&&(A=yn(_,e),m||(i.functionArguments[r[d]]=A),u.push(A)),m&&h.push(A??_)}if(m&&(i.functionArguments.rasters=h),e){i.sourceRasters=u;const d=e.raster?.url;d&&(i.mainPrimaryRasterId=d)}return i}function _n(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?_n(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function Ue(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map(o=>"object"==typeof o&&"RasterFunctionVariable"===o.type?Ue(o,e):o);if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=bn(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(bn)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const o=[];for(let a=0;a<s.elements.length;a++){const i=s.elements[a],{type:r}=i;if(r)if("RasterFunctionTemplate"===r){const{renderingRule:u}=vn(i,e);o.push(u),null!=i._object_id&&e.set(i._object_id,u)}else{if("RasterFunctionVariable"!==r)throw new st.Z("raster-function-helper","unsupported raster function json.");{const u=Ue(i,e);o.push(u),null!=i._object_id&&e.set(i._object_id,u)}}else o.push(i)}n=o}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function bn(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:o,g:a,b:i}=(0,Z.xr)({h:s.Hue,s:s.Saturation,v:s.Value});s=[o,a,i,s.AlphaValue]}if(!Array.isArray(n)){const{r:o,g:a,b:i}=(0,Z.xr)({h:n.Hue,s:n.Saturation,v:n.Value});n=[o,a,i,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function vn(t,e,s){s&&_n(t,s);const n={renderingRule:{},templates:e};return An(t,n),n}function An(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:o,arguments:a,_object_id:i}=t;if(!o||!a)return;null!=i&&n.set(i,s),s.rasterFunction=o.type.replace("Function",""),s.outputPixelType=o.pixelType;const r={};s.rasterFunctionArguments=r;for(const u in a){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const c=a[u];c&&"object"==typeof c&&"type"in c&&("RasterFunctionTemplate"===c.type||"RasterFunctionVariable"===c.type)?("RasterFunctionVariable"===c.type?r[u]=Ue(c,n):(s.rasterFunctionArguments[u]={},An(c,{renderingRule:s.rasterFunctionArguments[u],templates:n})),null!=c._object_id&&n.set(c._object_id,r[u])):r[u]=c}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),s.rasterFunction){case"Stretch":!function Zr(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(r);break;case"Colormap":!function Hr(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(r);break;case"Convolution":!function Kr(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(r);break;case"Mask":!function Xr(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter(e=>""!==e).map(e=>Number(e)))}(r)}}function Ge(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const o in n){const a=n[o],i="_object_ref_id"===o?a:a&&"object"==typeof a&&"_object_ref_id"in a?a._object_ref_id:null;if(null==i)a&&"object"==typeof a&&(a.rasterFunctionArguments&&Ge({renderingRule:a,templates:s}),Array.isArray(a)&&a.forEach((r,u)=>{if("object"==typeof r)if(null!=r._object_ref_id){if(!s.has(r._object_ref_id))throw new st.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const c=s.get(i);c&&"object"==typeof c?Object.assign(r,c):a[u]=c}else Ge({renderingRule:r,templates:s})}));else{if(!s.has(i))throw new st.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const r=s.get(i);"_object_ref_id"!==o?n[o]=r:r&&"object"==typeof r&&Object.assign(n,r)}}}X.set("Arithmetic",{desc:"Arithmetic Function",ctor:cs,rasterArgumentNames:["rasters"]}),X.set("Aspect",{desc:"Aspect Function",ctor:ms,rasterArgumentNames:["raster"]}),X.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Us,rasterArgumentNames:["raster"]}),X.set("Colormap",{desc:"Colormap Function",ctor:qs,rasterArgumentNames:["raster"]}),X.set("CompositeBand",{desc:"CompositeBand Function",ctor:er,rasterArgumentNames:["rasters"]}),X.set("Convolution",{desc:"Convolution Function",ctor:cr,rasterArgumentNames:["raster"]}),X.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:sr,rasterArgumentNames:["raster"]}),X.set("ExtractBand",{desc:"ExtractBand Function",ctor:dr,rasterArgumentNames:["raster"]}),X.set("Curvature",{desc:"Curvature Function",ctor:mr,rasterArgumentNames:["raster"]}),X.set("Grayscale",{desc:"Grayscale Function",ctor:yr,rasterArgumentNames:["raster"]}),X.set("Clip",{desc:"Clip Function",ctor:zs,rasterArgumentNames:["raster"]}),X.set("Local",{desc:"Local Function",ctor:br,rasterArgumentNames:["rasters"]}),X.set("Mask",{desc:"Mask Function",ctor:Ar,rasterArgumentNames:["raster"]}),X.set("NDVI",{desc:"NDVI Function",ctor:Cr,rasterArgumentNames:["raster"]}),X.set("Remap",{desc:"Remap Function",ctor:Fr,rasterArgumentNames:["raster"]}),X.set("Slope",{desc:"Slope Function",ctor:Ir,rasterArgumentNames:["raster"]}),X.set("Statistics",{desc:"Focal Statistics Function",ctor:Mr,rasterArgumentNames:["raster"]}),X.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Er,rasterArgumentNames:["raster"]}),X.set("Stretch",{desc:"Stretch Function",ctor:Gr,rasterArgumentNames:["raster"]}),X.set("Table",{desc:"Attribute Table Function",ctor:Vr,rasterArgumentNames:["raster"]})},96504:(ae,ht,g)=>{g.d(ht,{Z:()=>x});var Z=g(17626),st=g(86810),H=g(77712),gt=(g(8314),g(63290),g(4619),g(76898));let rt=class extends st.wq{get affectsPixelSize(){return!1}forwardTransform(D){return D}inverseTransform(D){return D}};(0,Z._)([(0,H.Cb)()],rt.prototype,"affectsPixelSize",null),(0,Z._)([(0,H.Cb)({json:{write:!0}})],rt.prototype,"spatialReference",void 0),rt=(0,Z._)([(0,gt.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],rt);const x=rt},76671:(ae,ht,g)=>{g.d(ht,{Z:()=>ut});var x,Z=g(17626),st=g(77712),ee=(g(8314),g(63290),g(4619),g(55342)),gt=g(76898),rt=g(96504);let D=x=class extends rt.Z{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(S){return"point"===(S=S.clone()).type?(S.x>180+this.tolerance&&(S.x-=360),S):(S.xmin>=180-this.tolerance?(S.xmax-=360,S.xmin-=360):S.xmax>180+this.tolerance&&(S.xmin=-180,S.xmax=180),S)}inverseTransform(S){return"point"===(S=S.clone()).type?(S.x<-this.tolerance&&(S.x+=360),S):(S.xmin<-this.tolerance&&(S.xmin+=360,S.xmax+=360),S)}clone(){return new x({tolerance:this.tolerance})}};(0,Z._)([(0,ee.J)({GCSShiftXform:"gcs-shift"})],D.prototype,"type",void 0),(0,Z._)([(0,st.Cb)()],D.prototype,"tolerance",void 0),D=x=(0,Z._)([(0,gt.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],D);const ut=D},85374:(ae,ht,g)=>{g.d(ht,{Z:()=>Gt});var pt,Z=g(17626),H=(g(29132),g(77712)),gt=(g(8314),g(63290),g(4619),g(55342)),rt=g(68653),x=g(76898),D=g(99433),ut=g(96504),S=g(72642),G=g(2004);function it(y,C,I){const{x:T,y:P}=C;if(I<2)return{x:y[0]+T*y[2]+P*y[4],y:y[1]+T*y[3]+P*y[5]};if(2===I){const ot=T*T,ue=P*P,tt=T*P;return{x:y[0]+T*y[2]+P*y[4]+ot*y[6]+tt*y[8]+ue*y[10],y:y[1]+T*y[3]+P*y[5]+ot*y[7]+tt*y[9]+ue*y[11]}}const R=T*T,nt=P*P,dt=T*P,J=R*T,Lt=R*P,B=T*nt,q=P*nt;return{x:y[0]+T*y[2]+P*y[4]+R*y[6]+dt*y[8]+nt*y[10]+J*y[12]+Lt*y[14]+B*y[16]+q*y[18],y:y[1]+T*y[3]+P*y[5]+R*y[7]+dt*y[9]+nt*y[11]+J*y[13]+Lt*y[15]+B*y[17]+q*y[19]}}function Ot(y,C,I){const{xmin:T,ymin:P,xmax:R,ymax:nt,spatialReference:dt}=C;let J=[];if(I<2)J.push({x:T,y:nt}),J.push({x:R,y:nt}),J.push({x:T,y:P}),J.push({x:R,y:P});else{let q=10;for(let ot=0;ot<q;ot++)J.push({x:T,y:P+(nt-P)*ot/(q-1)}),J.push({x:R,y:P+(nt-P)*ot/(q-1)});q=8;for(let ot=1;ot<=q;ot++)J.push({x:T+(R-T)*ot/q,y:P}),J.push({x:T+(R-T)*ot/q,y:nt})}J=J.map(q=>it(y,q,I));const Lt=J.map(q=>q.x),B=J.map(q=>q.y);return new G.Z({xmin:Math.min.apply(null,Lt),xmax:Math.max.apply(null,Lt),ymin:Math.min.apply(null,B),ymax:Math.max.apply(null,B),spatialReference:dt})}let f=pt=class extends ut.Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(y,C){const{coeffX:I,coeffY:T}=C;if(!I?.length||!T?.length||I.length!==T.length)return null;const P=[];for(let R=0;R<I.length;R++)P.push(I[R]),P.push(T[R]);return P}writeForwardCoefficients(y,C,I){const T=[],P=[];for(let R=0;R<y?.length;R++)R%2==0?T.push(y[R]):P.push(y[R]);C.coeffX=T,C.coeffY=P}get inverseCoefficients(){let y=this._get("inverseCoefficients");const C=this._get("forwardCoefficients");return!y&&C&&this.polynomialOrder<2&&(y=function Ut(y){const[C,I,T,P,R,nt]=y,dt=T*nt-R*P,J=R*P-T*nt;return[(R*I-C*nt)/dt,(T*I-C*P)/J,nt/dt,P/J,-R/dt,-T/J]}(C)),y}set inverseCoefficients(y){this._set("inverseCoefficients",y)}readInverseCoefficients(y,C){const{inverseCoeffX:I,inverseCoeffY:T}=C;if(!I?.length||!T?.length||I.length!==T.length)return null;const P=[];for(let R=0;R<I.length;R++)P.push(I[R]),P.push(T[R]);return P}writeInverseCoefficients(y,C,I){const T=[],P=[];for(let R=0;R<y?.length;R++)R%2==0?T.push(y[R]):P.push(y[R]);C.inverseCoeffX=T,C.inverseCoeffY=P}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(y){if("point"===y.type){const C=it(this.forwardCoefficients,y,this.polynomialOrder);return new S.Z({x:C.x,y:C.y,spatialReference:y.spatialReference})}return Ot(this.forwardCoefficients,y,this.polynomialOrder)}inverseTransform(y){if("point"===y.type){const C=it(this.inverseCoefficients,y,this.polynomialOrder);return new S.Z({x:C.x,y:C.y,spatialReference:y.spatialReference})}return Ot(this.inverseCoefficients,y,this.polynomialOrder)}clone(){return new pt({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,Z._)([(0,H.Cb)({json:{write:!0}})],f.prototype,"polynomialOrder",void 0),(0,Z._)([(0,H.Cb)()],f.prototype,"forwardCoefficients",void 0),(0,Z._)([(0,rt.r)("forwardCoefficients",["coeffX","coeffY"])],f.prototype,"readForwardCoefficients",null),(0,Z._)([(0,D.c)("forwardCoefficients")],f.prototype,"writeForwardCoefficients",null),(0,Z._)([(0,H.Cb)({json:{write:!0}})],f.prototype,"inverseCoefficients",null),(0,Z._)([(0,rt.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],f.prototype,"readInverseCoefficients",null),(0,Z._)([(0,D.c)("inverseCoefficients")],f.prototype,"writeInverseCoefficients",null),(0,Z._)([(0,H.Cb)()],f.prototype,"affectsPixelSize",null),(0,Z._)([(0,gt.J)({PolynomialXform:"polynomial"})],f.prototype,"type",void 0),f=pt=(0,Z._)([(0,x.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],f);const Gt=f},46572:(ae,ht,g)=>{g.d(ht,{j:()=>Ot,c:()=>Ut});var D,Z=g(76671),st=g(17626),gt=(g(63290),g(8314),g(4619),g(26584),g(55342)),rt=g(76898),x=g(96504);let ut=D=class extends x.Z{constructor(){super(...arguments),this.type="identity"}clone(){return new D}};(0,st._)([(0,gt.J)({IdentityXform:"identity"})],ut.prototype,"type",void 0),ut=D=(0,st._)([(0,rt.j)("esri.layers.support.rasterTransforms.IdentityTransform")],ut);const S=ut;var G=g(85374);const pt={GCSShiftXform:Z.Z,IdentityXform:S,PolynomialXform:G.Z},it=Object.keys(pt);function Ot(f){const Gt=f?.type;return!f||it.includes(Gt)}function Ut(f){if(!f?.type)return null;const y=pt[f?.type];if(y){const C=new y;return C.read(f),C}return null}}}]);