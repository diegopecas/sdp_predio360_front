"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[5976],{15976:(h,m,o)=>{o.r(m),o.d(m,{default:()=>v});var l=o(15861),d=(o(29132),o(98346)),n=o(25688),E=o(8614),a=o(79751),P=o(47444),c=o(28594),f=o(17057),u=o(30994),p=o(46572),D=o(99033),S=o(37084),_=o(2004),B=o(72642);class v{convertVectorFieldData(t){const e=n.Z.fromJSON(t.pixelBlock),s=(0,u.KC)(e,t.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(t){const e=n.Z.fromJSON(t.pixelBlock),s=(0,f.js)(e);return Promise.resolve(s)}decode(t){return(0,l.Z)(function*(){const e=yield(0,E.J)(t.data,t.options);return e&&e.toJSON()})()}symbolize(t){t.pixelBlock=n.Z.fromJSON(t.pixelBlock),t.extent=t.extent?_.Z.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve(null!=e?e.toJSON():null)}updateSymbolizer(t){var e=this;return(0,l.Z)(function*(){e.symbolizer=D.Z.fromJSON(t.symbolizerJSON),t.histograms&&"rasterStretch"===e.symbolizer?.rendererJSON.type&&(e.symbolizer.rendererJSON.histograms=t.histograms)})()}updateRasterFunction(t){var e=this;return(0,l.Z)(function*(){e.rasterFunction=(0,P.Ue)(t.rasterFunctionJSON)})()}process(t){var e=this;return(0,l.Z)(function*(){const s=e.rasterFunction.process({extent:_.Z.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(r=>null!=r?n.Z.fromJSON(r):null),primaryPixelSizes:t.primaryPixelSizes?.map(r=>null!=r?B.Z.fromJSON(r):null),primaryRasterIds:t.primaryRasterIds});return null!=s?s.toJSON():null})()}stretch(t){const e=this.symbolizer.simpleStretch(n.Z.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(t){const e=(0,f.Hv)(n.Z.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){const e=(0,a.Vl)(n.Z.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,!1===t.useBilinear);return e&&e.forEach((s,r)=>{e.set(r,s?.toJSON())}),Promise.resolve(e)}clipTile(t){const e=n.Z.fromJSON(t.pixelBlock),s=(0,a.Uu)({...t,pixelBlock:e});return Promise.resolve(s?.toJSON())}mosaicAndTransform(t){return(0,l.Z)(function*(){const e=t.srcPixelBlocks.map(O=>O?new n.Z(O):null),s=(0,a.us)(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let r,i=s;return t.coefs&&(i=(0,a.Uk)(s,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(r=(0,a.Qh)(t.destDimension,t.gcsGrid),i=(0,u.xQ)(i,t.isUV?"vector-uv":"vector-magdir",r)),{pixelBlock:i?.toJSON(),localNorthDirections:r}})()}createFlowMesh(t,e){return(0,l.Z)(function*(){const s={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:r,indexData:i}=yield(0,S.GE)(t.meshType,t.simulationSettings,s,e.signal);return{result:{vertexBuffer:r.buffer,indexBuffer:i.buffer},transferList:[r.buffer,i.buffer]}})()}getProjectionOffsetGrid(t){return(0,l.Z)(function*(){const e=_.Z.fromJSON(t.projectedExtent),s=_.Z.fromJSON(t.srcBufferExtent);let r=null;t.datumTransformationSteps&&(r=new d.Z({steps:t.datumTransformationSteps})),(t.includeGCSGrid||(0,c.Mk)(e.spatialReference,s.spatialReference,r))&&(yield(0,c.zD)());const i=t.rasterTransform?(0,p.c)(t.rasterTransform):null;return(0,c.Qp)({...t,projectedExtent:e,srcBufferExtent:s,datumTransformation:r,rasterTransform:i})})()}}}}]);