"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[6926],{25688:(vt,At,J)=>{J.d(At,{Z:()=>gt});var G=J(17626),Y=J(26584),ft=J(86810),mt=J(58817),ot=J(63290),ht=J(62208),N=J(77712),dt=J(66656),xt=J(76898);class yt{constructor(b=null,j=null,z=null){this.minValue=b,this.maxValue=j,this.noDataValue=z}}var pt,ct=J(67313);let q=pt=class extends ft.wq{static createEmptyBand(T,b){return new(pt.getPixelArrayConstructor(T))(b)}static getPixelArrayConstructor(T){let b;switch(T){case"u1":case"u2":case"u4":case"u8":b=Uint8Array;break;case"u16":b=Uint16Array;break;case"u32":b=Uint32Array;break;case"s8":b=Int8Array;break;case"s16":b=Int16Array;break;case"s32":b=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":b=Float32Array;break;case"f64":b=Float64Array}return b}constructor(T){super(T),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(T){if(!T)return"f32";let b=T.toLowerCase();return["u1","u2","u4"].includes(b)?b="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(b)||(b="f32"),b}getPlaneCount(){return this.pixels?.length}addData(T){if(!T.pixels||T.pixels.length!==this.width*this.height)throw new Y.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(T.pixels),this.statistics.push(T.statistics??new yt)}getAsRGBA(){const T=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(T);break;default:this._fillFrom8Bit(T)}return new Uint8ClampedArray(T)}getAsRGBAFloat(){const T=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(T),T}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(j=>this._calculateBandStatistics(j,this.mask));const T=this.mask;let b=0;if((0,ht.pC)(T))for(let j=0;j<T.length;j++)T[j]&&b++;else b=this.width*this.height;this.validPixelCount=b}clamp(T){if(!T||"f64"===T||"f32"===T||!this.pixels)return;const[b,j]=(0,ct.r)(T),z=this.pixels,X=this.width*this.height,W=z.length;let D,Q,L;const H=[];for(let tt=0;tt<W;tt++){L=pt.createEmptyBand(T,X),D=z[tt];for(let st=0;st<X;st++)Q=D[st],L[st]=Q>j?j:Q<b?b:Q;H.push(L)}this.pixels=H,this.pixelType=T}extractBands(T){const{pixels:b,statistics:j}=this;if((0,ht.Wi)(T)||0===T.length||!b||0===b.length)return this;const z=b.length,X=T.some(D=>D>=b.length),W=z===T.length&&!T.some((D,Q)=>D!==Q);return X||W?this:new pt({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:T.map(D=>b[D]),statistics:j&&T.map(D=>j[D])})}clone(){const T=new pt({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let b;(0,ht.pC)(this.mask)&&(T.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0));const j=pt.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){T.pixels=[];const z=!!this.pixels[0].slice;for(b=0;b<this.pixels.length;b++)T.pixels[b]=z?this.pixels[b].slice(0,this.pixels[b].length):new j(this.pixels[b])}if(this.statistics)for(T.statistics=[],b=0;b<this.statistics.length;b++)T.statistics[b]=(0,mt.d9)(this.statistics[b]);return T.premultiplyAlpha=this.premultiplyAlpha,T}_fillFrom8Bit(T){const{mask:b,maskIsAlpha:j,premultiplyAlpha:z,pixels:X}=this;if(!T||!X||!X.length)return void ot.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let W,D,Q,L;W=D=Q=X[0],X.length>=3?(D=X[1],Q=X[2]):2===X.length&&(D=X[1]);const H=new Uint32Array(T),tt=this.width*this.height;if(W.length===tt)if((0,ht.pC)(b)&&b.length===tt)if(j)for(L=0;L<tt;L++){const st=b[L];if(st){const E=st/255;H[L]=z?st<<24|Q[L]*E<<16|D[L]*E<<8|W[L]*E:st<<24|Q[L]<<16|D[L]<<8|W[L]}}else for(L=0;L<tt;L++)b[L]&&(H[L]=255<<24|Q[L]<<16|D[L]<<8|W[L]);else for(L=0;L<tt;L++)H[L]=255<<24|Q[L]<<16|D[L]<<8|W[L];else ot.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(T){const{pixels:b,mask:j,statistics:z}=this;if(!T||!b||!b.length)return void ot.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const X=this.pixelType;let W=1,D=0,Q=1;if(z&&z.length>0){for(const I of z)null!=I.minValue&&(D=Math.min(D,I.minValue)),null!=I.maxValue&&null!=I.minValue&&(Q=Math.max(Q,I.maxValue-I.minValue));W=255/Q}else{let I=255;"s8"===X?(D=-128,I=127):"u16"===X?I=65535:"s16"===X?(D=-32768,I=32767):"u32"===X?I=4294967295:"s32"===X?(D=-2147483648,I=2147483647):"f32"===X?(D=-34e38,I=34e38):"f64"===X&&(D=-Number.MAX_VALUE,I=Number.MAX_VALUE),W=255/(I-D)}const L=new Uint32Array(T),H=this.width*this.height;let tt,st,E,P,B;if(tt=st=E=b[0],tt.length!==H)return ot.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(b.length>=2)if(st=b[1],b.length>=3&&(E=b[2]),(0,ht.pC)(j)&&j.length===H)for(P=0;P<H;P++)j[P]&&(L[P]=255<<24|(E[P]-D)*W<<16|(st[P]-D)*W<<8|(tt[P]-D)*W);else for(P=0;P<H;P++)L[P]=255<<24|(E[P]-D)*W<<16|(st[P]-D)*W<<8|(tt[P]-D)*W;else if((0,ht.pC)(j)&&j.length===H)for(P=0;P<H;P++)B=(tt[P]-D)*W,j[P]&&(L[P]=255<<24|B<<16|B<<8|B);else for(P=0;P<H;P++)B=(tt[P]-D)*W,L[P]=255<<24|B<<16|B<<8|B}_fillFrom32Bit(T){const{pixels:b,mask:j}=this;if(!T||!b||!b.length)return ot.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let z,X,W,D;z=X=W=b[0],b.length>=3?(X=b[1],W=b[2]):2===b.length&&(X=b[1]);const Q=this.width*this.height;if(z.length!==Q)return ot.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let L=0;if((0,ht.pC)(j)&&j.length===Q)for(D=0;D<Q;D++)T[L++]=z[D],T[L++]=X[D],T[L++]=W[D],T[L++]=1&j[D];else for(D=0;D<Q;D++)T[L++]=z[D],T[L++]=X[D],T[L++]=W[D],T[L++]=1}_calculateBandStatistics(T,b){let j=1/0,z=-1/0;const X=T.length;let W,D=0;if((0,ht.pC)(b))for(W=0;W<X;W++)b[W]&&(D=T[W],j=D<j?D:j,z=D>z?D:z);else for(W=0;W<X;W++)D=T[W],j=D<j?D:j,z=D>z?D:z;return new yt(j,z)}};(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"width",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"height",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"pixelType",void 0),(0,G._)([(0,dt.p)("pixelType")],q.prototype,"castPixelType",null),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"validPixelCount",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"mask",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"maskIsAlpha",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"pixels",void 0),(0,G._)([(0,N.Cb)()],q.prototype,"premultiplyAlpha",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"statistics",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"depthCount",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"noDataValues",void 0),(0,G._)([(0,N.Cb)({json:{write:!0}})],q.prototype,"bandMasks",void 0),q=pt=(0,G._)([(0,xt.j)("esri.layers.support.PixelBlock")],q);const gt=q},79751:(vt,At,J)=>{J.d(At,{CD:()=>ot,DX:()=>mt,Gd:()=>xt,Kh:()=>L,Pz:()=>yt,Qh:()=>x,SJ:()=>ct,Uk:()=>y,Vl:()=>w,XV:()=>pt,a2:()=>T,hd:()=>ht,nA:()=>D,nk:()=>N,oB:()=>W,pW:()=>E,qF:()=>dt,sS:()=>X,us:()=>tt,wV:()=>q,zp:()=>gt});var mt,ot,t,G=J(62208),Y=J(25688),ft=J(67313);(t=mt||(mt={}))[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(ot||(ot={}));const ht=6;function N(t){return(0,G.pC)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function dt(t,l){if(!l?.length||!N(t))return t;const e=t.pixels.length;return l&&l.some(i=>i>=e)||1===e&&1===l.length&&0===l[0]?t:e!==l.length||l.some((i,r)=>i!==r)?new Y.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:l.map(i=>t.pixels[i]),statistics:t.statistics&&l.map(i=>t.statistics[i])}):t}function xt(t){if(!t?.length||t.some(n=>!N(n)))return null;if(1===t.length)return(0,G.pC)(t[0])?t[0].clone():null;const l=t,{width:e,height:i,pixelType:r}=l[0];if(l.some(n=>n.width!==e||n.height!==i))return null;const s=l.map(({mask:n})=>n).filter(n=>null!=n);let a=null;s.length&&(a=new Uint8Array(e*i),a.set(s[0]),s.length>1&&z(s.slice(1),a));const o=[];l.forEach(({pixels:n})=>o.push(...n));const c=l.map(({statistics:n})=>n).filter(n=>n?.length),u=[];return c.forEach(n=>u.push(...n)),new Y.Z({pixelType:r,width:e,height:i,mask:a,pixels:o,statistics:u.length?u:null})}function yt(t){if(!t)return;const l=t.colormap;if(!l||0===l.length)return;const e=l.sort((h,m)=>h[0]-m[0]);let i=0;e[0][0]<0&&(i=e[0][0]);const r=Math.max(256,e[e.length-1][0]-i+1),s=new Uint8Array(4*r),a=[];let o,c=0,u=0;const n=5===e[0].length;if(r>65536)return e.forEach(h=>{a[h[0]-i]=n?h.slice(1):h.slice(1).concat([255])}),{indexed2DColormap:a,offset:i,alphaSpecified:n};if(t.fillUnspecified)for(o=e[u],c=o[0]-i;c<r;c++)s[4*c]=o[1],s[4*c+1]=o[2],s[4*c+2]=o[3],s[4*c+3]=n?o[4]:255,c===o[0]-i&&(o=u===e.length-1?o:e[++u]);else for(c=0;c<e.length;c++)o=e[c],u=4*(o[0]-i),s[u]=o[1],s[u+1]=o[2],s[u+2]=o[3],s[u+3]=n?o[4]:255;return{indexedColormap:s,offset:i,alphaSpecified:n}}function ct(t,l){if(!N(t)||!l||!l.indexedColormap&&!l.indexed2DColormap)return t;const e=t.clone(),i=e.pixels;let r=e.mask;const s=e.width*e.height;if(1!==i.length)return t;const{indexedColormap:a,indexed2DColormap:o,offset:c,alphaSpecified:u}=l;let n=0;const h=i[0],m=new Uint8Array(h.length),f=new Uint8Array(h.length),g=new Uint8Array(h.length);let p,_=0;if(a){const k=a.length-1;if((0,G.pC)(r))for(n=0;n<s;n++)r[n]&&(_=4*(h[n]-c),_<c||_>k?r[n]=0:(m[n]=a[_],f[n]=a[_+1],g[n]=a[_+2],r[n]=a[_+3]));else{for(r=new Uint8Array(s),n=0;n<s;n++)_=4*(h[n]-c),_<c||_>k?r[n]=0:(m[n]=a[_],f[n]=a[_+1],g[n]=a[_+2],r[n]=a[_+3]);e.mask=r}}else if(o)if((0,G.pC)(r))for(n=0;n<s;n++)r[n]&&(p=o[h[n]],m[n]=p[0],f[n]=p[1],g[n]=p[2],r[n]=p[3]);else{for(r=new Uint8Array(s),n=0;n<s;n++)p=o[h[n]],m[n]=p[0],f[n]=p[1],g[n]=p[2],r[n]=p[3];e.mask=r}return e.pixels=[m,f,g],e.statistics=null,e.pixelType="u8",e.maskIsAlpha=u,e}function pt(t,l){if(!N(t))return null;const{pixels:e,mask:i}=t,r=e.length;let s=l.lut;const{offset:a}=l;s&&1===s[0].length&&(s=e.map(()=>s));const o=[],c=l.outputPixelType||"u8";for(let n=0;n<r;n++){const h=q(e[n],i,s[n],a||0,c);o.push(h)}const u=new Y.Z({width:t.width,height:t.height,pixels:o,mask:i,pixelType:c});return u.updateStatistics(),u}function q(t,l,e,i,r){const s=t.length,a=Y.Z.createEmptyBand(r,s);if(l)for(let o=0;o<s;o++)l[o]&&(a[o]=e[t[o]-i]);else for(let o=0;o<s;o++)a[o]=e[t[o]-i];return a}function gt(t,l){if(!N(t))return null;const e=t.clone(),{pixels:i}=e,r=e.width*e.height,s=l.length,a=Math.floor(s/2),o=l[Math.floor(a)],c=i[0];let u,n,h,m,f,g,p=!1;const _=new Uint8Array(r),k=new Uint8Array(r),C=new Uint8Array(r);let F=e.mask;const v=4===l[0].mappedColor.length;for(F||(F=new Uint8Array(r),F.fill(v?255:1),e.mask=F),f=0;f<r;f++)if(F[f]){for(u=c[f],p=!1,g=a,n=o,h=0,m=s-1;m-h>1;){if(u===n.value){p=!0;break}u>n.value?h=g:m=g,g=Math.floor((h+m)/2),n=l[Math.floor(g)]}p||(u===l[h].value?(n=l[h],p=!0):u===l[m].value?(n=l[m],p=!0):u<l[h].value?(p=!1,n=null):u>l[h].value&&(u<l[m].value?(n=l[h],p=!0):m===s-1?(p=!1,n=null):(n=l[m],p=!0))),p?(_[f]=n.mappedColor[0],k[f]=n.mappedColor[1],C[f]=n.mappedColor[2],F[f]=n.mappedColor[3]):_[f]=k[f]=C[f]=F[f]=0}return e.pixels=[_,k,C],e.mask=F,e.pixelType="u8",e.maskIsAlpha=v,e}function T(t,l){if(!N(t))return null;const{width:e,height:i}=t,{inputRanges:r,outputValues:s,outputPixelType:a,noDataRanges:o,allowUnmatched:c,isLastInputRangeInclusive:u}=l,n=t.pixels[0],h=Y.Z.createEmptyBand(a,n.length),m=t.mask,f=new Uint8Array(e*i);m?f.set(m):f.fill(255);const g=t.pixelType.startsWith("f")?1e-6:0,p=r.map(F=>F-g);p[0]=r[0],p[p.length-1]=r[r.length-1]+(u?1e-6:0);const _=r.length/2,[k,C]=(0,ft.r)(a);for(let F=0;F<i;F++)for(let v=0;v<e;v++){const O=F*e+v;if(f[O]){const R=n[O];let U=!1;for(let V=_-1;V>=0;V--)if(R===p[2*V]||R>p[2*V]&&R<p[2*V+1]){h[O]=s[V],U=!0;break}U||(c?h[O]=R>C?C:R<k?k:R:f[O]=0)}}if(o?.length)for(let F=0;F<i;F++)for(let v=0;v<e;v++){const O=F*e+v;if(!m||m[O]){const R=n[O];for(let U=0;U<_;U+=2)if(R>=o[U]&&R<=o[U+1]){h[O]=0,f[O]=0;break}}}return new Y.Z({width:e,height:i,pixelType:a,pixels:[h],mask:f})}function b(t,l,e,i){const r=null!=e&&e.length>=2?new Set(e):null,s=1===e?.length?e[0]:null,a=!!l?.length;for(let o=0;o<t.length;o++)if(i[o]){const c=t[o];if(a){let u=!1;for(let n=0;n<l.length;n+=2)if(c>=l[n]&&c<=l[n+1]){u=!0;break}u||(i[o]=0)}i[o]&&(c===s||r?.has(c))&&(i[o]=0)}}function j(t,l){const e=t[0].length;for(let i=0;i<e;i++)if(l[i]){let r=!1;for(let s=0;s<t.length;s++)if(t[s][i]){r=!0;break}r||(l[i]=0)}}function z(t,l){const e=t[0].length;for(let i=0;i<e;i++)if(l[i]){let r=!1;for(let s=0;s<t.length;s++)if(0===t[s][i]){r=!0;break}r&&(l[i]=0)}}function X(t,l){if(!N(t))return null;const{width:e,height:i,pixels:r}=t,s=e*i,a=new Uint8Array(s);t.mask?a.set(t.mask):a.fill(255);const o=r.length,{includedRanges:c,noDataValues:u,outputPixelType:n,matchAll:h,lookups:m}=l;if(m){const f=[];for(let g=0;g<o;g++){const p=m[g],_=q(r[g],a,p.lut,p.offset||0,"u8");f.push(_)}1===f.length?a.set(f[0]):h?j(f,a):z(f,a)}else if(h){const f=[];for(let g=0;g<o;g++){const p=new Uint8Array(s);p.set(a),b(r[g],c?.slice(2*g,2*g+2),u?.[g],p),f.push(p)}1===f.length?a.set(f[0]):j(f,a)}else for(let f=0;f<o;f++)b(r[f],c?.slice(2*f,2*f+2),u?.[f],a);return new Y.Z({width:e,height:i,pixelType:n,pixels:r,mask:a})}function W(t){const{srcPixelType:l,inputRanges:e,outputValues:i,allowUnmatched:r,noDataRanges:s,isLastInputRangeInclusive:a,outputPixelType:o}=t;if("u8"!==l&&"s8"!==l&&"u16"!==l&&"s16"!==l)return null;const c=l.includes("16")?65536:256,u=l.includes("s")?-c/2:0,n=Y.Z.createEmptyBand(o,c),h=new Uint8Array(c);r&&h.fill(255);const[m,f]=(0,ft.r)(o);if(e?.length&&i?.length){const p=e.map(_=>_-1e-6);p[0]=e[0],a&&(p[p.length-1]=e[e.length-1]);for(let _=0;_<p.length;_++){const k=i[_]>f?f:i[_]<m?m:i[_],C=Math.ceil(p[2*_]-u),F=Math.floor(p[2*_+1]-u);for(let v=C;v<=F;v++)n[v]=k,h[v]=255}}if(s?.length)for(let g=0;g<s.length;g++){const p=Math.ceil(s[2*g]-u),_=Math.floor(s[2*g+1]-u);for(let k=p;k<=_;k++)h[k]=0}return{lut:n,offset:u,mask:h}}function D(t,l,e){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,r=t.includes("s")?-i/2:0,s=new Uint8Array(i);if(l)for(let a=0;a<l.length;a++){const o=Math.ceil(l[2*a]-r),c=Math.floor(l[2*a+1]-r);for(let u=o;u<=c;u++)s[u]=255}else s.fill(255);if(e)for(let a=0;a<e.length;a++)s[e[a]-r]=0;return{lut:s,offset:r}}function L(t,l){if(!t||0===t.length)return null;const e=t.find(g=>g.pixelBlock);if(!e||(0,G.Wi)(e.pixelBlock))return null;const i=(e.extent.xmax-e.extent.xmin)/e.pixelBlock.width,r=(e.extent.ymax-e.extent.ymin)/e.pixelBlock.height,s=.01*Math.min(i,r),a=t.sort((g,p)=>Math.abs(g.extent.ymax-p.extent.ymax)>s?p.extent.ymax-g.extent.ymax:Math.abs(g.extent.xmin-p.extent.xmin)>s?g.extent.xmin-p.extent.xmin:0),o=Math.min.apply(null,a.map(g=>g.extent.xmin)),c=Math.min.apply(null,a.map(g=>g.extent.ymin)),u=Math.max.apply(null,a.map(g=>g.extent.xmax)),n=Math.max.apply(null,a.map(g=>g.extent.ymax)),h={x:Math.round((l.xmin-o)/i),y:Math.round((n-l.ymax)/r)},m={width:Math.round((u-o)/i),height:Math.round((n-c)/r)},f={width:Math.round((l.xmax-l.xmin)/i),height:Math.round((l.ymax-l.ymin)/r)};return Math.round(m.width/e.pixelBlock.width)*Math.round(m.height/e.pixelBlock.height)!==a.length||h.x<0||h.y<0||m.width<f.width||m.height<f.height?null:{extent:l,pixelBlock:tt(a.map(g=>g.pixelBlock),m,{clipOffset:h,clipSize:f})}}function H(t,l,e,i,r,s){const{width:a,height:o}=e.block,{x:c,y:u}=e.offset,{width:n,height:h}=e.mosaic,m=function Q(t,l,e,i,r,s,a,o){return{xmin:r<=e*t?0:r<e*t+t?r-e*t:t,ymin:s<=i*l?0:s<i*l+l?s-i*l:l,xmax:r+a<=e*t?0:r+a<e*t+t?r+a-e*t:t,ymax:s+o<=i*l?0:s+o<i*l+l?s+o-i*l:l}}(a,o,i,r,c,u,n,h);let f=0,g=0;if(s){const p=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,_=a*s.resolutionX,k=s.startX+i*_;k<p&&k+_>p?g=s.rightPadding:k>=p&&(f=s.leftMargin-s.rightPadding,g=0)}if(m.xmax-=g,"number"!=typeof l)for(let p=m.ymin;p<m.ymax;p++){const _=(r*o+p-u)*n+(i*a-c)+f,k=p*a;for(let C=m.xmin;C<m.xmax;C++)t[_+C]=l[k+C]}else for(let p=m.ymin;p<m.ymax;p++){const _=(r*o+p-u)*n+(i*a-c)+f;for(let k=m.xmin;k<m.xmax;k++)t[_+k]=l}}function tt(t,l,e={}){const{clipOffset:i,clipSize:r,alignmentInfo:s,blockWidths:a}=e;if(a)return function st(t,l,e){const i=t.find(f=>(0,G.pC)(f));if((0,G.Wi)(i))return null;const r=t.some(f=>!(0,G.pC)(f)||!!f.mask),{width:s,height:a}=l,o=r?new Uint8Array(s*a):null,{blockWidths:c}=e,u=[],n=i.getPlaneCount(),h=Y.Z.getPixelArrayConstructor(i.pixelType);if(r)for(let f=0,g=0;f<t.length;g+=c[f],f++){const p=t[f];if(!N(p))continue;const _=(0,G.Wg)(p.mask);for(let k=0;k<a;k++)for(let C=0;C<c[f];C++)o[k*s+C+g]=null==_?255:_[k*p.width+C]}for(let f=0;f<n;f++){const g=new h(s*a);for(let p=0,_=0;p<t.length;_+=c[p],p++){const k=t[p];if(!N(k))continue;const C=k.pixels[f];if(null!=C)for(let F=0;F<a;F++)for(let v=0;v<c[p];v++)g[F*s+v+_]=C[F*k.width+v]}u.push(g)}const m=new Y.Z({width:s,height:a,mask:o,pixels:u,pixelType:i.pixelType});return m.updateStatistics(),m}(t,l,{blockWidths:a});const o=t.find(U=>N(U));if((0,G.Wi)(o))return null;const c=r?r.width:l.width,u=r?r.height:l.height,n=o.width,h=o.height,m=l.width/n,f=l.height/h,g={offset:i||{x:0,y:0},mosaic:r||l,block:{width:n,height:h}},p=o.pixelType,_=Y.Z.getPixelArrayConstructor(p),k=o.pixels.length,C=[];let F,v,O;for(let U=0;U<k;U++){v=new _(c*u);for(let V=0;V<f;V++)for(let Z=0;Z<m;Z++){const K=t[V*m+Z];N(K)&&(F=K.pixels[U],H(v,F,g,Z,V,s))}C.push(v)}if(t.some(U=>(0,G.Wi)(U)||(0,G.pC)(U.mask)&&U.mask.length>0)){O=new Uint8Array(c*u);for(let U=0;U<f;U++)for(let V=0;V<m;V++){const Z=t[U*m+V],K=(0,G.pC)(Z)?Z.mask:null;(0,G.pC)(K)?H(O,K,g,V,U,s):H(O,Z?1:0,g,V,U,s)}}const R=new Y.Z({width:c,height:u,pixels:C,pixelType:p,mask:O});return R.updateStatistics(),R}function E(t,l,e){if(!N(t))return null;const{width:i,height:r}=t,s=l.x,a=l.y,o=e.width+s,c=e.height+a;if(s<0||a<0||o>i||c>r||0===s&&0===a&&o===i&&c===r)return t;t.mask||(t.mask=new Uint8Array(i*r));const u=t.mask;for(let n=0;n<r;n++){const h=n*i;for(let m=0;m<i;m++)u[h+m]=n<a||n>=c||m<s||m>=o?0:1}return t.updateStatistics(),t}function B(t){if(0===t.size)return 0;let l=0,e=-1,i=0;const r=t.keys();let s=r.next();for(;!s.done;)i=t.get(s.value),i>l&&(e=s.value,l=i),s=r.next();return e}function I(t,l,e){if(0===e)return;const i=t.get(l);1===i?t.delete(l):t.set(l,i-1)}function S(t,l,e){0!==e&&t.set(l,t.has(l)?t.get(l)+1:1)}function d(t,l,e){let{x:i,y:r}=l;const{width:s,height:a}=e;if(0===i&&0===r&&a===t.height&&s===t.width)return t;const{width:o,height:c}=t,u=Math.max(0,r),n=Math.max(0,i),h=Math.min(i+s,o),m=Math.min(r+a,c);if(h<0||m<0||!N(t))return null;i=Math.max(0,-i),r=Math.max(0,-r);const{pixels:f}=t,g=s*a,p=f.length,_=[];for(let v=0;v<p;v++){const O=f[v],R=Y.Z.createEmptyBand(t.pixelType,g);for(let U=u;U<m;U++){const V=U*o;let Z=(U+r-u)*s+i;for(let K=n;K<h;K++)R[Z++]=O[V+K]}_.push(R)}const k=new Uint8Array(g),C=(0,G.Wg)(t.mask);for(let v=u;v<m;v++){const O=v*o;let R=(v+r-u)*s+i;for(let U=n;U<h;U++)k[R++]=C?C[O+U]:1}const F=new Y.Z({width:e.width,height:e.height,pixelType:t.pixelType,pixels:_,mask:k});return F.updateStatistics(),F}function M(t,l=!0){if(!N(t))return null;const{pixels:e,width:i,height:r,mask:s,pixelType:a}=t,o=[],c=Math.round(i/2),u=Math.round(r/2),n=r-1,h=i-1;for(let f=0;f<e.length;f++){const g=e[f],p=Y.Z.createEmptyBand(a,c*u);let _=0;for(let k=0;k<r;k+=2)for(let C=0;C<i;C+=2){const F=g[k*i+C];if(l){const v=C===h?F:g[k*i+C+1],O=k===n?F:g[k*i+C+i];p[_++]=(F+v+O+(C===h?O:k===n?v:g[k*i+C+i+1]))/4}else p[_++]=F}o.push(p)}let m=null;if((0,G.pC)(s)){m=new Uint8Array(c*u);let f=0;for(let g=0;g<r;g+=2)for(let p=0;p<i;p+=2){const _=s[g*i+p];if(l){const k=p===h?_:s[g*i+p+1],C=g===n?_:s[g*i+p+i];m[f++]=_*k*C*(p===h?C:g===n?k:s[g*i+p+i+1])?1:0}else m[f++]=_}}return new Y.Z({width:c,height:u,pixelType:a,pixels:o,mask:m})}function w(t,l,e){if(!N(t))return null;const{width:i,height:r}=l;let{width:s,height:a}=t;const o=new Map,c={x:0,y:0},u=null==e?1:1+e;let n=t;for(let h=0;h<u;h++){const m=Math.ceil(s/i),f=Math.ceil(a/r);for(let g=0;g<f;g++){c.y=g*r;for(let p=0;p<m;p++){c.x=p*i;const _=d(n,c,l);o.set(`${h}/${g}/${p}`,_)}}h<u-1&&(n=M(n)),s=Math.round(s/2),a=Math.round(a/2)}return o}function A(t,l,e,i,r=0){const{width:s,height:a}=t,{width:o,height:c}=l,u=i.cols,n=i.rows,h=Math.ceil(o/u-.1/u),m=Math.ceil(c/n-.1/n);let f,g,p,_,k,C,F;const v=h*u,O=v*m*n,R=new Float32Array(O),U=new Float32Array(O),V=new Uint32Array(O),Z=new Uint32Array(O);let K,rt,it=0;for(let at=0;at<m;at++)for(let ut=0;ut<h;ut++){f=12*(at*h+ut),g=e[f],p=e[f+1],_=e[f+2],k=e[f+3],C=e[f+4],F=e[f+5];for(let lt=0;lt<n;lt++){it=(at*n+lt)*v+ut*u,rt=(lt+.5)/n;for(let $=0;$<lt;$++)K=($+.5)/u,R[it+$]=(g*K+p*rt+_)*s+r,U[it+$]=(k*K+C*rt+F)*a+r,V[it+$]=Math.floor(R[it+$]),Z[it+$]=Math.floor(U[it+$])}f+=6,g=e[f],p=e[f+1],_=e[f+2],k=e[f+3],C=e[f+4],F=e[f+5];for(let lt=0;lt<n;lt++){it=(at*n+lt)*v+ut*u,rt=(lt+.5)/n;for(let $=lt;$<u;$++)K=($+.5)/u,R[it+$]=(g*K+p*rt+_)*s+r,U[it+$]=(k*K+C*rt+F)*a+r,V[it+$]=Math.floor(R[it+$]),Z[it+$]=Math.floor(U[it+$])}}return{offsets_x:R,offsets_y:U,offsets_xi:V,offsets_yi:Z,gridWidth:v}}function x(t,l){const{coefficients:e,spacing:i}=l,{offsets_x:r,offsets_y:s,gridWidth:a}=A(t,t,e,{rows:i[0],cols:i[1]}),{width:o,height:c}=t,u=new Float32Array(o*c),n=180/Math.PI;for(let h=0;h<c;h++)for(let m=0;m<o;m++){const f=h*a+m,g=0===h?f:f-a,p=h===c-1?f:f+a,_=r[g]-r[p],k=s[p]-s[g];if(isNaN(_)||isNaN(k))u[h*o+m]=90;else{let C=Math.atan2(k,_)*n;C=(360+C)%360,u[h*o+m]=C}}return u}function y(t,l,e,i,r="nearest"){if(!N(t))return null;"majority"===r&&(t=function P(t){if(!N(t))return null;const l=t.clone(),{width:e,height:i,pixels:r}=t,s=r[0],a=l.pixels[0],o=(0,G.Wg)(t.mask);for(let c=2;c<i-1;c++){const u=new Map;for(let h=c-2;h<c+2;h++)for(let m=0;m<4;m++){const f=h*e+m;S(u,s[f],o?o[f]:1)}a[c*e]=B(u),a[c*e+1]=a[c*e+2]=a[c*e];let n=3;for(;n<e-1;n++){let h=(c-2)*e+n+1;S(u,s[h],o?o[h]:1),h=(c-1)*e+n+1,S(u,s[h],o?o[h]:1),h=c*e+n+1,S(u,s[h],o?o[h]:1),h=(c+1)*e+n+1,S(u,s[h],o?o[h]:1),h=(c-2)*e+n-3,I(u,s[h],o?o[h]:1),h=(c-1)*e+n-3,I(u,s[h],o?o[h]:1),h=c*e+n-3,I(u,s[h],o?o[h]:1),h=(c+1)*e+n-3,I(u,s[h],o?o[h]:1),a[c*e+n]=B(u)}a[c*e+n+1]=a[c*e+n]}for(let c=0;c<e;c++)a[c]=a[e+c]=a[2*e+c],a[(i-1)*e+c]=a[(i-2)*e+c];return l.updateStatistics(),l}(t));const{pixels:s,mask:a,pixelType:o}=t,c=t.width,u=t.height,n=Y.Z.getPixelArrayConstructor(o),h=s.length,{width:m,height:f}=l;let g=!1;for(let Z=0;Z<e.length;Z+=3)-1===e[Z]&&-1===e[Z+1]&&-1===e[Z+2]&&(g=!0);const{offsets_x:p,offsets_y:_,offsets_xi:k,offsets_yi:C,gridWidth:F}=A({width:c,height:u},l,e,i,"majority"===r?.5:0);let v;const O=(Z,K,rt)=>{const it=Z instanceof Float32Array||Z instanceof Float64Array?0:.5;for(let at=0;at<f;at++){v=at*F;for(let ut=0;ut<m;ut++){if(p[v]<0||_[v]<0)Z[at*m+ut]=0;else if(rt)Z[at*m+ut]=K[k[v]+C[v]*c];else{const lt=Math.floor(p[v]),$=Math.floor(_[v]),wt=Math.ceil(p[v]),et=Math.ceil(_[v]),nt=p[v]-lt,Mt=_[v]-$;Z[at*m+ut]=!a||a[lt+$*c]&&a[lt+$*c]&&a[lt+et*c]&&a[wt+et*c]?(1-Mt)*((1-nt)*K[lt+$*c]+nt*K[wt+$*c])+Mt*((1-nt)*K[lt+et*c]+nt*K[wt+et*c])+it:K[k[v]+C[v]*c]}v++}}},R=[];let U;for(let Z=0;Z<h;Z++)U=new n(m*f),O(U,s[Z],"nearest"===r||"majority"===r),R.push(U);const V=new Y.Z({width:m,height:f,pixelType:o,pixels:R});if((0,G.pC)(a))V.mask=new Uint8Array(m*f),O(V.mask,a,!0);else if(g){V.mask=new Uint8Array(m*f);for(let Z=0;Z<m*f;Z++)V.mask[Z]=p[Z]<0||_[Z]<0?0:1}return V.updateStatistics(),V}},30994:(vt,At,J)=>{J.d(At,{BH:()=>b,K:()=>B,KC:()=>gt,NL:()=>dt,QI:()=>T,Tg:()=>ct,Yx:()=>xt,nb:()=>S,wF:()=>I,xQ:()=>q});var G=J(2076),Y=J(62208),ft=J(25688),mt=J(79751);const ot=new Map;ot.set("meter-per-second",1),ot.set("kilometer-per-hour",.277778),ot.set("knots",.514444),ot.set("feet-per-second",.3048),ot.set("mile-per-hour",.44704);const ht=180/Math.PI,N=5,dt=new G.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function xt(d,M){return ot.get(d)/ot.get(M)||1}function yt(d){return(450-d)%360}function ct(d,M="geographic"){const[w,A]=d,x=Math.sqrt(w*w+A*A);let y=Math.atan2(A,w)*ht;return y=(360+y)%360,"geographic"===M&&(y=yt(y)),[x,y]}function pt(d,M="geographic"){let w=d[1];"geographic"===M&&(w=yt(w)),w%=360;const A=d[0];return[A*Math.cos(w/ht),A*Math.sin(w/ht)]}function q(d,M,w,A="geographic"){if(!(0,mt.nk)(d)||(0,Y.Wi)(w))return d;const x="vector-magdir"===M?d.clone():(0,Y.Wg)(gt(d,M)),y=x.pixels[1];for(let t=0;t<y.length;t++)y[t]="geographic"===A?(y[t]+w[t]+270)%360:(y[t]+360-w[t])%360;return"vector-magdir"===M?x:gt(x,"vector-magdir")}function gt(d,M,w="geographic",A=1){if(!(0,mt.nk)(d))return d;const{pixels:x,width:y,height:t}=d,l=y*t,e=x[0],i=x[1],r=d.pixelType.startsWith("f")?d.pixelType:"f32",s=ft.Z.createEmptyBand(r,l),a=ft.Z.createEmptyBand(r,l);let o=0;for(let u=0;u<t;u++)for(let n=0;n<y;n++)"vector-uv"===M?([s[o],a[o]]=ct([e[o],i[o]],w),s[o]*=A):([s[o],a[o]]=pt([e[o],i[o]],w),s[o]*=A,a[o]*=A),o++;const c=new ft.Z({pixelType:r,width:d.width,height:d.height,mask:d.mask,validPixelCount:d.validPixelCount,maskIsAlpha:d.maskIsAlpha,pixels:[s,a]});return c.updateStatistics(),c}function T(d,M,w=1){if(1===w||!(0,mt.nk)(d))return d;const A=d.clone(),{pixels:x,width:y,height:t}=A,l=x[0],e=x[1];let i=0;for(let r=0;r<t;r++)for(let s=0;s<y;s++)"vector-uv"===M?(l[i]*=w,e[i]*=w):l[i]*=w,i++;return A.updateStatistics(),A}function b(d,M,w,A,x){if((0,Y.Wi)(x)||!x.spatialReference.equals(d.spatialReference))return{extent:d,width:Math.round(M/A),height:Math.round(w/A),resolution:d.width/M};const y=x.xmin,t=x.ymax,l=(d.xmax-d.xmin)/M*A,e=(d.ymax-d.ymin)/w*A,i=(l+e)/2;return d.xmin=y+Math.floor((d.xmin-y)/l)*l,d.xmax=y+Math.ceil((d.xmax-y)/l)*l,d.ymin=t+Math.floor((d.ymin-t)/e)*e,d.ymax=t+Math.ceil((d.ymax-t)/e)*e,{extent:d,width:Math.round(d.width/l),height:Math.round(d.height/e),resolution:i}}const j=z(0,0,0);function z(d=0,M=0,w=Math.PI,A=!0){A&&(w=(2*Math.PI-w)%(2*Math.PI));const x=A?-1:1,y=13*x,t=-7*x,l=-2*x,e=-16*x,i=21.75,[r,s]=W(0,M+y,w,i),[a,o]=W(d-5.5,M+t,w,i),[c,u]=W(d+5.5,M+t,w,i),[n,h]=W(d-1.5,M+l,w,i),[m,f]=W(d+1.5,M+l,w,i),[g,p]=W(d-1.5,M+e,w,i),[_,k]=W(d+1.5,M+e,w,i);return[r,s,a,o,n,h,m,f,c,u,g,p,_,k]}function X(d=0,M=Math.PI,w=!0){w&&(M=(2*Math.PI-M)%(2*Math.PI));const x=w?-1:1,y=5*x,t=20*x,l=25*x,e=45,o=2*x,c=w?1:-1,u=5*c;let[n,h]=[0+u,0-t],[m,f]=[n+2*c,h],[g,p]=[m-0*c,f+o],[_,k]=[0-u,0-l],[C,F]=[_+0*c,k-o],v=Math.ceil(d/N),O=Math.floor(v/10);v-=8*O;const R=[],U=[];for(let wt=0;wt<v/2;wt++,O--){O<=0&&v%2==1&&wt===(v-1)/2&&(_=0,C=_+0*c,k=(k+h)/2,F=k-o);const[et,nt]=W(_,k,M,e);if(O>0){const[Mt,_t]=W(m,k,M,e),[kt,Pt]=W(n,h,M,e);R.push(Mt),R.push(_t),R.push(et),R.push(nt),R.push(kt),R.push(Pt)}else{const[Mt,_t]=W(m,f,M,e),[kt,Pt]=W(g,p,M,e),[Ct,Ut]=W(C,F,M,e);U.push(et),U.push(nt),U.push(Ct),U.push(Ut),U.push(kt),U.push(Pt),U.push(Mt),U.push(_t)}k+=y,h+=y,f+=y,p+=y,F+=y}const[V,Z]=W(0+u,0+t,M,e),K=7*c,[rt,it]=W(0+K,0+t,M,e),[at,ut]=W(0+u,0-l,M,e),[lt,$]=W(0+K,0-l,M,e);return{pennants:R,barbs:U,shaft:[V,Z,rt,it,at,ut,lt,$]}}function W(d,M,w,A=1){const x=Math.sqrt(d*d+M*M)/A,y=(2*Math.PI+Math.atan2(M,d))%(2*Math.PI);return[x,(2*Math.PI+y-w)%(2*Math.PI)]}const D=[0,1,3,6,10,16,21,27,33,40,47,55,63],Q=[0,.5,1,1.5,2],L=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function H(d,M,w,A){const x=xt(A||"knots",w);let y;for(y=1;y<M.length;y++)if(y===M.length-1){if(d<M[y]*x)break}else if(d<=M[y]*x)break;return Math.min(y-1,M.length-2)}function tt(d,M,w,A,x){let y=0;switch(M){case"beaufort_kn":y=H(d,D,"knots",w);break;case"beaufort_km":y=H(d,D,"kilometer-per-hour",w);break;case"beaufort_ft":y=H(d,D,"feet-per-second",w);break;case"beaufort_m":y=H(d,D,"meter-per-second",w);break;case"classified_arrow":y=H(d,x??[],A,w);break;case"ocean_current_m":y=H(d,Q,"meter-per-second",w);break;case"ocean_current_kn":y=H(d,L,"knots",w)}return y}const E=[];function B(d,M){let A=0,x=0;const{width:y,height:t,mask:l}=d,e=d.pixels[0],i=[],r=[],s=xt(dt.fromJSON(M.inputUnit),"knots"),a="wind_speed"===M.style?N:Number.MAX_VALUE;for(let o=0;o<t;o++)for(let c=0;c<y;c++){const u=e[o*y+c]*s;if((!l||l[o*y+c])&&u<a){for(let h=0;h<4;h++)i[A++]=(c+.5)/y,i[A++]=(o+.5)/t,i[A++]=h<2?-.5:.5,i[A++]=h%2==0?-.5:.5,i[A++]=0,i[A++]=u;const n=4*(A/24-1);r[x++]=n,r[x++]=n+1,r[x++]=n+2,r[x++]=n+1,r[x++]=n+2,r[x++]=n+3}}return{vertexData:new Float32Array(i),indexData:new Uint32Array(r)}}function I(d,M){return"simple_scalar"===M.style?B(d,M):"wind_speed"===M.style?function P(d,M){if(0===E.length)for(let o=0;o<30;o++)E.push(X(5*o,0,!M.invertDirection));const w=xt(dt.fromJSON(M.inputUnit),"knots"),{width:A,height:x,mask:y}=d,t=d.pixels[0],l=d.pixels[1],i=[],r=[];let s=0,a=0;for(let o=0;o<x;o++)for(let c=0;c<A;c++){const u=o*A+c,n=t[u]*w;if((!y||y[o*A+c])&&n>=N){const h=(l[u]+360)%360/180*Math.PI,{pennants:m,barbs:f,shaft:g}=E[Math.min(Math.floor(n/5),29)];if(m.length+f.length===0)continue;let p=i.length/6;const _=(c+.5)/A,k=(o+.5)/x;for(let C=0;C<m.length;C+=2)i[s++]=_,i[s++]=k,i[s++]=m[C],i[s++]=m[C+1]+h,i[s++]=0,i[s++]=n;for(let C=0;C<f.length;C+=2)i[s++]=_,i[s++]=k,i[s++]=f[C],i[s++]=f[C+1]+h,i[s++]=0,i[s++]=n;for(let C=0;C<g.length;C+=2)i[s++]=_,i[s++]=k,i[s++]=g[C],i[s++]=g[C+1]+h,i[s++]=0,i[s++]=n;for(let C=0;C<m.length/6;C++)r[a++]=p,r[a++]=p+1,r[a++]=p+2,p+=3;for(let C=0;C<f.length/8;C++)r[a++]=p,r[a++]=p+1,r[a++]=p+2,r[a++]=p+1,r[a++]=p+2,r[a++]=p+3,p+=4;r[a++]=p+0,r[a++]=p+1,r[a++]=p+2,r[a++]=p+1,r[a++]=p+3,r[a++]=p+2,p+=4}}return{vertexData:new Float32Array(i),indexData:new Uint32Array(r)}}(d,M):function st(d,M){const{style:w,inputUnit:A,outputUnit:x,breakValues:y}=M,t=dt.fromJSON(A),l=dt.fromJSON(x);let r=0,s=0;const{width:a,height:o,mask:c}=d,u=d.pixels[0],n=d.pixels[1],h=(0,Y.pC)(c)?c.filter(p=>p>0).length:a*o,m=new Float32Array(42*h),f=new Uint32Array(15*h),g=M.invertDirection?z(0,0,0,!1):j;for(let p=0;p<o;p++)for(let _=0;_<a;_++){const k=p*a+_;if(!c||c[p*a+_]){const C=(n[k]+360)%360/180*Math.PI,F=tt(u[k],w,t,l,y);for(let O=0;O<g.length;O+=2)m[r++]=(_+.5)/a,m[r++]=(p+.5)/o,m[r++]=g[O],m[r++]=g[O+1]+C,m[r++]=F,m[r++]=u[k];const v=7*(r/42-1);f[s++]=v,f[s++]=v+1,f[s++]=v+2,f[s++]=v+0,f[s++]=v+4,f[s++]=v+3,f[s++]=v+0,f[s++]=v+2,f[s++]=v+3,f[s++]=v+2,f[s++]=v+5,f[s++]=v+3,f[s++]=v+5,f[s++]=v+6,f[s++]=v+3}}return{vertexData:m,indexData:f}}(d,M)}function S(d,M,w,A=[0,0],x=.5){const{width:y,height:t,mask:l}=d,[e,i]=d.pixels,[r,s]=A,a=Math.round((y-r)/w),o=Math.round((t-s)/w),c=a*o,u=new Float32Array(c),n=new Float32Array(c),h=new Uint8Array(c),m="vector-uv"===M;for(let g=0;g<o;g++)for(let p=0;p<a;p++){let _=0;const k=g*a+p,C=Math.max(0,g*w+s),F=Math.max(0,p*w+r),v=Math.min(t,C+w),O=Math.min(y,F+w);for(let R=C;R<v;R++)for(let U=F;U<O;U++){const V=R*y+U;if(!l||l[V]){_++;const Z=m?[e[V],i[V]]:[e[V],(360+i[V])%360],[K,rt]=m?Z:pt(Z);u[k]+=K,n[k]+=rt}}if(_>=(v-C)*(O-F)*(1-x)){h[k]=1;const[R,U]=ct([u[k]/_,n[k]/_]);u[k]=R,n[k]=U}else h[k]=0,u[k]=0,n[k]=0}const f=new ft.Z({width:a,height:o,pixels:[u,n],mask:h});return f.updateStatistics(),f}},37084:(vt,At,J)=>{J.d(At,{GE:()=>q,KK:()=>L});var G=J(15861),ft=(J(29132),J(8314)),mt=J(63290),ot=J(21286),ht=J(62208),N=J(10699),dt=J(4619),xt=J(37053),yt=J(2004);const ct=mt.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),pt=10;function q(E,P,B,I){return gt.apply(this,arguments)}function gt(){return(gt=(0,G.Z)(function*(E,P,B,I){const S=performance.now(),d=function T(E,P){const B=function z(E,P,B,I){if(0===I)return E;const S=Math.round(3*I),d=new Array(2*S+1);let M=0;for(let x=-S;x<=S;x++){const y=Math.exp(-x*x/(I*I));d[x+S]=y,M+=y}for(let x=-S;x<=S;x++)d[x+S]/=M;const w=new Float32Array(E.length);for(let x=0;x<B;x++)for(let y=0;y<P;y++){let t=0,l=0;for(let e=-S;e<=S;e++){if(y+e<0||y+e>=P)continue;const i=d[e+S];t+=i*E[2*(x*P+(y+e))+0],l+=i*E[2*(x*P+(y+e))+1]}w[2*(x*P+y)+0]=t,w[2*(x*P+y)+1]=l}const A=new Float32Array(E.length);for(let x=0;x<P;x++)for(let y=0;y<B;y++){let t=0,l=0;for(let e=-S;e<=S;e++){if(y+e<0||y+e>=B)continue;const i=d[e+S];t+=i*w[2*((y+e)*P+x)+0],l+=i*w[2*((y+e)*P+x)+1]}A[2*(y*P+x)+0]=t,A[2*(y*P+x)+1]=l}return A}(P.data,P.width,P.height,E.smoothing);return E.interpolate?(I,S)=>{const d=Math.floor(I),M=Math.floor(S);if(d<0||d>=P.width)return[0,0];if(M<0||M>=P.height)return[0,0];const w=I-d,A=S-M,t=d<P.width-1?d+1:d,l=M<P.height-1?M+1:M;return[(B[2*(M*P.width+d)]*(1-A)+B[2*(l*P.width+d)]*A)*(1-w)+(B[2*(M*P.width+t)]*(1-A)+B[2*(l*P.width+t)]*A)*w,(B[2*(M*P.width+d)+1]*(1-A)+B[2*(l*P.width+d)+1]*A)*(1-w)+(B[2*(M*P.width+t)+1]*(1-A)+B[2*(l*P.width+t)+1]*A)*w]}:(I,S)=>{const d=Math.round(I),M=Math.round(S);return d<0||d>=P.width||M<0||M>=P.height?[0,0]:[B[2*(M*P.width+d)+0],B[2*(M*P.width+d)+1]]}}(P,B),M=performance.now(),w=function j(E,P,B,I){const S=[],d=new dt.Z,M=1/Math.max(E.lineCollisionWidth,1),w=Math.round(B*M),A=Math.round(I*M),x=new Int32Array(w*A);for(let t=0;t<x.length;t++)x[t]=-1;const y=[];for(let t=0;t<I;t+=E.lineSpacing)for(let l=0;l<B;l+=E.lineSpacing)y.push({x:l,y:t,sort:d.getFloat()});y.sort((t,l)=>t.sort-l.sort);for(const{x:t,y:l}of y)if(d.getFloat()<E.density){const e=b(E,P,t,l,S.length,x,w,A,M);if(e.length<2)continue;S.push(e)}return S}(P,d,B.width,B.height),A=performance.now(),x=function X(E,P){const B=new dt.Z,I=E.reduce((A,x)=>A+x.length,0),S=new Float32Array(4*I),d=new Array(E.length);let M=0,w=0;for(const A of E){const x=M;for(const y of A)S[4*M+0]=y.x,S[4*M+1]=y.y,S[4*M+2]=y.t,S[4*M+3]=y.speed,M++;d[w++]={startVertex:x,numberOfVertices:A.length,totalTime:A[A.length-1].t,timeSeed:P?B.getFloat():0}}return{lineVertices:S,lineDescriptors:d}}(w,!0),y=performance.now(),t="Streamlines"===E?function W(E,P){const{lineVertices:I,lineDescriptors:S}=E;let d=0,M=0;for(const e of S)d+=2*e.numberOfVertices,M+=6*(e.numberOfVertices-1);const w=new Float32Array(9*d),A=new Uint32Array(M);let x=0,y=0;function l(e,i,r,s,a,o,c,u){const n=9*x;let h=0;w[n+h++]=e,w[n+h++]=i,w[n+h++]=1,w[n+h++]=r,w[n+h++]=o,w[n+h++]=c,w[n+h++]=s/2,w[n+h++]=a/2,w[n+h++]=u,x++,w[n+h++]=e,w[n+h++]=i,w[n+h++]=-1,w[n+h++]=r,w[n+h++]=o,w[n+h++]=c,w[n+h++]=-s/2,w[n+h++]=-a/2,w[n+h++]=u,x++}for(const e of S){const{totalTime:i,timeSeed:r}=e;let s=null,a=null,o=null,c=null,u=null,n=null;for(let h=0;h<e.numberOfVertices;h++){const m=I[4*(e.startVertex+h)+0],f=I[4*(e.startVertex+h)+1],g=I[4*(e.startVertex+h)+2],p=I[4*(e.startVertex+h)+3];let _=null,k=null,C=null,F=null;if(h>0){_=m-s,k=f-a;const v=Math.sqrt(_*_+k*k);if(_/=v,k/=v,h>1){let O=_+u,R=k+n;const U=Math.sqrt(O*O+R*R);O/=U,R/=U;const V=Math.min(1/(O*_+R*k),P);O*=V,R*=V,C=-R,F=O}else C=-k,F=_;null!==C&&null!==F&&(l(s,a,o,C,F,i,r,p),A[y++]=x-2,A[y++]=x,A[y++]=x-1,A[y++]=x,A[y++]=x+1,A[y++]=x-1)}s=m,a=f,o=g,u=_,n=k,c=p}l(s,a,o,-n,u,i,r,c)}return{vertexData:w,indexData:A}}(x,pt):function D(E){const{lineVertices:S,lineDescriptors:d}=E;let M=0,w=0;for(const v of d){const O=v.numberOfVertices-1;M+=4*O*2,w+=6*O*2}const A=new Float32Array(16*M),x=new Uint32Array(w);let y,t,l,e,i,r,s,a,o,c,u,n,h,m,f=0,g=0;function k(v,O){let R=o+u,U=c+n;const V=Math.sqrt(R*R+U*U);R/=V,U/=V;const Z=o*R+c*U;R/=Z,U/=Z;let K=u+h,rt=n+m;const it=Math.sqrt(K*K+rt*rt);K/=it,rt/=it;const at=u*K+n*rt;K/=at,rt/=at,function _(v,O,R,U,V,Z,K,rt,it,at,ut,lt,$,wt){const et=16*f;let nt=0;for(const Mt of[1,2])for(const _t of[1,2,3,4])A[et+nt++]=v,A[et+nt++]=O,A[et+nt++]=R,A[et+nt++]=U,A[et+nt++]=K,A[et+nt++]=rt,A[et+nt++]=it,A[et+nt++]=at,A[et+nt++]=Mt,A[et+nt++]=_t,A[et+nt++]=$,A[et+nt++]=wt,A[et+nt++]=V/2,A[et+nt++]=Z/2,A[et+nt++]=ut/2,A[et+nt++]=lt/2,f++}(y,t,l,e,-U,R,i,r,s,a,-rt,K,v,O),function p(){x[g++]=f-8,x[g++]=f-7,x[g++]=f-6,x[g++]=f-7,x[g++]=f-5,x[g++]=f-6,x[g++]=f-4,x[g++]=f-3,x[g++]=f-2,x[g++]=f-3,x[g++]=f-1,x[g++]=f-2}()}function C(v,O,R,U,V,Z){if(o=u,c=n,u=h,n=m,null==o&&null==c&&(o=u,c=n),null!=i&&null!=r){h=v-i,m=O-r;const K=Math.sqrt(h*h+m*m);h/=K,m/=K}null!=o&&null!=c&&k(V,Z),y=i,t=r,l=s,e=a,i=v,r=O,s=R,a=U}function F(v,O){o=u,c=n,u=h,n=m,null==o&&null==c&&(o=u,c=n),null!=o&&null!=c&&k(v,O)}for(const v of d){y=null,t=null,l=null,e=null,i=null,r=null,s=null,a=null,o=null,c=null,u=null,n=null,h=null,m=null;const{totalTime:O,timeSeed:R}=v;for(let U=0;U<v.numberOfVertices;U++)C(S[4*(v.startVertex+U)+0],S[4*(v.startVertex+U)+1],S[4*(v.startVertex+U)+2],S[4*(v.startVertex+U)+3],O,R);F(O,R)}return{vertexData:A,indexData:x}}(x),l=performance.now();return(0,ft.Z)("esri-2d-profiler")&&(ct.info("I.1","_createFlowFieldFromData (ms)",Math.round(M-S)),ct.info("I.2","_getStreamlines (ms)",Math.round(A-M)),ct.info("I.3","createAnimatedLinesData (ms)",Math.round(y-A)),ct.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(l-y)),ct.info("I.5","createFlowMesh (ms)",Math.round(l-S)),ct.info("I.6","Mesh size (bytes)",t.vertexData.buffer.byteLength+t.indexData.buffer.byteLength)),yield Promise.resolve(),(0,N.k_)(I),t})).apply(this,arguments)}function b(E,P,B,I,S,d,M,w,A){const x=[];let y=B,t=I,l=0,[e,i]=P(y,t);e*=E.velocityScale,i*=E.velocityScale;const r=Math.sqrt(e*e+i*i);let s,a;x.push({x:y,y:t,t:l,speed:r});for(let o=0;o<E.verticesPerLine;o++){let[c,u]=P(y,t);c*=E.velocityScale,u*=E.velocityScale;const n=Math.sqrt(c*c+u*u);if(n<E.minSpeedThreshold)return x;const h=c/n,m=u/n;if(y+=h*E.segmentLength,t+=m*E.segmentLength,l+=E.segmentLength/n,Math.acos(h*s+m*a)>E.maxTurnAngle)return x;if(E.collisions){const f=Math.round(y*A),g=Math.round(t*A);if(f<0||f>M-1||g<0||g>w-1)return x;const p=d[g*M+f];if(-1!==p&&p!==S)return x;d[g*M+f]=S}x.push({x:y,y:t,t:l,speed:n}),s=h,a=m}return x}function Q(E,P){const B=P.pixels,{width:I,height:S}=P,d=new Float32Array(I*S*2),M=P.mask||new Uint8Array(I*S*2);if(P.mask||M.fill(255),"vector-uv"===E)for(let w=0;w<I*S;w++)d[2*w+0]=B[0][w],d[2*w+1]=-B[1][w];else if("vector-magdir"===E)for(let w=0;w<I*S;w++){const A=B[0][w],x=(0,ot.Vl)(B[1][w]),y=Math.cos(x-Math.PI/2),t=Math.sin(x-Math.PI/2);d[2*w+0]=y*A,d[2*w+1]=t*A}return{data:d,mask:M,width:I,height:S}}function L(E,P,B,I,S,d){return H.apply(this,arguments)}function H(){return(H=(0,G.Z)(function*(E,P,B,I,S,d){const M=performance.now(),w=(0,xt.C5)(P.spatialReference);if(!w){const u=yield tt(E,P,B,I,S,d);return(0,ft.Z)("esri-2d-profiler")&&ct.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-M)),(0,ft.Z)("esri-2d-profiler")&&ct.info("I.9","Number of parts",1),u}const[A,x]=w.valid,t=Math.ceil(P.width/(x-A)),l=P.width/t,e=Math.round(B/t);let i=P.xmin;const r=[],s=performance.now();for(let u=0;u<t;u++){const n=new yt.Z({xmin:i,xmax:i+l,ymin:P.ymin,ymax:P.ymax,spatialReference:P.spatialReference});r.push(tt(E,n,e,I,S,d)),i+=l}const a=yield Promise.all(r);(0,ft.Z)("esri-2d-profiler")&&ct.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-s)),(0,ft.Z)("esri-2d-profiler")&&ct.info("I.9","Number of parts",a.length);const o={data:new Float32Array(B*I*2),mask:new Uint8Array(B*I),width:B,height:I};let c=0;for(const u of a){for(let n=0;n<u.height;n++)for(let h=0;h<u.width;h++)c+h>=B||(o.data[2*(n*B+c+h)+0]=u.data[2*(n*u.width+h)+0],o.data[2*(n*B+c+h)+1]=u.data[2*(n*u.width+h)+1],o.mask[n*B+c+h]=u.mask[n*u.width+h]);c+=u.width}return(0,ft.Z)("esri-2d-profiler")&&ct.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-M)),o})).apply(this,arguments)}function tt(E,P,B,I,S,d){return st.apply(this,arguments)}function st(){return(st=(0,G.Z)(function*(E,P,B,I,S,d){const M={requestProjectedLocalDirections:!0,signal:d};if((0,ht.pC)(S)&&(M.timeExtent=S),"imagery"===E.type){yield E.load({signal:d});const x=E.rasterInfo.dataType,y=yield E.fetchImage(P,B,I,M);return!y||(0,ht.Wi)(y.pixelData)||(0,ht.Wi)(y.pixelData.pixelBlock)?{data:new Float32Array(B*I*2),mask:new Uint8Array(B*I),width:B,height:I}:Q(x,y.pixelData.pixelBlock)}yield E.load({signal:d});const w=E.rasterInfo.dataType,A=yield E.fetchPixels(P,B,I,M);return!A||(0,ht.Wi)(A.pixelBlock)?{data:new Float32Array(B*I*2),mask:new Uint8Array(B*I),width:B,height:I}:Q(w,A.pixelBlock)})).apply(this,arguments)}}}]);