"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[1711],{61711:(B,y,s)=>{s.r(y),s.d(y,{default:()=>F});var r=s(17626),I=s(26584),v=s(32917),n=s(77712),h=(s(8314),s(63290),s(4619),s(76898)),S=(s(29132),s(88879)),C=s(83761),m=s(62208),M=s(60330),b=s(5075),O=s(20901),w=s(36967),P=s(71774);let d=class extends S.Z{getObjectId(){return this.objectId}};(0,r._)([(0,n.Cb)({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=(0,r._)([(0,h.j)("esri.layers.graphics.controllers.StreamGraphic")],d);class G{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const o=this._idToGraphic.get(e);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(e),o):null}update(e,o){this.onUpdate(e,o)}get size(){return this._idToGraphic.size}}let i=class extends((0,M.v)(C.Z)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new w.g,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){null!==this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||"connected"===this.connection.connectionStatus}_shutdown(){this._clearInterval(),this.connection=(0,m.SC)(this.connection),this.store=(0,m.SC)(this.store),this.removeAllHandles()}_startup(){const{layer:t,layerView:e}=this,{spatialReference:o,definitionExpression:l,geometryDefinition:u,objectIdField:p,timeInfo:Z,purgeOptions:x,maxReconnectionAttempts:D,maxReconnectionInterval:N,customParameters:A}=t,Q=t.geometryType?P.M.toJSON(t.geometryType):null,z=o,g=e.view.spatialReference;this.clear(),this._set("connection",(0,O.createConnection)(t.parsedUrl,z,g,Q,l,u,D,N,A??void 0)),this._outSpatialReference=g.toJSON(),this.store=new G(this._onUpdate.bind(this)),this.featuresManager=new b.Qo(this.store,p,Z.toJSON(),x);const f="startup-watches";this.removeHandles(f),this.addHandles([t.on("send-message-to-socket",c=>this.connection.sendMessageToSocket(c)),t.on("send-message-to-client",c=>this.connection.sendMessageToClient(c)),this.connection.on("data-received",c=>this._onFeature(c)),this.connection.on("message-received",c=>this._onWebSocketMessage(c)),(0,v.YP)(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],f),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{null==t.geometry||t.geometry.spatialReference||(t.geometry.spatialReference=this._outSpatialReference);const e=d.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){null!=e&&this.graphics.removeMany(e),null!=t&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),l=o-e;if(l>2500){e=o;const u=Math.round(this._updateInfo.client/(l/1e3)),p=Math.round(this._updateInfo.websocket/(l/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:u,websocket:p})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){null==this.connection&&this._startup()}clearGraphics(){this.graphics.clear()}};(0,r._)([(0,n.Cb)()],i.prototype,"isPaused",void 0),(0,r._)([(0,n.Cb)({constructOnly:!0})],i.prototype,"layer",void 0),(0,r._)([(0,n.Cb)({constructOnly:!0})],i.prototype,"layerView",void 0),(0,r._)([(0,n.Cb)()],i.prototype,"connection",void 0),(0,r._)([(0,n.Cb)({readOnly:!0})],i.prototype,"updating",null),i=(0,r._)([(0,h.j)("esri.layers.graphics.controllers.StreamController")],i);var L=s(96854),j=s(79216),T=s(19702),V=s(23147),U=s(45611),E=s(61092);let a=class extends((0,E.Z)((0,j.R)((0,T.A)(U.Z)))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=V.j.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles((0,v.YP)(()=>this.suspended,t=>{this.controller&&this._onSuspendedChange(t)}))}get connectionError(){const t=this.controller?.connection?.errorString;return t?new I.Z("stream-controller",t):null}createQuery(){return new L.Z({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e?.signal)}get _streamConnectionStatus(){return this.controller?.connection?.connectionStatus??"disconnected"}createController(){return new i({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){this.controller?.pauseStream()}_doResume(){this.controller?.resumeStream()}_doDisconnect(){this.controller?.disconnect(),this._doPause()}_doConnect(){this.controller?.connect(),this.resume()}_doClear(){this.controller?.clearGraphics()}};(0,r._)([(0,n.Cb)({readOnly:!0})],a.prototype,"updatePolicy",void 0),(0,r._)([(0,n.Cb)({readOnly:!0})],a.prototype,"connectionError",null),(0,r._)([(0,n.Cb)()],a.prototype,"controller",void 0),(0,r._)([(0,n.Cb)({readOnly:!0})],a.prototype,"hasZ",void 0),(0,r._)([(0,n.Cb)({readOnly:!0})],a.prototype,"hasM",void 0),(0,r._)([(0,n.Cb)({readOnly:!0})],a.prototype,"_streamConnectionStatus",null),a=(0,r._)([(0,h.j)("esri.views.3d.layers.StreamLayerView3D")],a);const F=a}}]);