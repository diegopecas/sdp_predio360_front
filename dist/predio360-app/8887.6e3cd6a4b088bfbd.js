"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[8887],{48887:(ee,h,e)=>{e.r(h),e.d(h,{default:()=>q});var c=e(15861),a=e(17626),M=e(84792),C=e(97478),v=e(26584),T=e(80542),f=e(47877),R=e(62208),L=e(99959),D=e(10699),_=e(77712),U=e(90912),A=(e(85931),e(68653)),j=e(76898),S=e(99433),u=e(31283),x=e(2004),B=e(83137),K=e(44917),W=e(50085),b=e(19027),N=e(65088),Z=e(552),F=e(50107),J=e(49286),G=e(6647),V=e(30346),z=e(99555),H=e(66120),Q=e(97941),$=e(13812),Y=e(14772),X=e(12585),w=e(39058),g=e(13410),k=e(5676),I=e(41039);let s=class extends((0,Z.h)((0,Q.n)((0,z.M)((0,H.x)((0,b.O)((0,N.Y)((0,J.q)((0,G.I)((0,L.R)((0,V.Q)((0,W.V)((0,F.N)((0,T.p)(K.Z)))))))))))))){constructor(...r){super(...r),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(r,t){return"string"==typeof r?{url:r,...t}:r}load(r){const t=(0,R.pC)(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(D.r9).then(()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(r,t){const l=t.supportedImageFormatTypes;return l&&l.includes("PNG32")?"png32":"png24"}writeSublayers(r,t,l,i){if(!this.loaded||!r)return;const p=r.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).toArray();let o=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap?.supportsDynamicLayers){const n=(0,u.M9)(i.origin);if(n===u.s3.PORTAL_ITEM){const y=this.createSublayersForOrigin("service").sublayers;o=(0,g.QV)(p,y,u.s3.SERVICE)}else if(n>u.s3.PORTAL_ITEM){const y=this.createSublayersForOrigin("portal-item");o=(0,g.QV)(p,y.sublayers,(0,u.M9)(y.origin))}}const E=[],m={writeSublayerStructure:o,...i};let d=o;p.forEach(n=>{const y=n.write({},m);E.push(y),d=d||"user"===n.originOf("visible")}),E.some(n=>Object.keys(n).length>1)&&(t.layers=E),d&&(t.visibleLayers=p.filter(n=>n.visible).map(n=>n.id))}createExportImageParameters(r,t,l,i){const p=i&&i.pixelRatio||1;r&&this.version>=10&&(r=r.clone().shiftCentralMeridian());const o=new Y.R({layer:this,floors:i?.floors,scale:(0,B.yZ)({extent:r,width:t})*p}),E=o.toJSON();o.destroy();const m=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},d=r&&r.spatialReference,n=d.wkid||JSON.stringify(d.toJSON());E.dpi*=p;const y={};if(i?.timeExtent){const{start:O,end:P}=i.timeExtent.toJSON();y.time=O&&P&&O===P?""+O:`${O??"null"},${P??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:r&&r.xmin+","+r.ymin+","+r.xmax+","+r.ymax,bboxSR:n,imageSR:n,size:t+","+l,...E,...m,...y}}fetchImage(r,t,l,i){var p=this;return(0,c.Z)(function*(){const{data:o}=yield p._fetchImage("image",r,t,l,i);return o})()}fetchImageBitmap(r,t,l,i){var p=this;return(0,c.Z)(function*(){const{data:o,url:E}=yield p._fetchImage("blob",r,t,l,i);return(0,X.g)(o,E)})()}fetchRecomputedExtents(r={}){var t=this;return(0,c.Z)(function*(){const l={...r,query:{returnUpdates:!0,f:"json",...t.customParameters,token:t.apiKey}},{data:i}=yield(0,M.default)(t.url,l),{extent:p,fullExtent:o,timeExtent:E}=i,m=p||o;return{fullExtent:m&&x.Z.fromJSON(m),timeExtent:E&&C.Z.fromJSON({start:E[0],end:E[1]})}})()}loadAll(){return(0,f.G)(this,r=>{r(this.allSublayers)})}serviceSupportsSpatialReference(r){return(0,k.D)(this,r)}_fetchImage(r,t,l,i,p){var o=this;return(0,c.Z)(function*(){const E={responseType:r,signal:p?.signal??null,query:{...o.parsedUrl.query,...o.createExportImageParameters(t,l,i,p),f:"image",...o.refreshParameters,...o.customParameters,token:o.apiKey}},m=o.parsedUrl.path+"/export";if(null!=E.query?.dynamicLayers&&!o.capabilities?.exportMap?.supportsDynamicLayers)throw new v.Z("mapimagelayer:dynamiclayer-not-supported",`service ${o.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:E.query});try{const{data:d}=yield(0,M.default)(m,E);return{data:d,url:m}}catch(d){throw(0,D.D_)(d)?d:new v.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:d})}})()}_fetchService(r){var t=this;return(0,c.Z)(function*(){if(t.sourceJSON)return void t.read(t.sourceJSON,{origin:"service",url:t.parsedUrl});const{data:l,ssl:i}=yield(0,M.default)(t.parsedUrl.path,{query:{f:"json",...t.parsedUrl.query,...t.customParameters,token:t.apiKey},signal:r});i&&(t.url=t.url.replace(/^http:/i,"https:")),t.sourceJSON=l,t.read(l,{origin:"service",url:t.parsedUrl})})()}};(0,a._)([(0,_.Cb)({type:I.Z})],s.prototype,"dateFieldsTimeReference",void 0),(0,a._)([(0,_.Cb)({type:Boolean})],s.prototype,"datesInUnknownTimezone",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"dpi",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"gdbVersion",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"imageFormat",void 0),(0,a._)([(0,A.r)("imageFormat",["supportedImageFormatTypes"])],s.prototype,"readImageFormat",null),(0,a._)([(0,_.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],s.prototype,"imageMaxHeight",void 0),(0,a._)([(0,_.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],s.prototype,"imageMaxWidth",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"imageTransparency",void 0),(0,a._)([(0,_.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),(0,a._)([(0,_.Cb)({json:{read:!1,write:!1}})],s.prototype,"labelsVisible",void 0),(0,a._)([(0,_.Cb)({type:["ArcGISMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),(0,a._)([(0,_.Cb)({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),(0,a._)([(0,_.Cb)({type:I.Z})],s.prototype,"preferredTimeReference",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"sourceJSON",void 0),(0,a._)([(0,_.Cb)({json:{write:{ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),(0,a._)([(0,S.c)("sublayers",{layers:{type:[w.Z]},visibleLayers:{type:[U.z8]}})],s.prototype,"writeSublayers",null),(0,a._)([(0,_.Cb)({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),(0,a._)([(0,_.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],s.prototype,"type",void 0),(0,a._)([(0,_.Cb)($.HQ)],s.prototype,"url",void 0),s=(0,a._)([(0,j.j)("esri.layers.MapImageLayer")],s);const q=s}}]);