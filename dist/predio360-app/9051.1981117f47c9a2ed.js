"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[9051],{39051:(P,h,t)=>{t.r(h),t.d(h,{default:()=>v});var a=t(17626),c=t(26584),d=t(54024),l=t(32917),i=t(77712),E=(t(8314),t(63290),t(4619),t(76898)),u=t(17253),p=t(46850),m=t(57121),y=t(61092);let r=class extends((0,y.Z)(p.default)){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([(0,l.YP)(()=>this.layer.customParameters,e=>this._worker.streamMessenger.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._worker.streamMessenger.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>{this._worker.streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&"clear"===e.type&&this.incrementSourceRefreshVersion()}),(0,l.YP)(()=>this.layer.purgeOptions,()=>this._update()),(0,l.YP)(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c.Z("stream-controller",this.pipelineErrorString):null}on(e,n){if(Array.isArray(e))return(0,d.AL)(e.map(M=>this.on(M,n)));const s=["data-received","message-received"].includes(e);s&&this._worker.streamMessenger.enableEvent(e,!0);const _=super.on(e,n),o=this;return(0,d.kB)(()=>{_.remove(),s&&(o._worker.closed||o.hasEventListener(e)||o._worker.streamMessenger.enableEvent(e,!1))})}queryLatestObservations(e,n){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new c.Z("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return(0,m.Y)(this._worker.features.executeQueryForLatestObservations(this._cleanUpQuery(e),n).then(s=>{const _=u.Z.fromJSON(s);return _.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),_}),new u.Z({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){null!=this._refreshInterval&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this._worker.streamMessenger.disconnect(),this._doPause()}_doConnect(){this._worker.streamMessenger.connect(),this.resume()}_doClear(){this._worker.streamMessenger.clear(),null==this._refreshInterval&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),n=this;return{...e,get container(){return n.featureContainer},setProperty:s=>{this.set(s.propertyName,s.value)}}}};(0,a._)([(0,i.Cb)()],r.prototype,"pipelineConnectionStatus",void 0),(0,a._)([(0,i.Cb)()],r.prototype,"pipelineErrorString",void 0),(0,a._)([(0,i.Cb)({readOnly:!0})],r.prototype,"connectionError",null),(0,a._)([(0,i.Cb)({readOnly:!0})],r.prototype,"_streamConnectionStatus",null),r=(0,a._)([(0,E.j)("esri.views.2d.layers.StreamLayerView2D")],r);const v=r}}]);