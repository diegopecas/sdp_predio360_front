"use strict";(self.webpackChunkpredio360_app=self.webpackChunkpredio360_app||[]).push([[1530],{82557:(Q,L,a)=>{a.r(L),a.d(L,{default:()=>dt});var w=a(15861),V=a(17626),C=a(24263),m=a(46160),d=a(62208),u=a(32917),f=a(21726),x=a(77712),k=(a(8314),a(63290),a(4619),a(76898)),Y=a(2004),A=a(55915),N=a(65234),R=a(98686),_=a(2618),B=a(51815),G=a(90301),q=a(91757),tt=a(56800),F=a(36275),O=a(61005),et=a(45611),it=a(84792),H=a(72642),J=a(28594),at=a(50392),st=a(86859),nt=a(80738),S=a(67969),ot=a(85775),rt=a(38982),lt=a(75617),ht=a(18952),W=a(31548);let pt=(()=>{class t{constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(t._instance)return t._instanceRefCount++,t._instance;t._instanceRefCount=1,t._instance=this,this._ownsRctx=!0;const s=document.createElement("canvas"),n=(0,nt.k)(s);n.getExtension("OES_texture_float"),this._rctx=new lt.x(n,{})}const r=(0,st.s)("raster/reproject","raster/reproject",new Map([["a_position",0]]),{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new at.Z(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,o,r=!1){const s=(0,A.project)(e.extent,o),n=new H.Z({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:p,y:c}=(0,J.VO)(n,o,e.extent);let l=(p+c)/2;const g=Math.round((s.xmax-s.xmin)/l),h=Math.round((s.ymax-s.ymin)/l);l=(s.width/g+s.height/h)/2;const z=new H.Z({x:l,y:l,spatialReference:s.spatialReference}),I=(0,J.Qp)({projectedExtent:s,srcBufferExtent:e.extent,pixelSize:z,hasWrapAround:!0,spacing:[16,16]}),M=(0,rt.Br)(this._rctx,I),T=new W.X(g,h);T.wrapMode=S.e8.CLAMP_TO_EDGE;const y=new ot.X(this._rctx,T);this._rctx.bindFramebuffer(y),this._rctx.setViewport(0,0,g,h),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(M,1),this._quad.bind();const{width:U=0,height:j=0}=e.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",U,j),this._program.setUniform2fv("u_transformSpacing",I.spacing),this._program.setUniform2fv("u_transformGridSize",I.size),this._program.setUniform2f("u_targetImageSize",g,h),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),M.dispose(),r){const{width:E,height:D}=y,X=new ImageData(E??0,D??0);y.readPixels(0,0,E??0,D??0,S.VI.RGBA,S.Br.UNSIGNED_BYTE,X.data);const ct=y.detachColorTexture(S.VY.COLOR_ATTACHMENT0);return y.dispose(),{texture:ct,extent:s,imageData:X}}const v=y.detachColorTexture(S.VY.COLOR_ATTACHMENT0);return y.dispose(),{texture:v,extent:s}}reprojectBitmapData(e,o){const r=(0,G.JZ)(e.bitmapData)?(0,G.RL)(e.bitmapData):e.bitmapData,s=new W.X;s.wrapMode=S.e8.CLAMP_TO_EDGE,s.width=e.bitmapData.width,s.height=e.bitmapData.height;const n=new ht.x(this._rctx,s,r),p=this.reprojectTexture({texture:n,extent:e.extent},o,!0);p.texture.dispose();const c=document.createElement("canvas"),l=p.imageData;return c.width=l.width,c.height=l.height,c.getContext("2d").putImageData(l,0,0),{bitmapData:c,extent:p.extent}}loadAndReprojectBitmapData(e,o,r){var s=this;return(0,w.Z)(function*(){const n=(yield(0,it.Z)(e,{responseType:"image"})).data,p=document.createElement("canvas");p.width=n.width,p.height=n.height;const c=p.getContext("2d");c.drawImage(n,0,0);const l=c.getImageData(0,0,p.width,p.height);if(o.spatialReference.equals(r))return{bitmapData:l,extent:o};const g=s.reprojectBitmapData({bitmapData:l,extent:o},r);return{bitmapData:g.bitmapData,extent:g.extent}})()}destroy(){this._ownsRctx?(t._instanceRefCount--,0===t._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),t._instance=null)):(this._quad.dispose(),this._program.dispose())}}return t._instanceRefCount=0,t})();class K{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let b=class extends((0,tt.y)(et.Z)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new q.c,this._kmlVisualData=new K,this._fetchController=null,this.allVisiblePoints=new B.J,this.allVisiblePolylines=new B.J,this.allVisiblePolygons=new B.J,this.allVisibleMapImages=new m.Z}hitTest(t,i){var e=this;return(0,w.Z)(function*(){const o=e.layer;return[e._pointsView?.hitTest(t),e._polylinesView?.hitTest(t),e._polygonsView?.hitTest(t)].flat().filter(Boolean).map(r=>(r.layer=o,r.sourceLayer=o,{type:"graphic",graphic:r,layer:o,mapPoint:t}))})()}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new O.Z({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new F.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new O.Z({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new F.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new O.Z({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new F.Z(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",t=>{t.added.forEach(i=>this._addMapImage(i)),t.removed.forEach(i=>this._removeMapImage(i))}),(0,u.YP)(()=>this.layer.visibleSublayers,t=>{for(const[i,e]of this._kmlVisualData.allSublayers)e.visibility=0;for(const i of t){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new pt}detach(){this._fetchController=(0,d.IM)(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=(0,d.SC)(this._polygonsView),this._polylinesView=(0,d.SC)(this._polylinesView),this._pointsView=(0,d.SC)(this._pointsView),this._imageReprojector=(0,d.SC)(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,Y.Z.fromJSON(t.extent),this.view.spatialReference).then(i=>{const e=new G.eY(i.bitmapData);e.x=i.extent.xmin,e.y=i.extent.ymax,e.resolution=i.extent.width/i.bitmapData.width,e.rotation=t.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(t,e)})}_getViewDependentUrl(t,i){return(0,w.Z)(function*(){const{viewFormat:e,viewBoundScale:o,httpQuery:r}=t;if(null!=e){if(null==i)throw new Error("Loading this network link requires a view state.");let s;if(yield(0,A.load)(),null!=o&&1!==o){const v=new Y.Z(i.extent);v.expand(o),s=v}else s=i.extent;s=(0,A.project)(s,N.Z.WGS84);const n=(0,A.project)(s,N.Z.WebMercator),p=s.xmin,c=s.xmax,l=s.ymin,g=s.ymax,h=i.size[0]*i.pixelRatio,z=i.size[1]*i.pixelRatio,I=Math.max(n.width,n.height),M={"[bboxWest]":p.toString(),"[bboxEast]":c.toString(),"[bboxSouth]":l.toString(),"[bboxNorth]":g.toString(),"[lookatLon]":s.center.x.toString(),"[lookatLat]":s.center.y.toString(),"[lookatRange]":I.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":s.center.x.toString(),"[lookatTerrainLat]":s.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":s.center.x.toString(),"[cameraLat]":s.center.y.toString(),"[cameraAlt]":I.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":h.toString(),"[vertPixels]":z.toString(),"[terrainEnabled]":"0","[clientVersion]":C.i8,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},T=v=>{for(const E in v){let D;for(D in M)v[E]=v[E].replace(D,M[D])}},y=(0,f.u0)(e);T(y);let U={};null!=r&&(U=(0,f.u0)(r),T(U));const j=(0,_.en)(t.href);return j.query={...j.query,...y,...U},`${j.path}?${(0,f.B7)(y)}`}return t.href})()}_fetchService(t){var i=this;return(0,w.Z)(function*(){const e=new K;yield i._loadVisualData(i.layer.url,e,t),i._kmlVisualData=e,i._refreshCollections()})()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t))}_isSublayerVisible(t){const i=this._kmlVisualData.allSublayers.get(t);return!!i?.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(t,i,e){var o=this;return this._fetchParsedKML(t,e).then(function(){var r=(0,w.Z)(function*(s){for(const n of s.sublayers){i.allSublayers.set(n.id,n);const p=n.points?yield(0,R.Yu)(n.points):[],c=n.polylines?yield(0,R.Yu)(n.polylines):[],l=n.polygons?yield(0,R.Yu)(n.polygons):[],g=n.mapImages||[];if(i.allPoints.push(...p.map(h=>({item:h,sublayerId:n.id}))),i.allPolylines.push(...c.map(h=>({item:h,sublayerId:n.id}))),i.allPolygons.push(...l.map(h=>({item:h,sublayerId:n.id}))),i.allMapImages.push(...g.map(h=>({item:h,sublayerId:n.id}))),n.networkLink){const h=yield o._getViewDependentUrl(n.networkLink,o.view.state);yield o._loadVisualData(h,i,e)}}});return function(s){return r.apply(this,arguments)}}())}_fetchParsedKML(t,i){return(0,R.CS)(t,this.layer.spatialReference,this.layer.refreshInterval,i).then(e=>(0,R.Cw)(e.data))}_removeMapImage(t){const i=this._bitmapIndex.get(t);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(t))}};(0,V._)([(0,x.Cb)()],b.prototype,"_pointsView",void 0),(0,V._)([(0,x.Cb)()],b.prototype,"_polylinesView",void 0),(0,V._)([(0,x.Cb)()],b.prototype,"_polygonsView",void 0),(0,V._)([(0,x.Cb)()],b.prototype,"updating",void 0),b=(0,V._)([(0,k.j)("esri.views.2d.layers.KMLLayerView2D")],b);const dt=b},80322:(Q,L,a)=>{function w(C){const{options:m,value:d}=C;return"number"==typeof m[d]}function V(C){let m="";for(const d in C){const u=C[d];if("boolean"==typeof u)u&&(m+=`#define ${d}\n`);else if("number"==typeof u)m+=`#define ${d} ${u.toFixed()}\n`;else if("object"==typeof u)if(w(u)){const{value:f,options:x,namespace:P}=u,Z=P?`${P}_`:"";for(const $ in x)m+=`#define ${Z}${$} ${x[$].toFixed()}\n`;m+=`#define ${d} ${Z}${f}\n`}else{const f=u.options;let x=0;for(const P in f)m+=`#define ${f[P]} ${(x++).toFixed()}\n`;m+=`#define ${d} ${f[u.value]}\n`}}return m}a.d(L,{K:()=>V})}}]);